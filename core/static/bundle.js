/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ var __webpack_modules__ = ({

/***/ "./node_modules/flatpickr/dist/esm/index.js":
/*!**************************************************!*\
  !*** ./node_modules/flatpickr/dist/esm/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _types_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types/options */ \"./node_modules/flatpickr/dist/esm/types/options.js\");\n/* harmony import */ var _l10n_default__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./l10n/default */ \"./node_modules/flatpickr/dist/esm/l10n/default.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./node_modules/flatpickr/dist/esm/utils/index.js\");\n/* harmony import */ var _utils_dom__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/dom */ \"./node_modules/flatpickr/dist/esm/utils/dom.js\");\n/* harmony import */ var _utils_dates__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/dates */ \"./node_modules/flatpickr/dist/esm/utils/dates.js\");\n/* harmony import */ var _utils_formatting__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/formatting */ \"./node_modules/flatpickr/dist/esm/utils/formatting.js\");\n/* harmony import */ var _utils_polyfills__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/polyfills */ \"./node_modules/flatpickr/dist/esm/utils/polyfills.js\");\n/* harmony import */ var _utils_polyfills__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_utils_polyfills__WEBPACK_IMPORTED_MODULE_6__);\nvar __assign = (undefined && undefined.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (undefined && undefined.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n\n\n\n\n\n\n\nvar DEBOUNCED_CHANGE_MS = 300;\nfunction FlatpickrInstance(element, instanceConfig) {\n    var self = {\n        config: __assign(__assign({}, _types_options__WEBPACK_IMPORTED_MODULE_0__.defaults), flatpickr.defaultConfig),\n        l10n: _l10n_default__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    };\n    self.parseDate = (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.createDateParser)({ config: self.config, l10n: self.l10n });\n    self._handlers = [];\n    self.pluginElements = [];\n    self.loadedPlugins = [];\n    self._bind = bind;\n    self._setHoursFromDate = setHoursFromDate;\n    self._positionCalendar = positionCalendar;\n    self.changeMonth = changeMonth;\n    self.changeYear = changeYear;\n    self.clear = clear;\n    self.close = close;\n    self.onMouseOver = onMouseOver;\n    self._createElement = _utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement;\n    self.createDay = createDay;\n    self.destroy = destroy;\n    self.isEnabled = isEnabled;\n    self.jumpToDate = jumpToDate;\n    self.updateValue = updateValue;\n    self.open = open;\n    self.redraw = redraw;\n    self.set = set;\n    self.setDate = setDate;\n    self.toggle = toggle;\n    function setupHelperFunctions() {\n        self.utils = {\n            getDaysInMonth: function (month, yr) {\n                if (month === void 0) { month = self.currentMonth; }\n                if (yr === void 0) { yr = self.currentYear; }\n                if (month === 1 && ((yr % 4 === 0 && yr % 100 !== 0) || yr % 400 === 0))\n                    return 29;\n                return self.l10n.daysInMonth[month];\n            },\n        };\n    }\n    function init() {\n        self.element = self.input = element;\n        self.isOpen = false;\n        parseConfig();\n        setupLocale();\n        setupInputs();\n        setupDates();\n        setupHelperFunctions();\n        if (!self.isMobile)\n            build();\n        bindEvents();\n        if (self.selectedDates.length || self.config.noCalendar) {\n            if (self.config.enableTime) {\n                setHoursFromDate(self.config.noCalendar ? self.latestSelectedDateObj : undefined);\n            }\n            updateValue(false);\n        }\n        setCalendarWidth();\n        var isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n        if (!self.isMobile && isSafari) {\n            positionCalendar();\n        }\n        triggerEvent(\"onReady\");\n    }\n    function getClosestActiveElement() {\n        var _a;\n        return (((_a = self.calendarContainer) === null || _a === void 0 ? void 0 : _a.getRootNode())\n            .activeElement || document.activeElement);\n    }\n    function bindToInstance(fn) {\n        return fn.bind(self);\n    }\n    function setCalendarWidth() {\n        var config = self.config;\n        if (config.weekNumbers === false && config.showMonths === 1) {\n            return;\n        }\n        else if (config.noCalendar !== true) {\n            window.requestAnimationFrame(function () {\n                if (self.calendarContainer !== undefined) {\n                    self.calendarContainer.style.visibility = \"hidden\";\n                    self.calendarContainer.style.display = \"block\";\n                }\n                if (self.daysContainer !== undefined) {\n                    var daysWidth = (self.days.offsetWidth + 1) * config.showMonths;\n                    self.daysContainer.style.width = daysWidth + \"px\";\n                    self.calendarContainer.style.width =\n                        daysWidth +\n                            (self.weekWrapper !== undefined\n                                ? self.weekWrapper.offsetWidth\n                                : 0) +\n                            \"px\";\n                    self.calendarContainer.style.removeProperty(\"visibility\");\n                    self.calendarContainer.style.removeProperty(\"display\");\n                }\n            });\n        }\n    }\n    function updateTime(e) {\n        if (self.selectedDates.length === 0) {\n            var defaultDate = self.config.minDate === undefined ||\n                (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.compareDates)(new Date(), self.config.minDate) >= 0\n                ? new Date()\n                : new Date(self.config.minDate.getTime());\n            var defaults = (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.getDefaultHours)(self.config);\n            defaultDate.setHours(defaults.hours, defaults.minutes, defaults.seconds, defaultDate.getMilliseconds());\n            self.selectedDates = [defaultDate];\n            self.latestSelectedDateObj = defaultDate;\n        }\n        if (e !== undefined && e.type !== \"blur\") {\n            timeWrapper(e);\n        }\n        var prevValue = self._input.value;\n        setHoursFromInputs();\n        updateValue();\n        if (self._input.value !== prevValue) {\n            self._debouncedChange();\n        }\n    }\n    function ampm2military(hour, amPM) {\n        return (hour % 12) + 12 * (0,_utils__WEBPACK_IMPORTED_MODULE_2__.int)(amPM === self.l10n.amPM[1]);\n    }\n    function military2ampm(hour) {\n        switch (hour % 24) {\n            case 0:\n            case 12:\n                return 12;\n            default:\n                return hour % 12;\n        }\n    }\n    function setHoursFromInputs() {\n        if (self.hourElement === undefined || self.minuteElement === undefined)\n            return;\n        var hours = (parseInt(self.hourElement.value.slice(-2), 10) || 0) % 24, minutes = (parseInt(self.minuteElement.value, 10) || 0) % 60, seconds = self.secondElement !== undefined\n            ? (parseInt(self.secondElement.value, 10) || 0) % 60\n            : 0;\n        if (self.amPM !== undefined) {\n            hours = ampm2military(hours, self.amPM.textContent);\n        }\n        var limitMinHours = self.config.minTime !== undefined ||\n            (self.config.minDate &&\n                self.minDateHasTime &&\n                self.latestSelectedDateObj &&\n                (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.compareDates)(self.latestSelectedDateObj, self.config.minDate, true) ===\n                    0);\n        var limitMaxHours = self.config.maxTime !== undefined ||\n            (self.config.maxDate &&\n                self.maxDateHasTime &&\n                self.latestSelectedDateObj &&\n                (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.compareDates)(self.latestSelectedDateObj, self.config.maxDate, true) ===\n                    0);\n        if (self.config.maxTime !== undefined &&\n            self.config.minTime !== undefined &&\n            self.config.minTime > self.config.maxTime) {\n            var minBound = (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.calculateSecondsSinceMidnight)(self.config.minTime.getHours(), self.config.minTime.getMinutes(), self.config.minTime.getSeconds());\n            var maxBound = (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.calculateSecondsSinceMidnight)(self.config.maxTime.getHours(), self.config.maxTime.getMinutes(), self.config.maxTime.getSeconds());\n            var currentTime = (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.calculateSecondsSinceMidnight)(hours, minutes, seconds);\n            if (currentTime > maxBound && currentTime < minBound) {\n                var result = (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.parseSeconds)(minBound);\n                hours = result[0];\n                minutes = result[1];\n                seconds = result[2];\n            }\n        }\n        else {\n            if (limitMaxHours) {\n                var maxTime = self.config.maxTime !== undefined\n                    ? self.config.maxTime\n                    : self.config.maxDate;\n                hours = Math.min(hours, maxTime.getHours());\n                if (hours === maxTime.getHours())\n                    minutes = Math.min(minutes, maxTime.getMinutes());\n                if (minutes === maxTime.getMinutes())\n                    seconds = Math.min(seconds, maxTime.getSeconds());\n            }\n            if (limitMinHours) {\n                var minTime = self.config.minTime !== undefined\n                    ? self.config.minTime\n                    : self.config.minDate;\n                hours = Math.max(hours, minTime.getHours());\n                if (hours === minTime.getHours() && minutes < minTime.getMinutes())\n                    minutes = minTime.getMinutes();\n                if (minutes === minTime.getMinutes())\n                    seconds = Math.max(seconds, minTime.getSeconds());\n            }\n        }\n        setHours(hours, minutes, seconds);\n    }\n    function setHoursFromDate(dateObj) {\n        var date = dateObj || self.latestSelectedDateObj;\n        if (date && date instanceof Date) {\n            setHours(date.getHours(), date.getMinutes(), date.getSeconds());\n        }\n    }\n    function setHours(hours, minutes, seconds) {\n        if (self.latestSelectedDateObj !== undefined) {\n            self.latestSelectedDateObj.setHours(hours % 24, minutes, seconds || 0, 0);\n        }\n        if (!self.hourElement || !self.minuteElement || self.isMobile)\n            return;\n        self.hourElement.value = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.pad)(!self.config.time_24hr\n            ? ((12 + hours) % 12) + 12 * (0,_utils__WEBPACK_IMPORTED_MODULE_2__.int)(hours % 12 === 0)\n            : hours);\n        self.minuteElement.value = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.pad)(minutes);\n        if (self.amPM !== undefined)\n            self.amPM.textContent = self.l10n.amPM[(0,_utils__WEBPACK_IMPORTED_MODULE_2__.int)(hours >= 12)];\n        if (self.secondElement !== undefined)\n            self.secondElement.value = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.pad)(seconds);\n    }\n    function onYearInput(event) {\n        var eventTarget = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.getEventTarget)(event);\n        var year = parseInt(eventTarget.value) + (event.delta || 0);\n        if (year / 1000 > 1 ||\n            (event.key === \"Enter\" && !/[^\\d]/.test(year.toString()))) {\n            changeYear(year);\n        }\n    }\n    function bind(element, event, handler, options) {\n        if (event instanceof Array)\n            return event.forEach(function (ev) { return bind(element, ev, handler, options); });\n        if (element instanceof Array)\n            return element.forEach(function (el) { return bind(el, event, handler, options); });\n        element.addEventListener(event, handler, options);\n        self._handlers.push({\n            remove: function () { return element.removeEventListener(event, handler, options); },\n        });\n    }\n    function triggerChange() {\n        triggerEvent(\"onChange\");\n    }\n    function bindEvents() {\n        if (self.config.wrap) {\n            [\"open\", \"close\", \"toggle\", \"clear\"].forEach(function (evt) {\n                Array.prototype.forEach.call(self.element.querySelectorAll(\"[data-\" + evt + \"]\"), function (el) {\n                    return bind(el, \"click\", self[evt]);\n                });\n            });\n        }\n        if (self.isMobile) {\n            setupMobile();\n            return;\n        }\n        var debouncedResize = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.debounce)(onResize, 50);\n        self._debouncedChange = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.debounce)(triggerChange, DEBOUNCED_CHANGE_MS);\n        if (self.daysContainer && !/iPhone|iPad|iPod/i.test(navigator.userAgent))\n            bind(self.daysContainer, \"mouseover\", function (e) {\n                if (self.config.mode === \"range\")\n                    onMouseOver((0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.getEventTarget)(e));\n            });\n        bind(self._input, \"keydown\", onKeyDown);\n        if (self.calendarContainer !== undefined) {\n            bind(self.calendarContainer, \"keydown\", onKeyDown);\n        }\n        if (!self.config.inline && !self.config.static)\n            bind(window, \"resize\", debouncedResize);\n        if (window.ontouchstart !== undefined)\n            bind(window.document, \"touchstart\", documentClick);\n        else\n            bind(window.document, \"mousedown\", documentClick);\n        bind(window.document, \"focus\", documentClick, { capture: true });\n        if (self.config.clickOpens === true) {\n            bind(self._input, \"focus\", self.open);\n            bind(self._input, \"click\", self.open);\n        }\n        if (self.daysContainer !== undefined) {\n            bind(self.monthNav, \"click\", onMonthNavClick);\n            bind(self.monthNav, [\"keyup\", \"increment\"], onYearInput);\n            bind(self.daysContainer, \"click\", selectDate);\n        }\n        if (self.timeContainer !== undefined &&\n            self.minuteElement !== undefined &&\n            self.hourElement !== undefined) {\n            var selText = function (e) {\n                return (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.getEventTarget)(e).select();\n            };\n            bind(self.timeContainer, [\"increment\"], updateTime);\n            bind(self.timeContainer, \"blur\", updateTime, { capture: true });\n            bind(self.timeContainer, \"click\", timeIncrement);\n            bind([self.hourElement, self.minuteElement], [\"focus\", \"click\"], selText);\n            if (self.secondElement !== undefined)\n                bind(self.secondElement, \"focus\", function () { return self.secondElement && self.secondElement.select(); });\n            if (self.amPM !== undefined) {\n                bind(self.amPM, \"click\", function (e) {\n                    updateTime(e);\n                });\n            }\n        }\n        if (self.config.allowInput) {\n            bind(self._input, \"blur\", onBlur);\n        }\n    }\n    function jumpToDate(jumpDate, triggerChange) {\n        var jumpTo = jumpDate !== undefined\n            ? self.parseDate(jumpDate)\n            : self.latestSelectedDateObj ||\n                (self.config.minDate && self.config.minDate > self.now\n                    ? self.config.minDate\n                    : self.config.maxDate && self.config.maxDate < self.now\n                        ? self.config.maxDate\n                        : self.now);\n        var oldYear = self.currentYear;\n        var oldMonth = self.currentMonth;\n        try {\n            if (jumpTo !== undefined) {\n                self.currentYear = jumpTo.getFullYear();\n                self.currentMonth = jumpTo.getMonth();\n            }\n        }\n        catch (e) {\n            e.message = \"Invalid date supplied: \" + jumpTo;\n            self.config.errorHandler(e);\n        }\n        if (triggerChange && self.currentYear !== oldYear) {\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n        if (triggerChange &&\n            (self.currentYear !== oldYear || self.currentMonth !== oldMonth)) {\n            triggerEvent(\"onMonthChange\");\n        }\n        self.redraw();\n    }\n    function timeIncrement(e) {\n        var eventTarget = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.getEventTarget)(e);\n        if (~eventTarget.className.indexOf(\"arrow\"))\n            incrementNumInput(e, eventTarget.classList.contains(\"arrowUp\") ? 1 : -1);\n    }\n    function incrementNumInput(e, delta, inputElem) {\n        var target = e && (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.getEventTarget)(e);\n        var input = inputElem ||\n            (target && target.parentNode && target.parentNode.firstChild);\n        var event = createEvent(\"increment\");\n        event.delta = delta;\n        input && input.dispatchEvent(event);\n    }\n    function build() {\n        var fragment = window.document.createDocumentFragment();\n        self.calendarContainer = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"div\", \"flatpickr-calendar\");\n        self.calendarContainer.tabIndex = -1;\n        if (!self.config.noCalendar) {\n            fragment.appendChild(buildMonthNav());\n            self.innerContainer = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"div\", \"flatpickr-innerContainer\");\n            if (self.config.weekNumbers) {\n                var _a = buildWeeks(), weekWrapper = _a.weekWrapper, weekNumbers = _a.weekNumbers;\n                self.innerContainer.appendChild(weekWrapper);\n                self.weekNumbers = weekNumbers;\n                self.weekWrapper = weekWrapper;\n            }\n            self.rContainer = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"div\", \"flatpickr-rContainer\");\n            self.rContainer.appendChild(buildWeekdays());\n            if (!self.daysContainer) {\n                self.daysContainer = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"div\", \"flatpickr-days\");\n                self.daysContainer.tabIndex = -1;\n            }\n            buildDays();\n            self.rContainer.appendChild(self.daysContainer);\n            self.innerContainer.appendChild(self.rContainer);\n            fragment.appendChild(self.innerContainer);\n        }\n        if (self.config.enableTime) {\n            fragment.appendChild(buildTime());\n        }\n        (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(self.calendarContainer, \"rangeMode\", self.config.mode === \"range\");\n        (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(self.calendarContainer, \"animate\", self.config.animate === true);\n        (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(self.calendarContainer, \"multiMonth\", self.config.showMonths > 1);\n        self.calendarContainer.appendChild(fragment);\n        var customAppend = self.config.appendTo !== undefined &&\n            self.config.appendTo.nodeType !== undefined;\n        if (self.config.inline || self.config.static) {\n            self.calendarContainer.classList.add(self.config.inline ? \"inline\" : \"static\");\n            if (self.config.inline) {\n                if (!customAppend && self.element.parentNode)\n                    self.element.parentNode.insertBefore(self.calendarContainer, self._input.nextSibling);\n                else if (self.config.appendTo !== undefined)\n                    self.config.appendTo.appendChild(self.calendarContainer);\n            }\n            if (self.config.static) {\n                var wrapper = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"div\", \"flatpickr-wrapper\");\n                if (self.element.parentNode)\n                    self.element.parentNode.insertBefore(wrapper, self.element);\n                wrapper.appendChild(self.element);\n                if (self.altInput)\n                    wrapper.appendChild(self.altInput);\n                wrapper.appendChild(self.calendarContainer);\n            }\n        }\n        if (!self.config.static && !self.config.inline)\n            (self.config.appendTo !== undefined\n                ? self.config.appendTo\n                : window.document.body).appendChild(self.calendarContainer);\n    }\n    function createDay(className, date, _dayNumber, i) {\n        var dateIsEnabled = isEnabled(date, true), dayElement = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"span\", className, date.getDate().toString());\n        dayElement.dateObj = date;\n        dayElement.$i = i;\n        dayElement.setAttribute(\"aria-label\", self.formatDate(date, self.config.ariaDateFormat));\n        if (className.indexOf(\"hidden\") === -1 &&\n            (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.compareDates)(date, self.now) === 0) {\n            self.todayDateElem = dayElement;\n            dayElement.classList.add(\"today\");\n            dayElement.setAttribute(\"aria-current\", \"date\");\n        }\n        if (dateIsEnabled) {\n            dayElement.tabIndex = -1;\n            if (isDateSelected(date)) {\n                dayElement.classList.add(\"selected\");\n                self.selectedDateElem = dayElement;\n                if (self.config.mode === \"range\") {\n                    (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(dayElement, \"startRange\", self.selectedDates[0] &&\n                        (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.compareDates)(date, self.selectedDates[0], true) === 0);\n                    (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(dayElement, \"endRange\", self.selectedDates[1] &&\n                        (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.compareDates)(date, self.selectedDates[1], true) === 0);\n                    if (className === \"nextMonthDay\")\n                        dayElement.classList.add(\"inRange\");\n                }\n            }\n        }\n        else {\n            dayElement.classList.add(\"flatpickr-disabled\");\n        }\n        if (self.config.mode === \"range\") {\n            if (isDateInRange(date) && !isDateSelected(date))\n                dayElement.classList.add(\"inRange\");\n        }\n        if (self.weekNumbers &&\n            self.config.showMonths === 1 &&\n            className !== \"prevMonthDay\" &&\n            i % 7 === 6) {\n            self.weekNumbers.insertAdjacentHTML(\"beforeend\", \"<span class='flatpickr-day'>\" + self.config.getWeek(date) + \"</span>\");\n        }\n        triggerEvent(\"onDayCreate\", dayElement);\n        return dayElement;\n    }\n    function focusOnDayElem(targetNode) {\n        targetNode.focus();\n        if (self.config.mode === \"range\")\n            onMouseOver(targetNode);\n    }\n    function getFirstAvailableDay(delta) {\n        var startMonth = delta > 0 ? 0 : self.config.showMonths - 1;\n        var endMonth = delta > 0 ? self.config.showMonths : -1;\n        for (var m = startMonth; m != endMonth; m += delta) {\n            var month = self.daysContainer.children[m];\n            var startIndex = delta > 0 ? 0 : month.children.length - 1;\n            var endIndex = delta > 0 ? month.children.length : -1;\n            for (var i = startIndex; i != endIndex; i += delta) {\n                var c = month.children[i];\n                if (c.className.indexOf(\"hidden\") === -1 && isEnabled(c.dateObj))\n                    return c;\n            }\n        }\n        return undefined;\n    }\n    function getNextAvailableDay(current, delta) {\n        var givenMonth = current.className.indexOf(\"Month\") === -1\n            ? current.dateObj.getMonth()\n            : self.currentMonth;\n        var endMonth = delta > 0 ? self.config.showMonths : -1;\n        var loopDelta = delta > 0 ? 1 : -1;\n        for (var m = givenMonth - self.currentMonth; m != endMonth; m += loopDelta) {\n            var month = self.daysContainer.children[m];\n            var startIndex = givenMonth - self.currentMonth === m\n                ? current.$i + delta\n                : delta < 0\n                    ? month.children.length - 1\n                    : 0;\n            var numMonthDays = month.children.length;\n            for (var i = startIndex; i >= 0 && i < numMonthDays && i != (delta > 0 ? numMonthDays : -1); i += loopDelta) {\n                var c = month.children[i];\n                if (c.className.indexOf(\"hidden\") === -1 &&\n                    isEnabled(c.dateObj) &&\n                    Math.abs(current.$i - i) >= Math.abs(delta))\n                    return focusOnDayElem(c);\n            }\n        }\n        self.changeMonth(loopDelta);\n        focusOnDay(getFirstAvailableDay(loopDelta), 0);\n        return undefined;\n    }\n    function focusOnDay(current, offset) {\n        var activeElement = getClosestActiveElement();\n        var dayFocused = isInView(activeElement || document.body);\n        var startElem = current !== undefined\n            ? current\n            : dayFocused\n                ? activeElement\n                : self.selectedDateElem !== undefined && isInView(self.selectedDateElem)\n                    ? self.selectedDateElem\n                    : self.todayDateElem !== undefined && isInView(self.todayDateElem)\n                        ? self.todayDateElem\n                        : getFirstAvailableDay(offset > 0 ? 1 : -1);\n        if (startElem === undefined) {\n            self._input.focus();\n        }\n        else if (!dayFocused) {\n            focusOnDayElem(startElem);\n        }\n        else {\n            getNextAvailableDay(startElem, offset);\n        }\n    }\n    function buildMonthDays(year, month) {\n        var firstOfMonth = (new Date(year, month, 1).getDay() - self.l10n.firstDayOfWeek + 7) % 7;\n        var prevMonthDays = self.utils.getDaysInMonth((month - 1 + 12) % 12, year);\n        var daysInMonth = self.utils.getDaysInMonth(month, year), days = window.document.createDocumentFragment(), isMultiMonth = self.config.showMonths > 1, prevMonthDayClass = isMultiMonth ? \"prevMonthDay hidden\" : \"prevMonthDay\", nextMonthDayClass = isMultiMonth ? \"nextMonthDay hidden\" : \"nextMonthDay\";\n        var dayNumber = prevMonthDays + 1 - firstOfMonth, dayIndex = 0;\n        for (; dayNumber <= prevMonthDays; dayNumber++, dayIndex++) {\n            days.appendChild(createDay(\"flatpickr-day \" + prevMonthDayClass, new Date(year, month - 1, dayNumber), dayNumber, dayIndex));\n        }\n        for (dayNumber = 1; dayNumber <= daysInMonth; dayNumber++, dayIndex++) {\n            days.appendChild(createDay(\"flatpickr-day\", new Date(year, month, dayNumber), dayNumber, dayIndex));\n        }\n        for (var dayNum = daysInMonth + 1; dayNum <= 42 - firstOfMonth &&\n            (self.config.showMonths === 1 || dayIndex % 7 !== 0); dayNum++, dayIndex++) {\n            days.appendChild(createDay(\"flatpickr-day \" + nextMonthDayClass, new Date(year, month + 1, dayNum % daysInMonth), dayNum, dayIndex));\n        }\n        var dayContainer = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"div\", \"dayContainer\");\n        dayContainer.appendChild(days);\n        return dayContainer;\n    }\n    function buildDays() {\n        if (self.daysContainer === undefined) {\n            return;\n        }\n        (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.clearNode)(self.daysContainer);\n        if (self.weekNumbers)\n            (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.clearNode)(self.weekNumbers);\n        var frag = document.createDocumentFragment();\n        for (var i = 0; i < self.config.showMonths; i++) {\n            var d = new Date(self.currentYear, self.currentMonth, 1);\n            d.setMonth(self.currentMonth + i);\n            frag.appendChild(buildMonthDays(d.getFullYear(), d.getMonth()));\n        }\n        self.daysContainer.appendChild(frag);\n        self.days = self.daysContainer.firstChild;\n        if (self.config.mode === \"range\" && self.selectedDates.length === 1) {\n            onMouseOver();\n        }\n    }\n    function buildMonthSwitch() {\n        if (self.config.showMonths > 1 ||\n            self.config.monthSelectorType !== \"dropdown\")\n            return;\n        var shouldBuildMonth = function (month) {\n            if (self.config.minDate !== undefined &&\n                self.currentYear === self.config.minDate.getFullYear() &&\n                month < self.config.minDate.getMonth()) {\n                return false;\n            }\n            return !(self.config.maxDate !== undefined &&\n                self.currentYear === self.config.maxDate.getFullYear() &&\n                month > self.config.maxDate.getMonth());\n        };\n        self.monthsDropdownContainer.tabIndex = -1;\n        self.monthsDropdownContainer.innerHTML = \"\";\n        for (var i = 0; i < 12; i++) {\n            if (!shouldBuildMonth(i))\n                continue;\n            var month = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"option\", \"flatpickr-monthDropdown-month\");\n            month.value = new Date(self.currentYear, i).getMonth().toString();\n            month.textContent = (0,_utils_formatting__WEBPACK_IMPORTED_MODULE_5__.monthToStr)(i, self.config.shorthandCurrentMonth, self.l10n);\n            month.tabIndex = -1;\n            if (self.currentMonth === i) {\n                month.selected = true;\n            }\n            self.monthsDropdownContainer.appendChild(month);\n        }\n    }\n    function buildMonth() {\n        var container = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"div\", \"flatpickr-month\");\n        var monthNavFragment = window.document.createDocumentFragment();\n        var monthElement;\n        if (self.config.showMonths > 1 ||\n            self.config.monthSelectorType === \"static\") {\n            monthElement = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"span\", \"cur-month\");\n        }\n        else {\n            self.monthsDropdownContainer = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"select\", \"flatpickr-monthDropdown-months\");\n            self.monthsDropdownContainer.setAttribute(\"aria-label\", self.l10n.monthAriaLabel);\n            bind(self.monthsDropdownContainer, \"change\", function (e) {\n                var target = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.getEventTarget)(e);\n                var selectedMonth = parseInt(target.value, 10);\n                self.changeMonth(selectedMonth - self.currentMonth);\n                triggerEvent(\"onMonthChange\");\n            });\n            buildMonthSwitch();\n            monthElement = self.monthsDropdownContainer;\n        }\n        var yearInput = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createNumberInput)(\"cur-year\", { tabindex: \"-1\" });\n        var yearElement = yearInput.getElementsByTagName(\"input\")[0];\n        yearElement.setAttribute(\"aria-label\", self.l10n.yearAriaLabel);\n        if (self.config.minDate) {\n            yearElement.setAttribute(\"min\", self.config.minDate.getFullYear().toString());\n        }\n        if (self.config.maxDate) {\n            yearElement.setAttribute(\"max\", self.config.maxDate.getFullYear().toString());\n            yearElement.disabled =\n                !!self.config.minDate &&\n                    self.config.minDate.getFullYear() === self.config.maxDate.getFullYear();\n        }\n        var currentMonth = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"div\", \"flatpickr-current-month\");\n        currentMonth.appendChild(monthElement);\n        currentMonth.appendChild(yearInput);\n        monthNavFragment.appendChild(currentMonth);\n        container.appendChild(monthNavFragment);\n        return {\n            container: container,\n            yearElement: yearElement,\n            monthElement: monthElement,\n        };\n    }\n    function buildMonths() {\n        (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.clearNode)(self.monthNav);\n        self.monthNav.appendChild(self.prevMonthNav);\n        if (self.config.showMonths) {\n            self.yearElements = [];\n            self.monthElements = [];\n        }\n        for (var m = self.config.showMonths; m--;) {\n            var month = buildMonth();\n            self.yearElements.push(month.yearElement);\n            self.monthElements.push(month.monthElement);\n            self.monthNav.appendChild(month.container);\n        }\n        self.monthNav.appendChild(self.nextMonthNav);\n    }\n    function buildMonthNav() {\n        self.monthNav = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"div\", \"flatpickr-months\");\n        self.yearElements = [];\n        self.monthElements = [];\n        self.prevMonthNav = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"span\", \"flatpickr-prev-month\");\n        self.prevMonthNav.innerHTML = self.config.prevArrow;\n        self.nextMonthNav = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"span\", \"flatpickr-next-month\");\n        self.nextMonthNav.innerHTML = self.config.nextArrow;\n        buildMonths();\n        Object.defineProperty(self, \"_hidePrevMonthArrow\", {\n            get: function () { return self.__hidePrevMonthArrow; },\n            set: function (bool) {\n                if (self.__hidePrevMonthArrow !== bool) {\n                    (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(self.prevMonthNav, \"flatpickr-disabled\", bool);\n                    self.__hidePrevMonthArrow = bool;\n                }\n            },\n        });\n        Object.defineProperty(self, \"_hideNextMonthArrow\", {\n            get: function () { return self.__hideNextMonthArrow; },\n            set: function (bool) {\n                if (self.__hideNextMonthArrow !== bool) {\n                    (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(self.nextMonthNav, \"flatpickr-disabled\", bool);\n                    self.__hideNextMonthArrow = bool;\n                }\n            },\n        });\n        self.currentYearElement = self.yearElements[0];\n        updateNavigationCurrentMonth();\n        return self.monthNav;\n    }\n    function buildTime() {\n        self.calendarContainer.classList.add(\"hasTime\");\n        if (self.config.noCalendar)\n            self.calendarContainer.classList.add(\"noCalendar\");\n        var defaults = (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.getDefaultHours)(self.config);\n        self.timeContainer = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"div\", \"flatpickr-time\");\n        self.timeContainer.tabIndex = -1;\n        var separator = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"span\", \"flatpickr-time-separator\", \":\");\n        var hourInput = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createNumberInput)(\"flatpickr-hour\", {\n            \"aria-label\": self.l10n.hourAriaLabel,\n        });\n        self.hourElement = hourInput.getElementsByTagName(\"input\")[0];\n        var minuteInput = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createNumberInput)(\"flatpickr-minute\", {\n            \"aria-label\": self.l10n.minuteAriaLabel,\n        });\n        self.minuteElement = minuteInput.getElementsByTagName(\"input\")[0];\n        self.hourElement.tabIndex = self.minuteElement.tabIndex = -1;\n        self.hourElement.value = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.pad)(self.latestSelectedDateObj\n            ? self.latestSelectedDateObj.getHours()\n            : self.config.time_24hr\n                ? defaults.hours\n                : military2ampm(defaults.hours));\n        self.minuteElement.value = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.pad)(self.latestSelectedDateObj\n            ? self.latestSelectedDateObj.getMinutes()\n            : defaults.minutes);\n        self.hourElement.setAttribute(\"step\", self.config.hourIncrement.toString());\n        self.minuteElement.setAttribute(\"step\", self.config.minuteIncrement.toString());\n        self.hourElement.setAttribute(\"min\", self.config.time_24hr ? \"0\" : \"1\");\n        self.hourElement.setAttribute(\"max\", self.config.time_24hr ? \"23\" : \"12\");\n        self.hourElement.setAttribute(\"maxlength\", \"2\");\n        self.minuteElement.setAttribute(\"min\", \"0\");\n        self.minuteElement.setAttribute(\"max\", \"59\");\n        self.minuteElement.setAttribute(\"maxlength\", \"2\");\n        self.timeContainer.appendChild(hourInput);\n        self.timeContainer.appendChild(separator);\n        self.timeContainer.appendChild(minuteInput);\n        if (self.config.time_24hr)\n            self.timeContainer.classList.add(\"time24hr\");\n        if (self.config.enableSeconds) {\n            self.timeContainer.classList.add(\"hasSeconds\");\n            var secondInput = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createNumberInput)(\"flatpickr-second\");\n            self.secondElement = secondInput.getElementsByTagName(\"input\")[0];\n            self.secondElement.value = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.pad)(self.latestSelectedDateObj\n                ? self.latestSelectedDateObj.getSeconds()\n                : defaults.seconds);\n            self.secondElement.setAttribute(\"step\", self.minuteElement.getAttribute(\"step\"));\n            self.secondElement.setAttribute(\"min\", \"0\");\n            self.secondElement.setAttribute(\"max\", \"59\");\n            self.secondElement.setAttribute(\"maxlength\", \"2\");\n            self.timeContainer.appendChild((0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"span\", \"flatpickr-time-separator\", \":\"));\n            self.timeContainer.appendChild(secondInput);\n        }\n        if (!self.config.time_24hr) {\n            self.amPM = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"span\", \"flatpickr-am-pm\", self.l10n.amPM[(0,_utils__WEBPACK_IMPORTED_MODULE_2__.int)((self.latestSelectedDateObj\n                ? self.hourElement.value\n                : self.config.defaultHour) > 11)]);\n            self.amPM.title = self.l10n.toggleTitle;\n            self.amPM.tabIndex = -1;\n            self.timeContainer.appendChild(self.amPM);\n        }\n        return self.timeContainer;\n    }\n    function buildWeekdays() {\n        if (!self.weekdayContainer)\n            self.weekdayContainer = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"div\", \"flatpickr-weekdays\");\n        else\n            (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.clearNode)(self.weekdayContainer);\n        for (var i = self.config.showMonths; i--;) {\n            var container = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"div\", \"flatpickr-weekdaycontainer\");\n            self.weekdayContainer.appendChild(container);\n        }\n        updateWeekdays();\n        return self.weekdayContainer;\n    }\n    function updateWeekdays() {\n        if (!self.weekdayContainer) {\n            return;\n        }\n        var firstDayOfWeek = self.l10n.firstDayOfWeek;\n        var weekdays = __spreadArrays(self.l10n.weekdays.shorthand);\n        if (firstDayOfWeek > 0 && firstDayOfWeek < weekdays.length) {\n            weekdays = __spreadArrays(weekdays.splice(firstDayOfWeek, weekdays.length), weekdays.splice(0, firstDayOfWeek));\n        }\n        for (var i = self.config.showMonths; i--;) {\n            self.weekdayContainer.children[i].innerHTML = \"\\n      <span class='flatpickr-weekday'>\\n        \" + weekdays.join(\"</span><span class='flatpickr-weekday'>\") + \"\\n      </span>\\n      \";\n        }\n    }\n    function buildWeeks() {\n        self.calendarContainer.classList.add(\"hasWeeks\");\n        var weekWrapper = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"div\", \"flatpickr-weekwrapper\");\n        weekWrapper.appendChild((0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"span\", \"flatpickr-weekday\", self.l10n.weekAbbreviation));\n        var weekNumbers = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"div\", \"flatpickr-weeks\");\n        weekWrapper.appendChild(weekNumbers);\n        return {\n            weekWrapper: weekWrapper,\n            weekNumbers: weekNumbers,\n        };\n    }\n    function changeMonth(value, isOffset) {\n        if (isOffset === void 0) { isOffset = true; }\n        var delta = isOffset ? value : value - self.currentMonth;\n        if ((delta < 0 && self._hidePrevMonthArrow === true) ||\n            (delta > 0 && self._hideNextMonthArrow === true))\n            return;\n        self.currentMonth += delta;\n        if (self.currentMonth < 0 || self.currentMonth > 11) {\n            self.currentYear += self.currentMonth > 11 ? 1 : -1;\n            self.currentMonth = (self.currentMonth + 12) % 12;\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n        buildDays();\n        triggerEvent(\"onMonthChange\");\n        updateNavigationCurrentMonth();\n    }\n    function clear(triggerChangeEvent, toInitial) {\n        if (triggerChangeEvent === void 0) { triggerChangeEvent = true; }\n        if (toInitial === void 0) { toInitial = true; }\n        self.input.value = \"\";\n        if (self.altInput !== undefined)\n            self.altInput.value = \"\";\n        if (self.mobileInput !== undefined)\n            self.mobileInput.value = \"\";\n        self.selectedDates = [];\n        self.latestSelectedDateObj = undefined;\n        if (toInitial === true) {\n            self.currentYear = self._initialDate.getFullYear();\n            self.currentMonth = self._initialDate.getMonth();\n        }\n        if (self.config.enableTime === true) {\n            var _a = (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.getDefaultHours)(self.config), hours = _a.hours, minutes = _a.minutes, seconds = _a.seconds;\n            setHours(hours, minutes, seconds);\n        }\n        self.redraw();\n        if (triggerChangeEvent)\n            triggerEvent(\"onChange\");\n    }\n    function close() {\n        self.isOpen = false;\n        if (!self.isMobile) {\n            if (self.calendarContainer !== undefined) {\n                self.calendarContainer.classList.remove(\"open\");\n            }\n            if (self._input !== undefined) {\n                self._input.classList.remove(\"active\");\n            }\n        }\n        triggerEvent(\"onClose\");\n    }\n    function destroy() {\n        if (self.config !== undefined)\n            triggerEvent(\"onDestroy\");\n        for (var i = self._handlers.length; i--;) {\n            self._handlers[i].remove();\n        }\n        self._handlers = [];\n        if (self.mobileInput) {\n            if (self.mobileInput.parentNode)\n                self.mobileInput.parentNode.removeChild(self.mobileInput);\n            self.mobileInput = undefined;\n        }\n        else if (self.calendarContainer && self.calendarContainer.parentNode) {\n            if (self.config.static && self.calendarContainer.parentNode) {\n                var wrapper = self.calendarContainer.parentNode;\n                wrapper.lastChild && wrapper.removeChild(wrapper.lastChild);\n                if (wrapper.parentNode) {\n                    while (wrapper.firstChild)\n                        wrapper.parentNode.insertBefore(wrapper.firstChild, wrapper);\n                    wrapper.parentNode.removeChild(wrapper);\n                }\n            }\n            else\n                self.calendarContainer.parentNode.removeChild(self.calendarContainer);\n        }\n        if (self.altInput) {\n            self.input.type = \"text\";\n            if (self.altInput.parentNode)\n                self.altInput.parentNode.removeChild(self.altInput);\n            delete self.altInput;\n        }\n        if (self.input) {\n            self.input.type = self.input._type;\n            self.input.classList.remove(\"flatpickr-input\");\n            self.input.removeAttribute(\"readonly\");\n        }\n        [\n            \"_showTimeInput\",\n            \"latestSelectedDateObj\",\n            \"_hideNextMonthArrow\",\n            \"_hidePrevMonthArrow\",\n            \"__hideNextMonthArrow\",\n            \"__hidePrevMonthArrow\",\n            \"isMobile\",\n            \"isOpen\",\n            \"selectedDateElem\",\n            \"minDateHasTime\",\n            \"maxDateHasTime\",\n            \"days\",\n            \"daysContainer\",\n            \"_input\",\n            \"_positionElement\",\n            \"innerContainer\",\n            \"rContainer\",\n            \"monthNav\",\n            \"todayDateElem\",\n            \"calendarContainer\",\n            \"weekdayContainer\",\n            \"prevMonthNav\",\n            \"nextMonthNav\",\n            \"monthsDropdownContainer\",\n            \"currentMonthElement\",\n            \"currentYearElement\",\n            \"navigationCurrentMonth\",\n            \"selectedDateElem\",\n            \"config\",\n        ].forEach(function (k) {\n            try {\n                delete self[k];\n            }\n            catch (_) { }\n        });\n    }\n    function isCalendarElem(elem) {\n        return self.calendarContainer.contains(elem);\n    }\n    function documentClick(e) {\n        if (self.isOpen && !self.config.inline) {\n            var eventTarget_1 = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.getEventTarget)(e);\n            var isCalendarElement = isCalendarElem(eventTarget_1);\n            var isInput = eventTarget_1 === self.input ||\n                eventTarget_1 === self.altInput ||\n                self.element.contains(eventTarget_1) ||\n                (e.path &&\n                    e.path.indexOf &&\n                    (~e.path.indexOf(self.input) ||\n                        ~e.path.indexOf(self.altInput)));\n            var lostFocus = !isInput &&\n                !isCalendarElement &&\n                !isCalendarElem(e.relatedTarget);\n            var isIgnored = !self.config.ignoredFocusElements.some(function (elem) {\n                return elem.contains(eventTarget_1);\n            });\n            if (lostFocus && isIgnored) {\n                if (self.config.allowInput) {\n                    self.setDate(self._input.value, false, self.config.altInput\n                        ? self.config.altFormat\n                        : self.config.dateFormat);\n                }\n                if (self.timeContainer !== undefined &&\n                    self.minuteElement !== undefined &&\n                    self.hourElement !== undefined &&\n                    self.input.value !== \"\" &&\n                    self.input.value !== undefined) {\n                    updateTime();\n                }\n                self.close();\n                if (self.config &&\n                    self.config.mode === \"range\" &&\n                    self.selectedDates.length === 1)\n                    self.clear(false);\n            }\n        }\n    }\n    function changeYear(newYear) {\n        if (!newYear ||\n            (self.config.minDate && newYear < self.config.minDate.getFullYear()) ||\n            (self.config.maxDate && newYear > self.config.maxDate.getFullYear()))\n            return;\n        var newYearNum = newYear, isNewYear = self.currentYear !== newYearNum;\n        self.currentYear = newYearNum || self.currentYear;\n        if (self.config.maxDate &&\n            self.currentYear === self.config.maxDate.getFullYear()) {\n            self.currentMonth = Math.min(self.config.maxDate.getMonth(), self.currentMonth);\n        }\n        else if (self.config.minDate &&\n            self.currentYear === self.config.minDate.getFullYear()) {\n            self.currentMonth = Math.max(self.config.minDate.getMonth(), self.currentMonth);\n        }\n        if (isNewYear) {\n            self.redraw();\n            triggerEvent(\"onYearChange\");\n            buildMonthSwitch();\n        }\n    }\n    function isEnabled(date, timeless) {\n        var _a;\n        if (timeless === void 0) { timeless = true; }\n        var dateToCheck = self.parseDate(date, undefined, timeless);\n        if ((self.config.minDate &&\n            dateToCheck &&\n            (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.compareDates)(dateToCheck, self.config.minDate, timeless !== undefined ? timeless : !self.minDateHasTime) < 0) ||\n            (self.config.maxDate &&\n                dateToCheck &&\n                (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.compareDates)(dateToCheck, self.config.maxDate, timeless !== undefined ? timeless : !self.maxDateHasTime) > 0))\n            return false;\n        if (!self.config.enable && self.config.disable.length === 0)\n            return true;\n        if (dateToCheck === undefined)\n            return false;\n        var bool = !!self.config.enable, array = (_a = self.config.enable) !== null && _a !== void 0 ? _a : self.config.disable;\n        for (var i = 0, d = void 0; i < array.length; i++) {\n            d = array[i];\n            if (typeof d === \"function\" &&\n                d(dateToCheck))\n                return bool;\n            else if (d instanceof Date &&\n                dateToCheck !== undefined &&\n                d.getTime() === dateToCheck.getTime())\n                return bool;\n            else if (typeof d === \"string\") {\n                var parsed = self.parseDate(d, undefined, true);\n                return parsed && parsed.getTime() === dateToCheck.getTime()\n                    ? bool\n                    : !bool;\n            }\n            else if (typeof d === \"object\" &&\n                dateToCheck !== undefined &&\n                d.from &&\n                d.to &&\n                dateToCheck.getTime() >= d.from.getTime() &&\n                dateToCheck.getTime() <= d.to.getTime())\n                return bool;\n        }\n        return !bool;\n    }\n    function isInView(elem) {\n        if (self.daysContainer !== undefined)\n            return (elem.className.indexOf(\"hidden\") === -1 &&\n                elem.className.indexOf(\"flatpickr-disabled\") === -1 &&\n                self.daysContainer.contains(elem));\n        return false;\n    }\n    function onBlur(e) {\n        var isInput = e.target === self._input;\n        var valueChanged = self._input.value.trimEnd() !== getDateStr();\n        if (isInput &&\n            valueChanged &&\n            !(e.relatedTarget && isCalendarElem(e.relatedTarget))) {\n            self.setDate(self._input.value, true, e.target === self.altInput\n                ? self.config.altFormat\n                : self.config.dateFormat);\n        }\n    }\n    function onKeyDown(e) {\n        var eventTarget = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.getEventTarget)(e);\n        var isInput = self.config.wrap\n            ? element.contains(eventTarget)\n            : eventTarget === self._input;\n        var allowInput = self.config.allowInput;\n        var allowKeydown = self.isOpen && (!allowInput || !isInput);\n        var allowInlineKeydown = self.config.inline && isInput && !allowInput;\n        if (e.keyCode === 13 && isInput) {\n            if (allowInput) {\n                self.setDate(self._input.value, true, eventTarget === self.altInput\n                    ? self.config.altFormat\n                    : self.config.dateFormat);\n                self.close();\n                return eventTarget.blur();\n            }\n            else {\n                self.open();\n            }\n        }\n        else if (isCalendarElem(eventTarget) ||\n            allowKeydown ||\n            allowInlineKeydown) {\n            var isTimeObj = !!self.timeContainer &&\n                self.timeContainer.contains(eventTarget);\n            switch (e.keyCode) {\n                case 13:\n                    if (isTimeObj) {\n                        e.preventDefault();\n                        updateTime();\n                        focusAndClose();\n                    }\n                    else\n                        selectDate(e);\n                    break;\n                case 27:\n                    e.preventDefault();\n                    focusAndClose();\n                    break;\n                case 8:\n                case 46:\n                    if (isInput && !self.config.allowInput) {\n                        e.preventDefault();\n                        self.clear();\n                    }\n                    break;\n                case 37:\n                case 39:\n                    if (!isTimeObj && !isInput) {\n                        e.preventDefault();\n                        var activeElement = getClosestActiveElement();\n                        if (self.daysContainer !== undefined &&\n                            (allowInput === false ||\n                                (activeElement && isInView(activeElement)))) {\n                            var delta_1 = e.keyCode === 39 ? 1 : -1;\n                            if (!e.ctrlKey)\n                                focusOnDay(undefined, delta_1);\n                            else {\n                                e.stopPropagation();\n                                changeMonth(delta_1);\n                                focusOnDay(getFirstAvailableDay(1), 0);\n                            }\n                        }\n                    }\n                    else if (self.hourElement)\n                        self.hourElement.focus();\n                    break;\n                case 38:\n                case 40:\n                    e.preventDefault();\n                    var delta = e.keyCode === 40 ? 1 : -1;\n                    if ((self.daysContainer &&\n                        eventTarget.$i !== undefined) ||\n                        eventTarget === self.input ||\n                        eventTarget === self.altInput) {\n                        if (e.ctrlKey) {\n                            e.stopPropagation();\n                            changeYear(self.currentYear - delta);\n                            focusOnDay(getFirstAvailableDay(1), 0);\n                        }\n                        else if (!isTimeObj)\n                            focusOnDay(undefined, delta * 7);\n                    }\n                    else if (eventTarget === self.currentYearElement) {\n                        changeYear(self.currentYear - delta);\n                    }\n                    else if (self.config.enableTime) {\n                        if (!isTimeObj && self.hourElement)\n                            self.hourElement.focus();\n                        updateTime(e);\n                        self._debouncedChange();\n                    }\n                    break;\n                case 9:\n                    if (isTimeObj) {\n                        var elems = [\n                            self.hourElement,\n                            self.minuteElement,\n                            self.secondElement,\n                            self.amPM,\n                        ]\n                            .concat(self.pluginElements)\n                            .filter(function (x) { return x; });\n                        var i = elems.indexOf(eventTarget);\n                        if (i !== -1) {\n                            var target = elems[i + (e.shiftKey ? -1 : 1)];\n                            e.preventDefault();\n                            (target || self._input).focus();\n                        }\n                    }\n                    else if (!self.config.noCalendar &&\n                        self.daysContainer &&\n                        self.daysContainer.contains(eventTarget) &&\n                        e.shiftKey) {\n                        e.preventDefault();\n                        self._input.focus();\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }\n        if (self.amPM !== undefined && eventTarget === self.amPM) {\n            switch (e.key) {\n                case self.l10n.amPM[0].charAt(0):\n                case self.l10n.amPM[0].charAt(0).toLowerCase():\n                    self.amPM.textContent = self.l10n.amPM[0];\n                    setHoursFromInputs();\n                    updateValue();\n                    break;\n                case self.l10n.amPM[1].charAt(0):\n                case self.l10n.amPM[1].charAt(0).toLowerCase():\n                    self.amPM.textContent = self.l10n.amPM[1];\n                    setHoursFromInputs();\n                    updateValue();\n                    break;\n            }\n        }\n        if (isInput || isCalendarElem(eventTarget)) {\n            triggerEvent(\"onKeyDown\", e);\n        }\n    }\n    function onMouseOver(elem, cellClass) {\n        if (cellClass === void 0) { cellClass = \"flatpickr-day\"; }\n        if (self.selectedDates.length !== 1 ||\n            (elem &&\n                (!elem.classList.contains(cellClass) ||\n                    elem.classList.contains(\"flatpickr-disabled\"))))\n            return;\n        var hoverDate = elem\n            ? elem.dateObj.getTime()\n            : self.days.firstElementChild.dateObj.getTime(), initialDate = self.parseDate(self.selectedDates[0], undefined, true).getTime(), rangeStartDate = Math.min(hoverDate, self.selectedDates[0].getTime()), rangeEndDate = Math.max(hoverDate, self.selectedDates[0].getTime());\n        var containsDisabled = false;\n        var minRange = 0, maxRange = 0;\n        for (var t = rangeStartDate; t < rangeEndDate; t += _utils_dates__WEBPACK_IMPORTED_MODULE_4__.duration.DAY) {\n            if (!isEnabled(new Date(t), true)) {\n                containsDisabled =\n                    containsDisabled || (t > rangeStartDate && t < rangeEndDate);\n                if (t < initialDate && (!minRange || t > minRange))\n                    minRange = t;\n                else if (t > initialDate && (!maxRange || t < maxRange))\n                    maxRange = t;\n            }\n        }\n        var hoverableCells = Array.from(self.rContainer.querySelectorAll(\"*:nth-child(-n+\" + self.config.showMonths + \") > .\" + cellClass));\n        hoverableCells.forEach(function (dayElem) {\n            var date = dayElem.dateObj;\n            var timestamp = date.getTime();\n            var outOfRange = (minRange > 0 && timestamp < minRange) ||\n                (maxRange > 0 && timestamp > maxRange);\n            if (outOfRange) {\n                dayElem.classList.add(\"notAllowed\");\n                [\"inRange\", \"startRange\", \"endRange\"].forEach(function (c) {\n                    dayElem.classList.remove(c);\n                });\n                return;\n            }\n            else if (containsDisabled && !outOfRange)\n                return;\n            [\"startRange\", \"inRange\", \"endRange\", \"notAllowed\"].forEach(function (c) {\n                dayElem.classList.remove(c);\n            });\n            if (elem !== undefined) {\n                elem.classList.add(hoverDate <= self.selectedDates[0].getTime()\n                    ? \"startRange\"\n                    : \"endRange\");\n                if (initialDate < hoverDate && timestamp === initialDate)\n                    dayElem.classList.add(\"startRange\");\n                else if (initialDate > hoverDate && timestamp === initialDate)\n                    dayElem.classList.add(\"endRange\");\n                if (timestamp >= minRange &&\n                    (maxRange === 0 || timestamp <= maxRange) &&\n                    (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.isBetween)(timestamp, initialDate, hoverDate))\n                    dayElem.classList.add(\"inRange\");\n            }\n        });\n    }\n    function onResize() {\n        if (self.isOpen && !self.config.static && !self.config.inline)\n            positionCalendar();\n    }\n    function open(e, positionElement) {\n        if (positionElement === void 0) { positionElement = self._positionElement; }\n        if (self.isMobile === true) {\n            if (e) {\n                e.preventDefault();\n                var eventTarget = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.getEventTarget)(e);\n                if (eventTarget) {\n                    eventTarget.blur();\n                }\n            }\n            if (self.mobileInput !== undefined) {\n                self.mobileInput.focus();\n                self.mobileInput.click();\n            }\n            triggerEvent(\"onOpen\");\n            return;\n        }\n        else if (self._input.disabled || self.config.inline) {\n            return;\n        }\n        var wasOpen = self.isOpen;\n        self.isOpen = true;\n        if (!wasOpen) {\n            self.calendarContainer.classList.add(\"open\");\n            self._input.classList.add(\"active\");\n            triggerEvent(\"onOpen\");\n            positionCalendar(positionElement);\n        }\n        if (self.config.enableTime === true && self.config.noCalendar === true) {\n            if (self.config.allowInput === false &&\n                (e === undefined ||\n                    !self.timeContainer.contains(e.relatedTarget))) {\n                setTimeout(function () { return self.hourElement.select(); }, 50);\n            }\n        }\n    }\n    function minMaxDateSetter(type) {\n        return function (date) {\n            var dateObj = (self.config[\"_\" + type + \"Date\"] = self.parseDate(date, self.config.dateFormat));\n            var inverseDateObj = self.config[\"_\" + (type === \"min\" ? \"max\" : \"min\") + \"Date\"];\n            if (dateObj !== undefined) {\n                self[type === \"min\" ? \"minDateHasTime\" : \"maxDateHasTime\"] =\n                    dateObj.getHours() > 0 ||\n                        dateObj.getMinutes() > 0 ||\n                        dateObj.getSeconds() > 0;\n            }\n            if (self.selectedDates) {\n                self.selectedDates = self.selectedDates.filter(function (d) { return isEnabled(d); });\n                if (!self.selectedDates.length && type === \"min\")\n                    setHoursFromDate(dateObj);\n                updateValue();\n            }\n            if (self.daysContainer) {\n                redraw();\n                if (dateObj !== undefined)\n                    self.currentYearElement[type] = dateObj.getFullYear().toString();\n                else\n                    self.currentYearElement.removeAttribute(type);\n                self.currentYearElement.disabled =\n                    !!inverseDateObj &&\n                        dateObj !== undefined &&\n                        inverseDateObj.getFullYear() === dateObj.getFullYear();\n            }\n        };\n    }\n    function parseConfig() {\n        var boolOpts = [\n            \"wrap\",\n            \"weekNumbers\",\n            \"allowInput\",\n            \"allowInvalidPreload\",\n            \"clickOpens\",\n            \"time_24hr\",\n            \"enableTime\",\n            \"noCalendar\",\n            \"altInput\",\n            \"shorthandCurrentMonth\",\n            \"inline\",\n            \"static\",\n            \"enableSeconds\",\n            \"disableMobile\",\n        ];\n        var userConfig = __assign(__assign({}, JSON.parse(JSON.stringify(element.dataset || {}))), instanceConfig);\n        var formats = {};\n        self.config.parseDate = userConfig.parseDate;\n        self.config.formatDate = userConfig.formatDate;\n        Object.defineProperty(self.config, \"enable\", {\n            get: function () { return self.config._enable; },\n            set: function (dates) {\n                self.config._enable = parseDateRules(dates);\n            },\n        });\n        Object.defineProperty(self.config, \"disable\", {\n            get: function () { return self.config._disable; },\n            set: function (dates) {\n                self.config._disable = parseDateRules(dates);\n            },\n        });\n        var timeMode = userConfig.mode === \"time\";\n        if (!userConfig.dateFormat && (userConfig.enableTime || timeMode)) {\n            var defaultDateFormat = flatpickr.defaultConfig.dateFormat || _types_options__WEBPACK_IMPORTED_MODULE_0__.defaults.dateFormat;\n            formats.dateFormat =\n                userConfig.noCalendar || timeMode\n                    ? \"H:i\" + (userConfig.enableSeconds ? \":S\" : \"\")\n                    : defaultDateFormat + \" H:i\" + (userConfig.enableSeconds ? \":S\" : \"\");\n        }\n        if (userConfig.altInput &&\n            (userConfig.enableTime || timeMode) &&\n            !userConfig.altFormat) {\n            var defaultAltFormat = flatpickr.defaultConfig.altFormat || _types_options__WEBPACK_IMPORTED_MODULE_0__.defaults.altFormat;\n            formats.altFormat =\n                userConfig.noCalendar || timeMode\n                    ? \"h:i\" + (userConfig.enableSeconds ? \":S K\" : \" K\")\n                    : defaultAltFormat + (\" h:i\" + (userConfig.enableSeconds ? \":S\" : \"\") + \" K\");\n        }\n        Object.defineProperty(self.config, \"minDate\", {\n            get: function () { return self.config._minDate; },\n            set: minMaxDateSetter(\"min\"),\n        });\n        Object.defineProperty(self.config, \"maxDate\", {\n            get: function () { return self.config._maxDate; },\n            set: minMaxDateSetter(\"max\"),\n        });\n        var minMaxTimeSetter = function (type) { return function (val) {\n            self.config[type === \"min\" ? \"_minTime\" : \"_maxTime\"] = self.parseDate(val, \"H:i:S\");\n        }; };\n        Object.defineProperty(self.config, \"minTime\", {\n            get: function () { return self.config._minTime; },\n            set: minMaxTimeSetter(\"min\"),\n        });\n        Object.defineProperty(self.config, \"maxTime\", {\n            get: function () { return self.config._maxTime; },\n            set: minMaxTimeSetter(\"max\"),\n        });\n        if (userConfig.mode === \"time\") {\n            self.config.noCalendar = true;\n            self.config.enableTime = true;\n        }\n        Object.assign(self.config, formats, userConfig);\n        for (var i = 0; i < boolOpts.length; i++)\n            self.config[boolOpts[i]] =\n                self.config[boolOpts[i]] === true ||\n                    self.config[boolOpts[i]] === \"true\";\n        _types_options__WEBPACK_IMPORTED_MODULE_0__.HOOKS.filter(function (hook) { return self.config[hook] !== undefined; }).forEach(function (hook) {\n            self.config[hook] = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.arrayify)(self.config[hook] || []).map(bindToInstance);\n        });\n        self.isMobile =\n            !self.config.disableMobile &&\n                !self.config.inline &&\n                self.config.mode === \"single\" &&\n                !self.config.disable.length &&\n                !self.config.enable &&\n                !self.config.weekNumbers &&\n                /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n        for (var i = 0; i < self.config.plugins.length; i++) {\n            var pluginConf = self.config.plugins[i](self) || {};\n            for (var key in pluginConf) {\n                if (_types_options__WEBPACK_IMPORTED_MODULE_0__.HOOKS.indexOf(key) > -1) {\n                    self.config[key] = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.arrayify)(pluginConf[key])\n                        .map(bindToInstance)\n                        .concat(self.config[key]);\n                }\n                else if (typeof userConfig[key] === \"undefined\")\n                    self.config[key] = pluginConf[key];\n            }\n        }\n        if (!userConfig.altInputClass) {\n            self.config.altInputClass =\n                getInputElem().className + \" \" + self.config.altInputClass;\n        }\n        triggerEvent(\"onParseConfig\");\n    }\n    function getInputElem() {\n        return self.config.wrap\n            ? element.querySelector(\"[data-input]\")\n            : element;\n    }\n    function setupLocale() {\n        if (typeof self.config.locale !== \"object\" &&\n            typeof flatpickr.l10ns[self.config.locale] === \"undefined\")\n            self.config.errorHandler(new Error(\"flatpickr: invalid locale \" + self.config.locale));\n        self.l10n = __assign(__assign({}, flatpickr.l10ns.default), (typeof self.config.locale === \"object\"\n            ? self.config.locale\n            : self.config.locale !== \"default\"\n                ? flatpickr.l10ns[self.config.locale]\n                : undefined));\n        _utils_formatting__WEBPACK_IMPORTED_MODULE_5__.tokenRegex.D = \"(\" + self.l10n.weekdays.shorthand.join(\"|\") + \")\";\n        _utils_formatting__WEBPACK_IMPORTED_MODULE_5__.tokenRegex.l = \"(\" + self.l10n.weekdays.longhand.join(\"|\") + \")\";\n        _utils_formatting__WEBPACK_IMPORTED_MODULE_5__.tokenRegex.M = \"(\" + self.l10n.months.shorthand.join(\"|\") + \")\";\n        _utils_formatting__WEBPACK_IMPORTED_MODULE_5__.tokenRegex.F = \"(\" + self.l10n.months.longhand.join(\"|\") + \")\";\n        _utils_formatting__WEBPACK_IMPORTED_MODULE_5__.tokenRegex.K = \"(\" + self.l10n.amPM[0] + \"|\" + self.l10n.amPM[1] + \"|\" + self.l10n.amPM[0].toLowerCase() + \"|\" + self.l10n.amPM[1].toLowerCase() + \")\";\n        var userConfig = __assign(__assign({}, instanceConfig), JSON.parse(JSON.stringify(element.dataset || {})));\n        if (userConfig.time_24hr === undefined &&\n            flatpickr.defaultConfig.time_24hr === undefined) {\n            self.config.time_24hr = self.l10n.time_24hr;\n        }\n        self.formatDate = (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.createDateFormatter)(self);\n        self.parseDate = (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.createDateParser)({ config: self.config, l10n: self.l10n });\n    }\n    function positionCalendar(customPositionElement) {\n        if (typeof self.config.position === \"function\") {\n            return void self.config.position(self, customPositionElement);\n        }\n        if (self.calendarContainer === undefined)\n            return;\n        triggerEvent(\"onPreCalendarPosition\");\n        var positionElement = customPositionElement || self._positionElement;\n        var calendarHeight = Array.prototype.reduce.call(self.calendarContainer.children, (function (acc, child) { return acc + child.offsetHeight; }), 0), calendarWidth = self.calendarContainer.offsetWidth, configPos = self.config.position.split(\" \"), configPosVertical = configPos[0], configPosHorizontal = configPos.length > 1 ? configPos[1] : null, inputBounds = positionElement.getBoundingClientRect(), distanceFromBottom = window.innerHeight - inputBounds.bottom, showOnTop = configPosVertical === \"above\" ||\n            (configPosVertical !== \"below\" &&\n                distanceFromBottom < calendarHeight &&\n                inputBounds.top > calendarHeight);\n        var top = window.pageYOffset +\n            inputBounds.top +\n            (!showOnTop ? positionElement.offsetHeight + 2 : -calendarHeight - 2);\n        (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(self.calendarContainer, \"arrowTop\", !showOnTop);\n        (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(self.calendarContainer, \"arrowBottom\", showOnTop);\n        if (self.config.inline)\n            return;\n        var left = window.pageXOffset + inputBounds.left;\n        var isCenter = false;\n        var isRight = false;\n        if (configPosHorizontal === \"center\") {\n            left -= (calendarWidth - inputBounds.width) / 2;\n            isCenter = true;\n        }\n        else if (configPosHorizontal === \"right\") {\n            left -= calendarWidth - inputBounds.width;\n            isRight = true;\n        }\n        (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(self.calendarContainer, \"arrowLeft\", !isCenter && !isRight);\n        (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(self.calendarContainer, \"arrowCenter\", isCenter);\n        (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(self.calendarContainer, \"arrowRight\", isRight);\n        var right = window.document.body.offsetWidth -\n            (window.pageXOffset + inputBounds.right);\n        var rightMost = left + calendarWidth > window.document.body.offsetWidth;\n        var centerMost = right + calendarWidth > window.document.body.offsetWidth;\n        (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(self.calendarContainer, \"rightMost\", rightMost);\n        if (self.config.static)\n            return;\n        self.calendarContainer.style.top = top + \"px\";\n        if (!rightMost) {\n            self.calendarContainer.style.left = left + \"px\";\n            self.calendarContainer.style.right = \"auto\";\n        }\n        else if (!centerMost) {\n            self.calendarContainer.style.left = \"auto\";\n            self.calendarContainer.style.right = right + \"px\";\n        }\n        else {\n            var doc = getDocumentStyleSheet();\n            if (doc === undefined)\n                return;\n            var bodyWidth = window.document.body.offsetWidth;\n            var centerLeft = Math.max(0, bodyWidth / 2 - calendarWidth / 2);\n            var centerBefore = \".flatpickr-calendar.centerMost:before\";\n            var centerAfter = \".flatpickr-calendar.centerMost:after\";\n            var centerIndex = doc.cssRules.length;\n            var centerStyle = \"{left:\" + inputBounds.left + \"px;right:auto;}\";\n            (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(self.calendarContainer, \"rightMost\", false);\n            (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.toggleClass)(self.calendarContainer, \"centerMost\", true);\n            doc.insertRule(centerBefore + \",\" + centerAfter + centerStyle, centerIndex);\n            self.calendarContainer.style.left = centerLeft + \"px\";\n            self.calendarContainer.style.right = \"auto\";\n        }\n    }\n    function getDocumentStyleSheet() {\n        var editableSheet = null;\n        for (var i = 0; i < document.styleSheets.length; i++) {\n            var sheet = document.styleSheets[i];\n            if (!sheet.cssRules)\n                continue;\n            try {\n                sheet.cssRules;\n            }\n            catch (err) {\n                continue;\n            }\n            editableSheet = sheet;\n            break;\n        }\n        return editableSheet != null ? editableSheet : createStyleSheet();\n    }\n    function createStyleSheet() {\n        var style = document.createElement(\"style\");\n        document.head.appendChild(style);\n        return style.sheet;\n    }\n    function redraw() {\n        if (self.config.noCalendar || self.isMobile)\n            return;\n        buildMonthSwitch();\n        updateNavigationCurrentMonth();\n        buildDays();\n    }\n    function focusAndClose() {\n        self._input.focus();\n        if (window.navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.msMaxTouchPoints !== undefined) {\n            setTimeout(self.close, 0);\n        }\n        else {\n            self.close();\n        }\n    }\n    function selectDate(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        var isSelectable = function (day) {\n            return day.classList &&\n                day.classList.contains(\"flatpickr-day\") &&\n                !day.classList.contains(\"flatpickr-disabled\") &&\n                !day.classList.contains(\"notAllowed\");\n        };\n        var t = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.findParent)((0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.getEventTarget)(e), isSelectable);\n        if (t === undefined)\n            return;\n        var target = t;\n        var selectedDate = (self.latestSelectedDateObj = new Date(target.dateObj.getTime()));\n        var shouldChangeMonth = (selectedDate.getMonth() < self.currentMonth ||\n            selectedDate.getMonth() >\n                self.currentMonth + self.config.showMonths - 1) &&\n            self.config.mode !== \"range\";\n        self.selectedDateElem = target;\n        if (self.config.mode === \"single\")\n            self.selectedDates = [selectedDate];\n        else if (self.config.mode === \"multiple\") {\n            var selectedIndex = isDateSelected(selectedDate);\n            if (selectedIndex)\n                self.selectedDates.splice(parseInt(selectedIndex), 1);\n            else\n                self.selectedDates.push(selectedDate);\n        }\n        else if (self.config.mode === \"range\") {\n            if (self.selectedDates.length === 2) {\n                self.clear(false, false);\n            }\n            self.latestSelectedDateObj = selectedDate;\n            self.selectedDates.push(selectedDate);\n            if ((0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.compareDates)(selectedDate, self.selectedDates[0], true) !== 0)\n                self.selectedDates.sort(function (a, b) { return a.getTime() - b.getTime(); });\n        }\n        setHoursFromInputs();\n        if (shouldChangeMonth) {\n            var isNewYear = self.currentYear !== selectedDate.getFullYear();\n            self.currentYear = selectedDate.getFullYear();\n            self.currentMonth = selectedDate.getMonth();\n            if (isNewYear) {\n                triggerEvent(\"onYearChange\");\n                buildMonthSwitch();\n            }\n            triggerEvent(\"onMonthChange\");\n        }\n        updateNavigationCurrentMonth();\n        buildDays();\n        updateValue();\n        if (!shouldChangeMonth &&\n            self.config.mode !== \"range\" &&\n            self.config.showMonths === 1)\n            focusOnDayElem(target);\n        else if (self.selectedDateElem !== undefined &&\n            self.hourElement === undefined) {\n            self.selectedDateElem && self.selectedDateElem.focus();\n        }\n        if (self.hourElement !== undefined)\n            self.hourElement !== undefined && self.hourElement.focus();\n        if (self.config.closeOnSelect) {\n            var single = self.config.mode === \"single\" && !self.config.enableTime;\n            var range = self.config.mode === \"range\" &&\n                self.selectedDates.length === 2 &&\n                !self.config.enableTime;\n            if (single || range) {\n                focusAndClose();\n            }\n        }\n        triggerChange();\n    }\n    var CALLBACKS = {\n        locale: [setupLocale, updateWeekdays],\n        showMonths: [buildMonths, setCalendarWidth, buildWeekdays],\n        minDate: [jumpToDate],\n        maxDate: [jumpToDate],\n        positionElement: [updatePositionElement],\n        clickOpens: [\n            function () {\n                if (self.config.clickOpens === true) {\n                    bind(self._input, \"focus\", self.open);\n                    bind(self._input, \"click\", self.open);\n                }\n                else {\n                    self._input.removeEventListener(\"focus\", self.open);\n                    self._input.removeEventListener(\"click\", self.open);\n                }\n            },\n        ],\n    };\n    function set(option, value) {\n        if (option !== null && typeof option === \"object\") {\n            Object.assign(self.config, option);\n            for (var key in option) {\n                if (CALLBACKS[key] !== undefined)\n                    CALLBACKS[key].forEach(function (x) { return x(); });\n            }\n        }\n        else {\n            self.config[option] = value;\n            if (CALLBACKS[option] !== undefined)\n                CALLBACKS[option].forEach(function (x) { return x(); });\n            else if (_types_options__WEBPACK_IMPORTED_MODULE_0__.HOOKS.indexOf(option) > -1)\n                self.config[option] = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.arrayify)(value);\n        }\n        self.redraw();\n        updateValue(true);\n    }\n    function setSelectedDate(inputDate, format) {\n        var dates = [];\n        if (inputDate instanceof Array)\n            dates = inputDate.map(function (d) { return self.parseDate(d, format); });\n        else if (inputDate instanceof Date || typeof inputDate === \"number\")\n            dates = [self.parseDate(inputDate, format)];\n        else if (typeof inputDate === \"string\") {\n            switch (self.config.mode) {\n                case \"single\":\n                case \"time\":\n                    dates = [self.parseDate(inputDate, format)];\n                    break;\n                case \"multiple\":\n                    dates = inputDate\n                        .split(self.config.conjunction)\n                        .map(function (date) { return self.parseDate(date, format); });\n                    break;\n                case \"range\":\n                    dates = inputDate\n                        .split(self.l10n.rangeSeparator)\n                        .map(function (date) { return self.parseDate(date, format); });\n                    break;\n                default:\n                    break;\n            }\n        }\n        else\n            self.config.errorHandler(new Error(\"Invalid date supplied: \" + JSON.stringify(inputDate)));\n        self.selectedDates = (self.config.allowInvalidPreload\n            ? dates\n            : dates.filter(function (d) { return d instanceof Date && isEnabled(d, false); }));\n        if (self.config.mode === \"range\")\n            self.selectedDates.sort(function (a, b) { return a.getTime() - b.getTime(); });\n    }\n    function setDate(date, triggerChange, format) {\n        if (triggerChange === void 0) { triggerChange = false; }\n        if (format === void 0) { format = self.config.dateFormat; }\n        if ((date !== 0 && !date) || (date instanceof Array && date.length === 0))\n            return self.clear(triggerChange);\n        setSelectedDate(date, format);\n        self.latestSelectedDateObj =\n            self.selectedDates[self.selectedDates.length - 1];\n        self.redraw();\n        jumpToDate(undefined, triggerChange);\n        setHoursFromDate();\n        if (self.selectedDates.length === 0) {\n            self.clear(false);\n        }\n        updateValue(triggerChange);\n        if (triggerChange)\n            triggerEvent(\"onChange\");\n    }\n    function parseDateRules(arr) {\n        return arr\n            .slice()\n            .map(function (rule) {\n            if (typeof rule === \"string\" ||\n                typeof rule === \"number\" ||\n                rule instanceof Date) {\n                return self.parseDate(rule, undefined, true);\n            }\n            else if (rule &&\n                typeof rule === \"object\" &&\n                rule.from &&\n                rule.to)\n                return {\n                    from: self.parseDate(rule.from, undefined),\n                    to: self.parseDate(rule.to, undefined),\n                };\n            return rule;\n        })\n            .filter(function (x) { return x; });\n    }\n    function setupDates() {\n        self.selectedDates = [];\n        self.now = self.parseDate(self.config.now) || new Date();\n        var preloadedDate = self.config.defaultDate ||\n            ((self.input.nodeName === \"INPUT\" ||\n                self.input.nodeName === \"TEXTAREA\") &&\n                self.input.placeholder &&\n                self.input.value === self.input.placeholder\n                ? null\n                : self.input.value);\n        if (preloadedDate)\n            setSelectedDate(preloadedDate, self.config.dateFormat);\n        self._initialDate =\n            self.selectedDates.length > 0\n                ? self.selectedDates[0]\n                : self.config.minDate &&\n                    self.config.minDate.getTime() > self.now.getTime()\n                    ? self.config.minDate\n                    : self.config.maxDate &&\n                        self.config.maxDate.getTime() < self.now.getTime()\n                        ? self.config.maxDate\n                        : self.now;\n        self.currentYear = self._initialDate.getFullYear();\n        self.currentMonth = self._initialDate.getMonth();\n        if (self.selectedDates.length > 0)\n            self.latestSelectedDateObj = self.selectedDates[0];\n        if (self.config.minTime !== undefined)\n            self.config.minTime = self.parseDate(self.config.minTime, \"H:i\");\n        if (self.config.maxTime !== undefined)\n            self.config.maxTime = self.parseDate(self.config.maxTime, \"H:i\");\n        self.minDateHasTime =\n            !!self.config.minDate &&\n                (self.config.minDate.getHours() > 0 ||\n                    self.config.minDate.getMinutes() > 0 ||\n                    self.config.minDate.getSeconds() > 0);\n        self.maxDateHasTime =\n            !!self.config.maxDate &&\n                (self.config.maxDate.getHours() > 0 ||\n                    self.config.maxDate.getMinutes() > 0 ||\n                    self.config.maxDate.getSeconds() > 0);\n    }\n    function setupInputs() {\n        self.input = getInputElem();\n        if (!self.input) {\n            self.config.errorHandler(new Error(\"Invalid input element specified\"));\n            return;\n        }\n        self.input._type = self.input.type;\n        self.input.type = \"text\";\n        self.input.classList.add(\"flatpickr-input\");\n        self._input = self.input;\n        if (self.config.altInput) {\n            self.altInput = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(self.input.nodeName, self.config.altInputClass);\n            self._input = self.altInput;\n            self.altInput.placeholder = self.input.placeholder;\n            self.altInput.disabled = self.input.disabled;\n            self.altInput.required = self.input.required;\n            self.altInput.tabIndex = self.input.tabIndex;\n            self.altInput.type = \"text\";\n            self.input.setAttribute(\"type\", \"hidden\");\n            if (!self.config.static && self.input.parentNode)\n                self.input.parentNode.insertBefore(self.altInput, self.input.nextSibling);\n        }\n        if (!self.config.allowInput)\n            self._input.setAttribute(\"readonly\", \"readonly\");\n        updatePositionElement();\n    }\n    function updatePositionElement() {\n        self._positionElement = self.config.positionElement || self._input;\n    }\n    function setupMobile() {\n        var inputType = self.config.enableTime\n            ? self.config.noCalendar\n                ? \"time\"\n                : \"datetime-local\"\n            : \"date\";\n        self.mobileInput = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.createElement)(\"input\", self.input.className + \" flatpickr-mobile\");\n        self.mobileInput.tabIndex = 1;\n        self.mobileInput.type = inputType;\n        self.mobileInput.disabled = self.input.disabled;\n        self.mobileInput.required = self.input.required;\n        self.mobileInput.placeholder = self.input.placeholder;\n        self.mobileFormatStr =\n            inputType === \"datetime-local\"\n                ? \"Y-m-d\\\\TH:i:S\"\n                : inputType === \"date\"\n                    ? \"Y-m-d\"\n                    : \"H:i:S\";\n        if (self.selectedDates.length > 0) {\n            self.mobileInput.defaultValue = self.mobileInput.value = self.formatDate(self.selectedDates[0], self.mobileFormatStr);\n        }\n        if (self.config.minDate)\n            self.mobileInput.min = self.formatDate(self.config.minDate, \"Y-m-d\");\n        if (self.config.maxDate)\n            self.mobileInput.max = self.formatDate(self.config.maxDate, \"Y-m-d\");\n        if (self.input.getAttribute(\"step\"))\n            self.mobileInput.step = String(self.input.getAttribute(\"step\"));\n        self.input.type = \"hidden\";\n        if (self.altInput !== undefined)\n            self.altInput.type = \"hidden\";\n        try {\n            if (self.input.parentNode)\n                self.input.parentNode.insertBefore(self.mobileInput, self.input.nextSibling);\n        }\n        catch (_a) { }\n        bind(self.mobileInput, \"change\", function (e) {\n            self.setDate((0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.getEventTarget)(e).value, false, self.mobileFormatStr);\n            triggerEvent(\"onChange\");\n            triggerEvent(\"onClose\");\n        });\n    }\n    function toggle(e) {\n        if (self.isOpen === true)\n            return self.close();\n        self.open(e);\n    }\n    function triggerEvent(event, data) {\n        if (self.config === undefined)\n            return;\n        var hooks = self.config[event];\n        if (hooks !== undefined && hooks.length > 0) {\n            for (var i = 0; hooks[i] && i < hooks.length; i++)\n                hooks[i](self.selectedDates, self.input.value, self, data);\n        }\n        if (event === \"onChange\") {\n            self.input.dispatchEvent(createEvent(\"change\"));\n            self.input.dispatchEvent(createEvent(\"input\"));\n        }\n    }\n    function createEvent(name) {\n        var e = document.createEvent(\"Event\");\n        e.initEvent(name, true, true);\n        return e;\n    }\n    function isDateSelected(date) {\n        for (var i = 0; i < self.selectedDates.length; i++) {\n            var selectedDate = self.selectedDates[i];\n            if (selectedDate instanceof Date &&\n                (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.compareDates)(selectedDate, date) === 0)\n                return \"\" + i;\n        }\n        return false;\n    }\n    function isDateInRange(date) {\n        if (self.config.mode !== \"range\" || self.selectedDates.length < 2)\n            return false;\n        return ((0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.compareDates)(date, self.selectedDates[0]) >= 0 &&\n            (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.compareDates)(date, self.selectedDates[1]) <= 0);\n    }\n    function updateNavigationCurrentMonth() {\n        if (self.config.noCalendar || self.isMobile || !self.monthNav)\n            return;\n        self.yearElements.forEach(function (yearElement, i) {\n            var d = new Date(self.currentYear, self.currentMonth, 1);\n            d.setMonth(self.currentMonth + i);\n            if (self.config.showMonths > 1 ||\n                self.config.monthSelectorType === \"static\") {\n                self.monthElements[i].textContent =\n                    (0,_utils_formatting__WEBPACK_IMPORTED_MODULE_5__.monthToStr)(d.getMonth(), self.config.shorthandCurrentMonth, self.l10n) + \" \";\n            }\n            else {\n                self.monthsDropdownContainer.value = d.getMonth().toString();\n            }\n            yearElement.value = d.getFullYear().toString();\n        });\n        self._hidePrevMonthArrow =\n            self.config.minDate !== undefined &&\n                (self.currentYear === self.config.minDate.getFullYear()\n                    ? self.currentMonth <= self.config.minDate.getMonth()\n                    : self.currentYear < self.config.minDate.getFullYear());\n        self._hideNextMonthArrow =\n            self.config.maxDate !== undefined &&\n                (self.currentYear === self.config.maxDate.getFullYear()\n                    ? self.currentMonth + 1 > self.config.maxDate.getMonth()\n                    : self.currentYear > self.config.maxDate.getFullYear());\n    }\n    function getDateStr(specificFormat) {\n        var format = specificFormat ||\n            (self.config.altInput ? self.config.altFormat : self.config.dateFormat);\n        return self.selectedDates\n            .map(function (dObj) { return self.formatDate(dObj, format); })\n            .filter(function (d, i, arr) {\n            return self.config.mode !== \"range\" ||\n                self.config.enableTime ||\n                arr.indexOf(d) === i;\n        })\n            .join(self.config.mode !== \"range\"\n            ? self.config.conjunction\n            : self.l10n.rangeSeparator);\n    }\n    function updateValue(triggerChange) {\n        if (triggerChange === void 0) { triggerChange = true; }\n        if (self.mobileInput !== undefined && self.mobileFormatStr) {\n            self.mobileInput.value =\n                self.latestSelectedDateObj !== undefined\n                    ? self.formatDate(self.latestSelectedDateObj, self.mobileFormatStr)\n                    : \"\";\n        }\n        self.input.value = getDateStr(self.config.dateFormat);\n        if (self.altInput !== undefined) {\n            self.altInput.value = getDateStr(self.config.altFormat);\n        }\n        if (triggerChange !== false)\n            triggerEvent(\"onValueUpdate\");\n    }\n    function onMonthNavClick(e) {\n        var eventTarget = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.getEventTarget)(e);\n        var isPrevMonth = self.prevMonthNav.contains(eventTarget);\n        var isNextMonth = self.nextMonthNav.contains(eventTarget);\n        if (isPrevMonth || isNextMonth) {\n            changeMonth(isPrevMonth ? -1 : 1);\n        }\n        else if (self.yearElements.indexOf(eventTarget) >= 0) {\n            eventTarget.select();\n        }\n        else if (eventTarget.classList.contains(\"arrowUp\")) {\n            self.changeYear(self.currentYear + 1);\n        }\n        else if (eventTarget.classList.contains(\"arrowDown\")) {\n            self.changeYear(self.currentYear - 1);\n        }\n    }\n    function timeWrapper(e) {\n        e.preventDefault();\n        var isKeyDown = e.type === \"keydown\", eventTarget = (0,_utils_dom__WEBPACK_IMPORTED_MODULE_3__.getEventTarget)(e), input = eventTarget;\n        if (self.amPM !== undefined && eventTarget === self.amPM) {\n            self.amPM.textContent =\n                self.l10n.amPM[(0,_utils__WEBPACK_IMPORTED_MODULE_2__.int)(self.amPM.textContent === self.l10n.amPM[0])];\n        }\n        var min = parseFloat(input.getAttribute(\"min\")), max = parseFloat(input.getAttribute(\"max\")), step = parseFloat(input.getAttribute(\"step\")), curValue = parseInt(input.value, 10), delta = e.delta ||\n            (isKeyDown ? (e.which === 38 ? 1 : -1) : 0);\n        var newValue = curValue + step * delta;\n        if (typeof input.value !== \"undefined\" && input.value.length === 2) {\n            var isHourElem = input === self.hourElement, isMinuteElem = input === self.minuteElement;\n            if (newValue < min) {\n                newValue =\n                    max +\n                        newValue +\n                        (0,_utils__WEBPACK_IMPORTED_MODULE_2__.int)(!isHourElem) +\n                        ((0,_utils__WEBPACK_IMPORTED_MODULE_2__.int)(isHourElem) && (0,_utils__WEBPACK_IMPORTED_MODULE_2__.int)(!self.amPM));\n                if (isMinuteElem)\n                    incrementNumInput(undefined, -1, self.hourElement);\n            }\n            else if (newValue > max) {\n                newValue =\n                    input === self.hourElement ? newValue - max - (0,_utils__WEBPACK_IMPORTED_MODULE_2__.int)(!self.amPM) : min;\n                if (isMinuteElem)\n                    incrementNumInput(undefined, 1, self.hourElement);\n            }\n            if (self.amPM &&\n                isHourElem &&\n                (step === 1\n                    ? newValue + curValue === 23\n                    : Math.abs(newValue - curValue) > step)) {\n                self.amPM.textContent =\n                    self.l10n.amPM[(0,_utils__WEBPACK_IMPORTED_MODULE_2__.int)(self.amPM.textContent === self.l10n.amPM[0])];\n            }\n            input.value = (0,_utils__WEBPACK_IMPORTED_MODULE_2__.pad)(newValue);\n        }\n    }\n    init();\n    return self;\n}\nfunction _flatpickr(nodeList, config) {\n    var nodes = Array.prototype.slice\n        .call(nodeList)\n        .filter(function (x) { return x instanceof HTMLElement; });\n    var instances = [];\n    for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        try {\n            if (node.getAttribute(\"data-fp-omit\") !== null)\n                continue;\n            if (node._flatpickr !== undefined) {\n                node._flatpickr.destroy();\n                node._flatpickr = undefined;\n            }\n            node._flatpickr = FlatpickrInstance(node, config || {});\n            instances.push(node._flatpickr);\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n    return instances.length === 1 ? instances[0] : instances;\n}\nif (typeof HTMLElement !== \"undefined\" &&\n    typeof HTMLCollection !== \"undefined\" &&\n    typeof NodeList !== \"undefined\") {\n    HTMLCollection.prototype.flatpickr = NodeList.prototype.flatpickr = function (config) {\n        return _flatpickr(this, config);\n    };\n    HTMLElement.prototype.flatpickr = function (config) {\n        return _flatpickr([this], config);\n    };\n}\nvar flatpickr = function (selector, config) {\n    if (typeof selector === \"string\") {\n        return _flatpickr(window.document.querySelectorAll(selector), config);\n    }\n    else if (selector instanceof Node) {\n        return _flatpickr([selector], config);\n    }\n    else {\n        return _flatpickr(selector, config);\n    }\n};\nflatpickr.defaultConfig = {};\nflatpickr.l10ns = {\n    en: __assign({}, _l10n_default__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n    default: __assign({}, _l10n_default__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n};\nflatpickr.localize = function (l10n) {\n    flatpickr.l10ns.default = __assign(__assign({}, flatpickr.l10ns.default), l10n);\n};\nflatpickr.setDefaults = function (config) {\n    flatpickr.defaultConfig = __assign(__assign({}, flatpickr.defaultConfig), config);\n};\nflatpickr.parseDate = (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.createDateParser)({});\nflatpickr.formatDate = (0,_utils_dates__WEBPACK_IMPORTED_MODULE_4__.createDateFormatter)({});\nflatpickr.compareDates = _utils_dates__WEBPACK_IMPORTED_MODULE_4__.compareDates;\nif (typeof jQuery !== \"undefined\" && typeof jQuery.fn !== \"undefined\") {\n    jQuery.fn.flatpickr = function (config) {\n        return _flatpickr(this, config);\n    };\n}\nDate.prototype.fp_incr = function (days) {\n    return new Date(this.getFullYear(), this.getMonth(), this.getDate() + (typeof days === \"string\" ? parseInt(days, 10) : days));\n};\nif (typeof window !== \"undefined\") {\n    window.flatpickr = flatpickr;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (flatpickr);\n\n\n//# sourceURL=webpack://schedule-bx24-app/./node_modules/flatpickr/dist/esm/index.js?");

/***/ }),

/***/ "./node_modules/flatpickr/dist/esm/l10n/default.js":
/*!*********************************************************!*\
  !*** ./node_modules/flatpickr/dist/esm/l10n/default.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   english: () => (/* binding */ english)\n/* harmony export */ });\nvar english = {\n    weekdays: {\n        shorthand: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n        longhand: [\n            \"Sunday\",\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n            \"Saturday\",\n        ],\n    },\n    months: {\n        shorthand: [\n            \"Jan\",\n            \"Feb\",\n            \"Mar\",\n            \"Apr\",\n            \"May\",\n            \"Jun\",\n            \"Jul\",\n            \"Aug\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\",\n        ],\n        longhand: [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\",\n        ],\n    },\n    daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n    firstDayOfWeek: 0,\n    ordinal: function (nth) {\n        var s = nth % 100;\n        if (s > 3 && s < 21)\n            return \"th\";\n        switch (s % 10) {\n            case 1:\n                return \"st\";\n            case 2:\n                return \"nd\";\n            case 3:\n                return \"rd\";\n            default:\n                return \"th\";\n        }\n    },\n    rangeSeparator: \" to \",\n    weekAbbreviation: \"Wk\",\n    scrollTitle: \"Scroll to increment\",\n    toggleTitle: \"Click to toggle\",\n    amPM: [\"AM\", \"PM\"],\n    yearAriaLabel: \"Year\",\n    monthAriaLabel: \"Month\",\n    hourAriaLabel: \"Hour\",\n    minuteAriaLabel: \"Minute\",\n    time_24hr: false,\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (english);\n\n\n//# sourceURL=webpack://schedule-bx24-app/./node_modules/flatpickr/dist/esm/l10n/default.js?");

/***/ }),

/***/ "./node_modules/flatpickr/dist/esm/types/options.js":
/*!**********************************************************!*\
  !*** ./node_modules/flatpickr/dist/esm/types/options.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   HOOKS: () => (/* binding */ HOOKS),\n/* harmony export */   defaults: () => (/* binding */ defaults)\n/* harmony export */ });\nvar HOOKS = [\n    \"onChange\",\n    \"onClose\",\n    \"onDayCreate\",\n    \"onDestroy\",\n    \"onKeyDown\",\n    \"onMonthChange\",\n    \"onOpen\",\n    \"onParseConfig\",\n    \"onReady\",\n    \"onValueUpdate\",\n    \"onYearChange\",\n    \"onPreCalendarPosition\",\n];\nvar defaults = {\n    _disable: [],\n    allowInput: false,\n    allowInvalidPreload: false,\n    altFormat: \"F j, Y\",\n    altInput: false,\n    altInputClass: \"form-control input\",\n    animate: typeof window === \"object\" &&\n        window.navigator.userAgent.indexOf(\"MSIE\") === -1,\n    ariaDateFormat: \"F j, Y\",\n    autoFillDefaultTime: true,\n    clickOpens: true,\n    closeOnSelect: true,\n    conjunction: \", \",\n    dateFormat: \"Y-m-d\",\n    defaultHour: 12,\n    defaultMinute: 0,\n    defaultSeconds: 0,\n    disable: [],\n    disableMobile: false,\n    enableSeconds: false,\n    enableTime: false,\n    errorHandler: function (err) {\n        return typeof console !== \"undefined\" && console.warn(err);\n    },\n    getWeek: function (givenDate) {\n        var date = new Date(givenDate.getTime());\n        date.setHours(0, 0, 0, 0);\n        date.setDate(date.getDate() + 3 - ((date.getDay() + 6) % 7));\n        var week1 = new Date(date.getFullYear(), 0, 4);\n        return (1 +\n            Math.round(((date.getTime() - week1.getTime()) / 86400000 -\n                3 +\n                ((week1.getDay() + 6) % 7)) /\n                7));\n    },\n    hourIncrement: 1,\n    ignoredFocusElements: [],\n    inline: false,\n    locale: \"default\",\n    minuteIncrement: 5,\n    mode: \"single\",\n    monthSelectorType: \"dropdown\",\n    nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\n    noCalendar: false,\n    now: new Date(),\n    onChange: [],\n    onClose: [],\n    onDayCreate: [],\n    onDestroy: [],\n    onKeyDown: [],\n    onMonthChange: [],\n    onOpen: [],\n    onParseConfig: [],\n    onReady: [],\n    onValueUpdate: [],\n    onYearChange: [],\n    onPreCalendarPosition: [],\n    plugins: [],\n    position: \"auto\",\n    positionElement: undefined,\n    prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\n    shorthandCurrentMonth: false,\n    showMonths: 1,\n    static: false,\n    time_24hr: false,\n    weekNumbers: false,\n    wrap: false,\n};\n\n\n//# sourceURL=webpack://schedule-bx24-app/./node_modules/flatpickr/dist/esm/types/options.js?");

/***/ }),

/***/ "./node_modules/flatpickr/dist/esm/utils/dates.js":
/*!********************************************************!*\
  !*** ./node_modules/flatpickr/dist/esm/utils/dates.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateSecondsSinceMidnight: () => (/* binding */ calculateSecondsSinceMidnight),\n/* harmony export */   compareDates: () => (/* binding */ compareDates),\n/* harmony export */   compareTimes: () => (/* binding */ compareTimes),\n/* harmony export */   createDateFormatter: () => (/* binding */ createDateFormatter),\n/* harmony export */   createDateParser: () => (/* binding */ createDateParser),\n/* harmony export */   duration: () => (/* binding */ duration),\n/* harmony export */   getDefaultHours: () => (/* binding */ getDefaultHours),\n/* harmony export */   isBetween: () => (/* binding */ isBetween),\n/* harmony export */   parseSeconds: () => (/* binding */ parseSeconds)\n/* harmony export */ });\n/* harmony import */ var _formatting__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./formatting */ \"./node_modules/flatpickr/dist/esm/utils/formatting.js\");\n/* harmony import */ var _types_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../types/options */ \"./node_modules/flatpickr/dist/esm/types/options.js\");\n/* harmony import */ var _l10n_default__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../l10n/default */ \"./node_modules/flatpickr/dist/esm/l10n/default.js\");\n\n\n\nvar createDateFormatter = function (_a) {\n    var _b = _a.config, config = _b === void 0 ? _types_options__WEBPACK_IMPORTED_MODULE_1__.defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? _l10n_default__WEBPACK_IMPORTED_MODULE_2__.english : _c, _d = _a.isMobile, isMobile = _d === void 0 ? false : _d;\n    return function (dateObj, frmt, overrideLocale) {\n        var locale = overrideLocale || l10n;\n        if (config.formatDate !== undefined && !isMobile) {\n            return config.formatDate(dateObj, frmt, locale);\n        }\n        return frmt\n            .split(\"\")\n            .map(function (c, i, arr) {\n            return _formatting__WEBPACK_IMPORTED_MODULE_0__.formats[c] && arr[i - 1] !== \"\\\\\"\n                ? _formatting__WEBPACK_IMPORTED_MODULE_0__.formats[c](dateObj, locale, config)\n                : c !== \"\\\\\"\n                    ? c\n                    : \"\";\n        })\n            .join(\"\");\n    };\n};\nvar createDateParser = function (_a) {\n    var _b = _a.config, config = _b === void 0 ? _types_options__WEBPACK_IMPORTED_MODULE_1__.defaults : _b, _c = _a.l10n, l10n = _c === void 0 ? _l10n_default__WEBPACK_IMPORTED_MODULE_2__.english : _c;\n    return function (date, givenFormat, timeless, customLocale) {\n        if (date !== 0 && !date)\n            return undefined;\n        var locale = customLocale || l10n;\n        var parsedDate;\n        var dateOrig = date;\n        if (date instanceof Date)\n            parsedDate = new Date(date.getTime());\n        else if (typeof date !== \"string\" &&\n            date.toFixed !== undefined)\n            parsedDate = new Date(date);\n        else if (typeof date === \"string\") {\n            var format = givenFormat || (config || _types_options__WEBPACK_IMPORTED_MODULE_1__.defaults).dateFormat;\n            var datestr = String(date).trim();\n            if (datestr === \"today\") {\n                parsedDate = new Date();\n                timeless = true;\n            }\n            else if (config && config.parseDate) {\n                parsedDate = config.parseDate(date, format);\n            }\n            else if (/Z$/.test(datestr) ||\n                /GMT$/.test(datestr)) {\n                parsedDate = new Date(date);\n            }\n            else {\n                var matched = void 0, ops = [];\n                for (var i = 0, matchIndex = 0, regexStr = \"\"; i < format.length; i++) {\n                    var token = format[i];\n                    var isBackSlash = token === \"\\\\\";\n                    var escaped = format[i - 1] === \"\\\\\" || isBackSlash;\n                    if (_formatting__WEBPACK_IMPORTED_MODULE_0__.tokenRegex[token] && !escaped) {\n                        regexStr += _formatting__WEBPACK_IMPORTED_MODULE_0__.tokenRegex[token];\n                        var match = new RegExp(regexStr).exec(date);\n                        if (match && (matched = true)) {\n                            ops[token !== \"Y\" ? \"push\" : \"unshift\"]({\n                                fn: _formatting__WEBPACK_IMPORTED_MODULE_0__.revFormat[token],\n                                val: match[++matchIndex],\n                            });\n                        }\n                    }\n                    else if (!isBackSlash)\n                        regexStr += \".\";\n                }\n                parsedDate =\n                    !config || !config.noCalendar\n                        ? new Date(new Date().getFullYear(), 0, 1, 0, 0, 0, 0)\n                        : new Date(new Date().setHours(0, 0, 0, 0));\n                ops.forEach(function (_a) {\n                    var fn = _a.fn, val = _a.val;\n                    return (parsedDate = fn(parsedDate, val, locale) || parsedDate);\n                });\n                parsedDate = matched ? parsedDate : undefined;\n            }\n        }\n        if (!(parsedDate instanceof Date && !isNaN(parsedDate.getTime()))) {\n            config.errorHandler(new Error(\"Invalid date provided: \" + dateOrig));\n            return undefined;\n        }\n        if (timeless === true)\n            parsedDate.setHours(0, 0, 0, 0);\n        return parsedDate;\n    };\n};\nfunction compareDates(date1, date2, timeless) {\n    if (timeless === void 0) { timeless = true; }\n    if (timeless !== false) {\n        return (new Date(date1.getTime()).setHours(0, 0, 0, 0) -\n            new Date(date2.getTime()).setHours(0, 0, 0, 0));\n    }\n    return date1.getTime() - date2.getTime();\n}\nfunction compareTimes(date1, date2) {\n    return (3600 * (date1.getHours() - date2.getHours()) +\n        60 * (date1.getMinutes() - date2.getMinutes()) +\n        date1.getSeconds() -\n        date2.getSeconds());\n}\nvar isBetween = function (ts, ts1, ts2) {\n    return ts > Math.min(ts1, ts2) && ts < Math.max(ts1, ts2);\n};\nvar calculateSecondsSinceMidnight = function (hours, minutes, seconds) {\n    return hours * 3600 + minutes * 60 + seconds;\n};\nvar parseSeconds = function (secondsSinceMidnight) {\n    var hours = Math.floor(secondsSinceMidnight / 3600), minutes = (secondsSinceMidnight - hours * 3600) / 60;\n    return [hours, minutes, secondsSinceMidnight - hours * 3600 - minutes * 60];\n};\nvar duration = {\n    DAY: 86400000,\n};\nfunction getDefaultHours(config) {\n    var hours = config.defaultHour;\n    var minutes = config.defaultMinute;\n    var seconds = config.defaultSeconds;\n    if (config.minDate !== undefined) {\n        var minHour = config.minDate.getHours();\n        var minMinutes = config.minDate.getMinutes();\n        var minSeconds = config.minDate.getSeconds();\n        if (hours < minHour) {\n            hours = minHour;\n        }\n        if (hours === minHour && minutes < minMinutes) {\n            minutes = minMinutes;\n        }\n        if (hours === minHour && minutes === minMinutes && seconds < minSeconds)\n            seconds = config.minDate.getSeconds();\n    }\n    if (config.maxDate !== undefined) {\n        var maxHr = config.maxDate.getHours();\n        var maxMinutes = config.maxDate.getMinutes();\n        hours = Math.min(hours, maxHr);\n        if (hours === maxHr)\n            minutes = Math.min(maxMinutes, minutes);\n        if (hours === maxHr && minutes === maxMinutes)\n            seconds = config.maxDate.getSeconds();\n    }\n    return { hours: hours, minutes: minutes, seconds: seconds };\n}\n\n\n//# sourceURL=webpack://schedule-bx24-app/./node_modules/flatpickr/dist/esm/utils/dates.js?");

/***/ }),

/***/ "./node_modules/flatpickr/dist/esm/utils/dom.js":
/*!******************************************************!*\
  !*** ./node_modules/flatpickr/dist/esm/utils/dom.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearNode: () => (/* binding */ clearNode),\n/* harmony export */   createElement: () => (/* binding */ createElement),\n/* harmony export */   createNumberInput: () => (/* binding */ createNumberInput),\n/* harmony export */   findParent: () => (/* binding */ findParent),\n/* harmony export */   getEventTarget: () => (/* binding */ getEventTarget),\n/* harmony export */   toggleClass: () => (/* binding */ toggleClass)\n/* harmony export */ });\nfunction toggleClass(elem, className, bool) {\n    if (bool === true)\n        return elem.classList.add(className);\n    elem.classList.remove(className);\n}\nfunction createElement(tag, className, content) {\n    var e = window.document.createElement(tag);\n    className = className || \"\";\n    content = content || \"\";\n    e.className = className;\n    if (content !== undefined)\n        e.textContent = content;\n    return e;\n}\nfunction clearNode(node) {\n    while (node.firstChild)\n        node.removeChild(node.firstChild);\n}\nfunction findParent(node, condition) {\n    if (condition(node))\n        return node;\n    else if (node.parentNode)\n        return findParent(node.parentNode, condition);\n    return undefined;\n}\nfunction createNumberInput(inputClassName, opts) {\n    var wrapper = createElement(\"div\", \"numInputWrapper\"), numInput = createElement(\"input\", \"numInput \" + inputClassName), arrowUp = createElement(\"span\", \"arrowUp\"), arrowDown = createElement(\"span\", \"arrowDown\");\n    if (navigator.userAgent.indexOf(\"MSIE 9.0\") === -1) {\n        numInput.type = \"number\";\n    }\n    else {\n        numInput.type = \"text\";\n        numInput.pattern = \"\\\\d*\";\n    }\n    if (opts !== undefined)\n        for (var key in opts)\n            numInput.setAttribute(key, opts[key]);\n    wrapper.appendChild(numInput);\n    wrapper.appendChild(arrowUp);\n    wrapper.appendChild(arrowDown);\n    return wrapper;\n}\nfunction getEventTarget(event) {\n    try {\n        if (typeof event.composedPath === \"function\") {\n            var path = event.composedPath();\n            return path[0];\n        }\n        return event.target;\n    }\n    catch (error) {\n        return event.target;\n    }\n}\n\n\n//# sourceURL=webpack://schedule-bx24-app/./node_modules/flatpickr/dist/esm/utils/dom.js?");

/***/ }),

/***/ "./node_modules/flatpickr/dist/esm/utils/formatting.js":
/*!*************************************************************!*\
  !*** ./node_modules/flatpickr/dist/esm/utils/formatting.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formats: () => (/* binding */ formats),\n/* harmony export */   monthToStr: () => (/* binding */ monthToStr),\n/* harmony export */   revFormat: () => (/* binding */ revFormat),\n/* harmony export */   tokenRegex: () => (/* binding */ tokenRegex)\n/* harmony export */ });\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils */ \"./node_modules/flatpickr/dist/esm/utils/index.js\");\n\nvar doNothing = function () { return undefined; };\nvar monthToStr = function (monthNumber, shorthand, locale) { return locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber]; };\nvar revFormat = {\n    D: doNothing,\n    F: function (dateObj, monthName, locale) {\n        dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n    },\n    G: function (dateObj, hour) {\n        dateObj.setHours((dateObj.getHours() >= 12 ? 12 : 0) + parseFloat(hour));\n    },\n    H: function (dateObj, hour) {\n        dateObj.setHours(parseFloat(hour));\n    },\n    J: function (dateObj, day) {\n        dateObj.setDate(parseFloat(day));\n    },\n    K: function (dateObj, amPM, locale) {\n        dateObj.setHours((dateObj.getHours() % 12) +\n            12 * (0,_utils__WEBPACK_IMPORTED_MODULE_0__.int)(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n    },\n    M: function (dateObj, shortMonth, locale) {\n        dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n    },\n    S: function (dateObj, seconds) {\n        dateObj.setSeconds(parseFloat(seconds));\n    },\n    U: function (_, unixSeconds) { return new Date(parseFloat(unixSeconds) * 1000); },\n    W: function (dateObj, weekNum, locale) {\n        var weekNumber = parseInt(weekNum);\n        var date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n        date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);\n        return date;\n    },\n    Y: function (dateObj, year) {\n        dateObj.setFullYear(parseFloat(year));\n    },\n    Z: function (_, ISODate) { return new Date(ISODate); },\n    d: function (dateObj, day) {\n        dateObj.setDate(parseFloat(day));\n    },\n    h: function (dateObj, hour) {\n        dateObj.setHours((dateObj.getHours() >= 12 ? 12 : 0) + parseFloat(hour));\n    },\n    i: function (dateObj, minutes) {\n        dateObj.setMinutes(parseFloat(minutes));\n    },\n    j: function (dateObj, day) {\n        dateObj.setDate(parseFloat(day));\n    },\n    l: doNothing,\n    m: function (dateObj, month) {\n        dateObj.setMonth(parseFloat(month) - 1);\n    },\n    n: function (dateObj, month) {\n        dateObj.setMonth(parseFloat(month) - 1);\n    },\n    s: function (dateObj, seconds) {\n        dateObj.setSeconds(parseFloat(seconds));\n    },\n    u: function (_, unixMillSeconds) {\n        return new Date(parseFloat(unixMillSeconds));\n    },\n    w: doNothing,\n    y: function (dateObj, year) {\n        dateObj.setFullYear(2000 + parseFloat(year));\n    },\n};\nvar tokenRegex = {\n    D: \"\",\n    F: \"\",\n    G: \"(\\\\d\\\\d|\\\\d)\",\n    H: \"(\\\\d\\\\d|\\\\d)\",\n    J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n    K: \"\",\n    M: \"\",\n    S: \"(\\\\d\\\\d|\\\\d)\",\n    U: \"(.+)\",\n    W: \"(\\\\d\\\\d|\\\\d)\",\n    Y: \"(\\\\d{4})\",\n    Z: \"(.+)\",\n    d: \"(\\\\d\\\\d|\\\\d)\",\n    h: \"(\\\\d\\\\d|\\\\d)\",\n    i: \"(\\\\d\\\\d|\\\\d)\",\n    j: \"(\\\\d\\\\d|\\\\d)\",\n    l: \"\",\n    m: \"(\\\\d\\\\d|\\\\d)\",\n    n: \"(\\\\d\\\\d|\\\\d)\",\n    s: \"(\\\\d\\\\d|\\\\d)\",\n    u: \"(.+)\",\n    w: \"(\\\\d\\\\d|\\\\d)\",\n    y: \"(\\\\d{2})\",\n};\nvar formats = {\n    Z: function (date) { return date.toISOString(); },\n    D: function (date, locale, options) {\n        return locale.weekdays.shorthand[formats.w(date, locale, options)];\n    },\n    F: function (date, locale, options) {\n        return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n    },\n    G: function (date, locale, options) {\n        return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.pad)(formats.h(date, locale, options));\n    },\n    H: function (date) { return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.pad)(date.getHours()); },\n    J: function (date, locale) {\n        return locale.ordinal !== undefined\n            ? date.getDate() + locale.ordinal(date.getDate())\n            : date.getDate();\n    },\n    K: function (date, locale) { return locale.amPM[(0,_utils__WEBPACK_IMPORTED_MODULE_0__.int)(date.getHours() > 11)]; },\n    M: function (date, locale) {\n        return monthToStr(date.getMonth(), true, locale);\n    },\n    S: function (date) { return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.pad)(date.getSeconds()); },\n    U: function (date) { return date.getTime() / 1000; },\n    W: function (date, _, options) {\n        return options.getWeek(date);\n    },\n    Y: function (date) { return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.pad)(date.getFullYear(), 4); },\n    d: function (date) { return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.pad)(date.getDate()); },\n    h: function (date) { return (date.getHours() % 12 ? date.getHours() % 12 : 12); },\n    i: function (date) { return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.pad)(date.getMinutes()); },\n    j: function (date) { return date.getDate(); },\n    l: function (date, locale) {\n        return locale.weekdays.longhand[date.getDay()];\n    },\n    m: function (date) { return (0,_utils__WEBPACK_IMPORTED_MODULE_0__.pad)(date.getMonth() + 1); },\n    n: function (date) { return date.getMonth() + 1; },\n    s: function (date) { return date.getSeconds(); },\n    u: function (date) { return date.getTime(); },\n    w: function (date) { return date.getDay(); },\n    y: function (date) { return String(date.getFullYear()).substring(2); },\n};\n\n\n//# sourceURL=webpack://schedule-bx24-app/./node_modules/flatpickr/dist/esm/utils/formatting.js?");

/***/ }),

/***/ "./node_modules/flatpickr/dist/esm/utils/index.js":
/*!********************************************************!*\
  !*** ./node_modules/flatpickr/dist/esm/utils/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   arrayify: () => (/* binding */ arrayify),\n/* harmony export */   debounce: () => (/* binding */ debounce),\n/* harmony export */   int: () => (/* binding */ int),\n/* harmony export */   pad: () => (/* binding */ pad)\n/* harmony export */ });\nvar pad = function (number, length) {\n    if (length === void 0) { length = 2; }\n    return (\"000\" + number).slice(length * -1);\n};\nvar int = function (bool) { return (bool === true ? 1 : 0); };\nfunction debounce(fn, wait) {\n    var t;\n    return function () {\n        var _this = this;\n        var args = arguments;\n        clearTimeout(t);\n        t = setTimeout(function () { return fn.apply(_this, args); }, wait);\n    };\n}\nvar arrayify = function (obj) {\n    return obj instanceof Array ? obj : [obj];\n};\n\n\n//# sourceURL=webpack://schedule-bx24-app/./node_modules/flatpickr/dist/esm/utils/index.js?");

/***/ }),

/***/ "./node_modules/flatpickr/dist/esm/utils/polyfills.js":
/*!************************************************************!*\
  !*** ./node_modules/flatpickr/dist/esm/utils/polyfills.js ***!
  \************************************************************/
/***/ (() => {

eval("\nif (typeof Object.assign !== \"function\") {\n    Object.assign = function (target) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        if (!target) {\n            throw TypeError(\"Cannot convert undefined or null to object\");\n        }\n        var _loop_1 = function (source) {\n            if (source) {\n                Object.keys(source).forEach(function (key) { return (target[key] = source[key]); });\n            }\n        };\n        for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {\n            var source = args_1[_a];\n            _loop_1(source);\n        }\n        return target;\n    };\n}\n\n\n//# sourceURL=webpack://schedule-bx24-app/./node_modules/flatpickr/dist/esm/utils/polyfills.js?");

/***/ }),

/***/ "./node_modules/flatpickr/dist/l10n/ru.js":
/*!************************************************!*\
  !*** ./node_modules/flatpickr/dist/l10n/ru.js ***!
  \************************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("(function (global, factory) {\n   true ? factory(exports) :\n  0;\n}(this, (function (exports) { 'use strict';\n\n  var fp = typeof window !== \"undefined\" && window.flatpickr !== undefined\n      ? window.flatpickr\n      : {\n          l10ns: {},\n      };\n  var Russian = {\n      weekdays: {\n          shorthand: [\"Вс\", \"Пн\", \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\"],\n          longhand: [\n              \"Воскресенье\",\n              \"Понедельник\",\n              \"Вторник\",\n              \"Среда\",\n              \"Четверг\",\n              \"Пятница\",\n              \"Суббота\",\n          ],\n      },\n      months: {\n          shorthand: [\n              \"Янв\",\n              \"Фев\",\n              \"Март\",\n              \"Апр\",\n              \"Май\",\n              \"Июнь\",\n              \"Июль\",\n              \"Авг\",\n              \"Сен\",\n              \"Окт\",\n              \"Ноя\",\n              \"Дек\",\n          ],\n          longhand: [\n              \"Январь\",\n              \"Февраль\",\n              \"Март\",\n              \"Апрель\",\n              \"Май\",\n              \"Июнь\",\n              \"Июль\",\n              \"Август\",\n              \"Сентябрь\",\n              \"Октябрь\",\n              \"Ноябрь\",\n              \"Декабрь\",\n          ],\n      },\n      firstDayOfWeek: 1,\n      ordinal: function () {\n          return \"\";\n      },\n      rangeSeparator: \" — \",\n      weekAbbreviation: \"Нед.\",\n      scrollTitle: \"Прокрутите для увеличения\",\n      toggleTitle: \"Нажмите для переключения\",\n      amPM: [\"ДП\", \"ПП\"],\n      yearAriaLabel: \"Год\",\n      time_24hr: true,\n  };\n  fp.l10ns.ru = Russian;\n  var ru = fp.l10ns;\n\n  exports.Russian = Russian;\n  exports.default = ru;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n//# sourceURL=webpack://schedule-bx24-app/./node_modules/flatpickr/dist/l10n/ru.js?");

/***/ }),

/***/ "./src/addStudentModal.js":
/*!********************************!*\
  !*** ./src/addStudentModal.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   openNewStudentModal: () => (/* binding */ openNewStudentModal),\n/* harmony export */   openStudentsModal: () => (/* binding */ openStudentsModal)\n/* harmony export */ });\n/* harmony import */ var _bx24api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bx24api.js */ \"./src/bx24api.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n/* harmony import */ var flatpickr_dist_l10n_ru_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! flatpickr/dist/l10n/ru.js */ \"./node_modules/flatpickr/dist/l10n/ru.js\");\n/* harmony import */ var flatpickr__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! flatpickr */ \"./node_modules/flatpickr/dist/esm/index.js\");\n/* harmony import */ var _app_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./app.js */ \"./src/app.js\");\n\n\n\n\n\n\n// Функция для сброса положения прокрутки модального окна\nfunction resetModalScroll() {\n  var modalContent = document.getElementById('add-student-modal-content');\n  if (modalContent) {\n    modalContent.scrollTop = 0; // Устанавливаем положение прокрутки в 0\n  } else {\n    console.warn('Элемент модального окна не найден');\n  }\n}\n\n// Функция для открытия модального окна\nfunction openNewStudentModal() {\n  _bx24api_js__WEBPACK_IMPORTED_MODULE_0__.isAdmin().then(function (isAdmin) {\n    if (isAdmin) {\n      var modal = document.getElementById('add-student-modal');\n      modal.style.display = 'block';\n      resetModalScroll(); // Сбрасываем положение прокрутки\n      var container = document.getElementById('permanent-lessons-container');\n      container.innerHTML = ''; // Очищаем контейнер с уроками\n    }\n  })[\"catch\"](function (error) {\n    console.error('Ошибка при проверке прав администратора:', error);\n  });\n}\n\n// Функция для открытия модального окна\nfunction openStudentsModal() {\n  _bx24api_js__WEBPACK_IMPORTED_MODULE_0__.isAdmin().then(function (isAdmin) {\n    if (isAdmin) {\n      // TODO: открыть модальное окно с таблицей учеников\n    }\n  })[\"catch\"](function (error) {\n    console.error('Ошибка при проверке прав администратора:', error);\n  });\n}\nfunction closeAddStudentModal() {\n  var modal = document.getElementById('add-student-modal');\n  var container = document.getElementById('permanent-lessons-container');\n  container.innerHTML = ''; // Очищаем контейнер с уроками\n  modal.style.display = 'none';\n\n  // Очищаем информацию о клиенте\n  var clientInfoDiv = document.getElementById('client-info');\n  clientInfoDiv.style.display = 'none'; // Скрываем элемент с информацией\n  clientInfoDiv.textContent = ''; // Очищаем текст\n\n  // Очищаем информацию о преподавателе\n  var teacherInfoDiv = document.getElementById('teacher-info');\n  teacherInfoDiv.style.display = 'none'; // Скрываем элемент с информацией\n  teacherInfoDiv.textContent = ''; // Очищаем текст\n\n  // Очищаем поле ввода для ID клиента\n  document.getElementById('client-id').value = ''; // Очищаем поле ввода\n\n  // Очищаем поле ввода для ID преподавателя\n  document.getElementById('teacher-id').value = ''; // Очищаем поле ввода\n\n  // Очищаем поле ввода для даты одноразового урока\n  document.getElementById('new-one-time-lesson-date').value = ''; // Очищаем поле ввода даты\n\n  // Скрываем информацию о одноразовом уроке\n  var oneTimeLessonInfoDiv = document.getElementById('one-time-lesson-info');\n  oneTimeLessonInfoDiv.style.display = 'none'; // Скрываем элемент с информацией\n}\n\n// Закрытие модального окна при нажатии на крестик\ndocument.querySelector('#add-student-modal .close').addEventListener('click', function () {\n  closeAddStudentModal();\n});\n\n// Закрытие модального окна при нажатии вне его\nwindow.addEventListener('click', function (event) {\n  var modal = document.getElementById('add-student-modal');\n  if (event.target === modal) {\n    closeAddStudentModal();\n  }\n});\ndocument.getElementById('add-permanent-lesson-button').addEventListener('click', function (event) {\n  event.preventDefault(); // Предотвращаем отправку формы\n\n  var container = document.getElementById('permanent-lessons-container');\n\n  // Создаем новый элемент для выбора дня и времени\n  var lessonRow = document.createElement('div');\n  lessonRow.className = 'lesson-row';\n\n  // Создаем селектор для выбора дня\n  var daySelect = document.createElement('select');\n  daySelect.className = 'day-select';\n  daySelect.innerHTML = \"\\n        <option value=\\\"\\\" selected disabled hidden>\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0434\\u0435\\u043D\\u044C</option>\\n        <option value=\\\"monday\\\">\\u041F\\u043E\\u043D\\u0435\\u0434\\u0435\\u043B\\u044C\\u043D\\u0438\\u043A</option>\\n        <option value=\\\"tuesday\\\">\\u0412\\u0442\\u043E\\u0440\\u043D\\u0438\\u043A</option>\\n        <option value=\\\"wednesday\\\">\\u0421\\u0440\\u0435\\u0434\\u0430</option>\\n        <option value=\\\"thursday\\\">\\u0427\\u0435\\u0442\\u0432\\u0435\\u0440\\u0433</option>\\n        <option value=\\\"friday\\\">\\u041F\\u044F\\u0442\\u043D\\u0438\\u0446\\u0430</option>\\n        <option value=\\\"saturday\\\">\\u0421\\u0443\\u0431\\u0431\\u043E\\u0442\\u0430</option>\\n        <option value=\\\"sunday\\\">\\u0412\\u043E\\u0441\\u043A\\u0440\\u0435\\u0441\\u0435\\u043D\\u044C\\u0435</option>\\n    \";\n\n  // Создаем селектор для выбора времени\n  var timeSelect = document.createElement('select');\n  timeSelect.className = 'time-select';\n  timeSelect.innerHTML = \"\\n        <option value=\\\"\\\" selected disabled hidden>\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0440\\u0435\\u043C\\u044F</option>\\n    \";\n\n  // Генерируем опции для времени от 00:00 до 23:00\n  for (var hour = 0; hour < 24; hour++) {\n    var formattedHour = hour.toString().padStart(2, '0') + ':00'; // Форматируем часы\n    var option = document.createElement('option');\n    option.value = formattedHour;\n    option.textContent = formattedHour;\n    timeSelect.appendChild(option);\n  }\n  var courseSelect = document.createElement('select');\n  courseSelect.id = 'new-one-time-lesson-subject';\n  courseSelect.name = 'course';\n  courseSelect.className = 'course-select';\n  courseSelect.required = true;\n  courseSelect.innerHTML = \"\\n        <option value=\\\"\\\" selected disabled hidden>\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043A\\u0443\\u0440\\u0441</option>\\n        <option value=\\\"figma\\\">Figma</option>\\n        <option value=\\\"computer-literacy\\\">\\u041A\\u043E\\u043C\\u043F\\u044C\\u044E\\u0442\\u0435\\u0440 \\u0441 \\u043D\\u0443\\u043B\\u044F</option>\\n        <option value=\\\"scratch\\\">Scratch</option>\\n        <option value=\\\"roblox\\\">Roblox Studio</option>\\n        <option value=\\\"blender\\\">\\u041C\\u043E\\u0434\\u0435\\u043B\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0432 Blender</option>\\n        <option value=\\\"web-development\\\">\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0441\\u0430\\u0439\\u0442\\u043E\\u0432</option>\\n        <option value=\\\"python\\\">\\u041F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043D\\u0430 Python</option>\\n        <option value=\\\"unity\\\">\\u0421\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435 \\u0438\\u0433\\u0440 \\u043D\\u0430 Unity</option>\\n        <option value=\\\"olympic-programming\\\">\\u041F\\u043E\\u0434\\u0433\\u043E\\u0442\\u043E\\u0432\\u043A\\u0430 \\u043A \\u043E\\u043B\\u0438\\u043C\\u043F\\u0438\\u0430\\u0434\\u0430\\u043C \\u043F\\u043E \\u043F\\u0440\\u043E\\u0433\\u0440\\u0430\\u043C\\u043C\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u044E</option>\\n        <option value=\\\"cpp\\\">\\u0418\\u0437\\u0443\\u0447\\u0435\\u043D\\u0438\\u0435 \\u044F\\u0437\\u044B\\u043A\\u0430 C++</option>\\n    \";\n\n  // Создаем кнопку удаления\n  var deleteButton = document.createElement('button');\n  deleteButton.className = 'delete-lesson-button';\n  deleteButton.type = 'button'; // Указываем, что это кнопка типа button\n  deleteButton.innerHTML = '🗑️'; // Эмодзи мусорного бака\n  deleteButton.title = 'Удалить урок';\n\n  // Добавляем обработчик события для кнопки удаления\n  deleteButton.addEventListener('click', function () {\n    lessonRow.classList.add('fade-out'); // Добавляем класс для анимации исчезновения\n    setTimeout(function () {\n      container.removeChild(lessonRow); // Удаляем строку с уроком после анимации\n    }, 300); // Время, соответствующее длительности анимации\n  });\n\n  // Добавляем селекторы, группу курса и кнопку в строку\n  lessonRow.appendChild(daySelect);\n  lessonRow.appendChild(timeSelect);\n  lessonRow.appendChild(courseSelect);\n  lessonRow.appendChild(deleteButton);\n\n  // Добавляем строку в контейнер\n  container.appendChild(lessonRow);\n});\n\n// Обработчик события для кнопки \"Найти клиента\"\ndocument.getElementById('find-client-button').addEventListener('click', function (event) {\n  event.stopPropagation(); // Предотвращаем всплытие события, чтобы не закрывать модальное окно\n\n  var clientId = document.getElementById('client-id').value.trim(); // Получаем ID клиента и убираем пробелы\n\n  // Проверяем, что поле не пустое\n  if (!clientId) {\n    _utils_js__WEBPACK_IMPORTED_MODULE_1__.showNotification(\"Пожалуйста, введите ID клиента.\", 'error'); // Показываем уведомление\n    return; // Выходим из функции, если поле пустое\n  }\n  _bx24api_js__WEBPACK_IMPORTED_MODULE_0__.getClientByID(clientId).then(function (client) {\n    var clientInfoDiv = document.getElementById('client-info');\n    if (client) {\n      clientInfoDiv.style.display = 'block'; // Показываем элемент с информацией\n      clientInfoDiv.innerHTML = \"\\n                <div>\\u0418\\u043C\\u044F: <span id=\\\"client-name\\\">\".concat(client.NAME, \"</span></div>\\n                <div>\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F: <span  id=\\\"client-second-name\\\">\").concat(client.SECOND_NAME, \"</span></div>\\n                <div>\\u041F\\u0440\\u0435\\u0434\\u043C\\u0435\\u0442: <span id=\\\"client-subject\\\">\").concat(client.UF_CRM_1739691796545, \"</span></div>\\n            \");\n    } else {\n      clientInfoDiv.style.display = 'none';\n    }\n  })[\"catch\"](function (error) {\n    // Обработка ошибки, если клиент не найден\n    console.error(\"Ошибка получения данных о клиенте:\", error);\n    _utils_js__WEBPACK_IMPORTED_MODULE_1__.showNotification(\"\\u041A\\u043B\\u0438\\u0435\\u043D\\u0442 \\u0441 ID \".concat(clientId, \" \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D.\"), 'error'); // Показываем уведомление\n  });\n});\n\n// Обработчик события для кнопки \"Найти преподавателя\"\ndocument.getElementById('find-teacher-button').addEventListener('click', function (event) {\n  event.stopPropagation(); // Предотвращаем всплытие события, чтобы не закрывать модальное окно\n\n  var teacherId = document.getElementById('teacher-id').value.trim(); // Получаем ID преподавателя и убираем пробелы\n\n  // Проверяем, что поле не пустое\n  if (!teacherId) {\n    _utils_js__WEBPACK_IMPORTED_MODULE_1__.showNotification(\"Пожалуйста, введите ID преподавателя.\", 'error'); // Показываем уведомление\n    return; // Выходим из функции, если поле пустое\n  }\n  _bx24api_js__WEBPACK_IMPORTED_MODULE_0__.getTeacherByID(teacherId).then(function (teachers) {\n    var teacherInfoDiv = document.getElementById('teacher-info');\n    if (teachers) {\n      var teacher = teachers[0];\n      teacherInfoDiv.style.display = 'block'; // Показываем элемент с информацией\n      teacherInfoDiv.textContent = \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u043F\\u0440\\u0435\\u043F\\u043E\\u0434\\u0430\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435 \\u0441 ID \".concat(teacherId, \": \").concat(teacher.NAME, \", \").concat(teacher.LAST_NAME);\n    } else {\n      teacherInfoDiv.style.display = 'none';\n    }\n  })[\"catch\"](function (error) {\n    // Обработка ошибки, если преподаватель не найден\n    console.error(\"Ошибка получения данных о преподавателе:\", error);\n    _utils_js__WEBPACK_IMPORTED_MODULE_1__.showNotification(\"\\u041A\\u043B\\u0438\\u0435\\u043D\\u0442 \\u0441 ID \".concat(teacherId, \" \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D.\"), 'error'); // Показываем уведомление\n  });\n});\ndocument.addEventListener('DOMContentLoaded', function () {\n  // Обработчик события для кнопки удаления одноразового урока\n  document.getElementById('delete-one-time-lesson-button').addEventListener('click', function (event) {\n    event.preventDefault(); // Предотвращаем отправку формы\n\n    // Скрываем информацию о одноразовом уроке\n    var oneTimeLessonInfoDiv = document.getElementById('one-time-lesson-info');\n    oneTimeLessonInfoDiv.style.display = 'none'; // Скрываем элемент с информацией\n\n    // Очищаем только текст внутри span\n    var oneTimeLessonDateSpan = document.getElementById('one-time-lesson-date');\n    if (oneTimeLessonDateSpan) {\n      oneTimeLessonDateSpan.textContent = ''; // Очищаем текст в span\n    }\n\n    // Очищаем поле ввода даты\n    document.getElementById('new-one-time-lesson-date').value = ''; // Очищаем поле ввода даты\n  });\n\n  // Обработчик события для кнопки \"Добавить одноразовый урок\"\n  document.getElementById('add-one-time-lesson-button').addEventListener('click', function (event) {\n    event.preventDefault(); // Предотвращаем отправку формы\n\n    var lessonDate = document.getElementById('new-one-time-lesson-date').value.trim(); // Получаем дату урока и убираем пробелы\n    var lessonTime = document.getElementById('new-one-time-lesson-time').value.trim(); // Получаем дату урока и убираем пробелы\n    var lessonSelect = document.getElementById('new-one-time-lesson-subject');\n    var lessonSubject = lessonSelect.options[lessonSelect.selectedIndex].text; // Получаем дату урока и убираем пробелы\n    var oneTimeLessonInfoDiv = document.getElementById('one-time-lesson-info');\n    var oneTimeLessonDateSpan = document.getElementById('one-time-lesson-date');\n\n    // Проверяем, что дата введена\n    if (!lessonDate || !lessonTime || !lessonSubject) {\n      _utils_js__WEBPACK_IMPORTED_MODULE_1__.showNotification(\"Пожалуйста, выберите дату, время и предмет урока.\", 'error'); // Показываем уведомление\n      return; // Выходим из функции, если дата не выбрана\n    }\n\n    // Здесь вы можете добавить логику для обработки одноразового урока\n    oneTimeLessonInfoDiv.style.display = 'block'; // Показываем элемент с информацией\n    if (oneTimeLessonDateSpan) {\n      oneTimeLessonDateSpan.textContent = lessonDate + ', ' + lessonTime + ' (' + lessonSubject + ')'; // Устанавливаем дату в элемент\n    } else {\n      console.error(\"Элемент one-time-lesson-date не найден.\");\n    }\n  });\n\n  // Инициализация flatpickr для поля ввода даты\n  (0,flatpickr__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\"#new-one-time-lesson-date\", {\n    locale: flatpickr_dist_l10n_ru_js__WEBPACK_IMPORTED_MODULE_2__.Russian,\n    // Устанавливаем локализацию на русский\n    dateFormat: \"Y-m-d\" // Формат даты\n  });\n  (0,flatpickr__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(\"#new-one-time-lesson-time\", {\n    enableTime: true,\n    // Включаем выбор времени\n    noCalendar: true,\n    // Убираем календарь (только время)\n    dateFormat: \"H:00\",\n    // Отображаем только часы (минуты фиксируем как \":00\")\n    time_24hr: true,\n    // 24-часовой формат\n    minuteIncrement: 60,\n    // Устанавливаем шаг 60 минут (чтобы нельзя было менять минуты)\n    locale: flatpickr_dist_l10n_ru_js__WEBPACK_IMPORTED_MODULE_2__.Russian // Русский язык\n  });\n});\n\n// Обработчик события для кнопки \"Добавить ученика\"\ndocument.getElementById('submit-student').addEventListener('click', function (event) {\n  event.preventDefault(); // Предотвращаем отправку формы\n\n  // Собираем данные из формы\n  var clientId = document.getElementById('client-id').value.trim();\n  var clientNameElement = document.getElementById('client-name');\n  if (!clientNameElement) {\n    _utils_js__WEBPACK_IMPORTED_MODULE_1__.showNotification('Необходимо выбрать клиента.', 'error');\n    return;\n  }\n  var clientName = clientNameElement.textContent;\n  var oneTimeSubject = document.getElementById('new-one-time-lesson-subject').value;\n  var teacherId = document.getElementById('teacher-id').value.trim();\n  var oneTimeLessonDate = document.getElementById('new-one-time-lesson-date').value.trim();\n  var oneTimeLessonTime = document.getElementById('new-one-time-lesson-time').value.trim();\n  var lessonRows = document.querySelectorAll('.lesson-row'); // Получаем все строки с уроками\n\n  if (!clientId || !clientName || !teacherId) {\n    _utils_js__WEBPACK_IMPORTED_MODULE_1__.showNotification('Пожалуйста, заполните поля \"Client ID\", \"Client Name\", \"Teacher ID.', 'error');\n    return; // Выходим из функции, если обязательные поля пустые\n  }\n  var oneTimeLessonsFilled = oneTimeLessonDate && oneTimeLessonTime && oneTimeSubject;\n  var regularScheduleFilled = Array.from(lessonRows).some(function (row) {\n    var daySelect = row.querySelector('.day-select').value;\n    var timeSelect = row.querySelector('.time-select').value;\n    var courseSelect = row.querySelector('.course-select').value; // Убедитесь, что это правильный селектор\n    return daySelect && timeSelect && courseSelect; // Проверяем, что все поля заполнены\n  });\n  if (!oneTimeLessonsFilled && !regularScheduleFilled) {\n    _utils_js__WEBPACK_IMPORTED_MODULE_1__.showNotification('Для составления расписания должен быть заполнен хотя бы урок одного вида (одноразовый или постоянный).');\n    return;\n  }\n  var oneTimeLessons = [{\n    date: oneTimeLessonDate,\n    // Дата разового урока\n    time: oneTimeLessonTime,\n    // Временное значение, позже можно будет изменить\n    subject: oneTimeSubject\n  }];\n  var regularSchedule = [];\n  lessonRows.forEach(function (row) {\n    var daySelect = row.querySelector('.day-select');\n    var timeSelect = row.querySelector('.time-select');\n    var courseSelect = row.querySelector('.course-select').value;\n\n    // Проверяем, что выбраны день и время\n    if (daySelect.value && timeSelect.value) {\n      regularSchedule.push({\n        day: daySelect.value,\n        time: timeSelect.value,\n        subject: courseSelect\n      });\n    }\n  });\n  console.log(regularSchedule);\n\n  // Формируем объект с данными\n  var studentData = {\n    id: clientId,\n    name: clientName,\n    oneTimeLessons: oneTimeLessons,\n    regularSchedule: regularSchedule\n  };\n\n  // Выводим данные в консоль для проверки\n  console.log(\"Данные ученика:\", studentData);\n  _utils_js__WEBPACK_IMPORTED_MODULE_1__.showConfirmationModal({\n    text: \"Вы уверены в добавлении нового расписания?\",\n    onConfirm: function onConfirm() {\n      _app_js__WEBPACK_IMPORTED_MODULE_4__.calendar.addNewStudent(teacherId, studentData);\n      closeAddStudentModal();\n    },\n    onCancel: function onCancel() {}\n  });\n});\n\n//# sourceURL=webpack://schedule-bx24-app/./src/addStudentModal.js?");

/***/ }),

/***/ "./src/app.js":
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calendar: () => (/* binding */ calendar),\n/* harmony export */   initApp: () => (/* binding */ initApp)\n/* harmony export */ });\n/* harmony import */ var _bx24api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bx24api.js */ \"./src/bx24api.js\");\n/* harmony import */ var _calendar_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./calendar.js */ \"./src/calendar.js\");\n/* harmony import */ var _settings_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settings.js */ \"./src/settings.js\");\n/* harmony import */ var _modal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modal.js */ \"./src/modal.js\");\n/* harmony import */ var _addStudentModal_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./addStudentModal.js */ \"./src/addStudentModal.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n\n\n\n\n\n\nvar calendar = new _calendar_js__WEBPACK_IMPORTED_MODULE_1__.Calendar();\nvar modalManager = new _modal_js__WEBPACK_IMPORTED_MODULE_3__.LessonModal();\nvar settingsManager = new _settings_js__WEBPACK_IMPORTED_MODULE_2__.SettingsManager(calendar);\nfunction initApp() {\n  _bx24api_js__WEBPACK_IMPORTED_MODULE_0__.initBx24();\n  setIsAdmin();\n  _bx24api_js__WEBPACK_IMPORTED_MODULE_0__.setUserName();\n  calendar.loadScheduleData();\n\n  // Обработчики событий для кнопок навигации\n  document.getElementById('prev-week').addEventListener('click', function () {\n    if (settingsManager.isSelectingOpenWindows) {\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.showNotification)(\"Недоступно в режиме выбора открытых окон\", \"error\");\n    } else {\n      calendar.prevWeek();\n    }\n  });\n  document.getElementById('next-week').addEventListener('click', function () {\n    if (settingsManager.isSelectingOpenWindows) {\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.showNotification)(\"Недоступно в режиме выбора открытых окон\", \"error\");\n    } else {\n      calendar.nextWeek();\n    }\n  });\n  document.getElementById('current-week').addEventListener('click', function () {\n    if (settingsManager.isSelectingOpenWindows) {\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.showNotification)(\"Недоступно в режиме выбора открытых окон\", \"error\");\n    } else {\n      calendar.goToCurrentWeek();\n    }\n  });\n\n  // Обработчик для кнопки настроек\n  document.getElementById('settings-button').addEventListener('click', function () {\n    if (settingsManager.isSelectingOpenWindows) {\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.showNotification)(\"Недоступно в режиме выбора открытых окон\", \"error\");\n    } else {\n      settingsManager.open();\n    }\n  });\n  document.getElementById('add-student-button').addEventListener('click', function () {\n    (0,_addStudentModal_js__WEBPACK_IMPORTED_MODULE_4__.openStudentsModal)();\n  });\n  document.getElementById('add-student-button').addEventListener('click', function () {\n    (0,_addStudentModal_js__WEBPACK_IMPORTED_MODULE_4__.openNewStudentModal)();\n  });\n}\n\n// Глобальная функция для открытия модального окна урока\nwindow.openLessonModal = function (lessonData) {\n  if (settingsManager.isSelectingOpenWindows) {\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_5__.showNotification)(\"Недоступно в режиме выбора открытых окон\", \"error\");\n  } else {\n    modalManager.open(lessonData);\n  }\n};\nfunction setIsAdmin() {\n  _bx24api_js__WEBPACK_IMPORTED_MODULE_0__.isAdmin().then(function (isAdmin) {\n    if (isAdmin) {\n      // Показываем подпись \"администратор\"\n      var adminLabel = document.getElementById('admin-label');\n      if (adminLabel) {\n        adminLabel.style.display = 'inline'; // Показываем элемент\n      }\n\n      // Показываем кнопку админа\n      document.getElementById('students-button').style.display = 'inline-block';\n      document.getElementById('add-student-button').style.display = 'inline-block';\n      document.getElementById('students-button').disabled = false;\n      document.getElementById('add-student-button').disabled = false;\n    }\n  })[\"catch\"](function (error) {\n    console.error('Ошибка при проверке прав администратора:', error);\n  });\n}\n\n//# sourceURL=webpack://schedule-bx24-app/./src/app.js?");

/***/ }),

/***/ "./src/bx24api.js":
/*!************************!*\
  !*** ./src/bx24api.js ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getClientByID: () => (/* binding */ getClientByID),\n/* harmony export */   getCurrentUser: () => (/* binding */ getCurrentUser),\n/* harmony export */   getMyId: () => (/* binding */ getMyId),\n/* harmony export */   getSchedule: () => (/* binding */ getSchedule),\n/* harmony export */   getTeacherByID: () => (/* binding */ getTeacherByID),\n/* harmony export */   initBx24: () => (/* binding */ initBx24),\n/* harmony export */   isAdmin: () => (/* binding */ isAdmin),\n/* harmony export */   setUserName: () => (/* binding */ setUserName),\n/* harmony export */   updateSchedule: () => (/* binding */ updateSchedule)\n/* harmony export */ });\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nvar USER_CUSTOM_FIELD_ID = 'UF_USR_1739378861094';\nvar DEFAULT_SCHEDULE_DATA = {\n  \"settings\": {\n    \"workingHours\": {\n      \"start\": 10,\n      \"end\": 20\n    }\n  },\n  \"weeklyOpenSlots\": {\n    \"monday\": [],\n    \"tuesday\": [],\n    \"wednesday\": [],\n    \"thursday\": [],\n    \"friday\": [],\n    \"saturday\": [],\n    \"sunday\": []\n  },\n  \"students\": []\n};\nvar currentUserId = null;\nfunction initBx24() {\n  BX24.init(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var authData;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          BX24.fitWindow();\n          // Получаем данные авторизации\n          authData = BX24.getAuth();\n          _context.next = 4;\n          return getMyId();\n        case 4:\n          currentUserId = _context.sent;\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  })));\n}\nfunction getMyId() {\n  return _getMyId.apply(this, arguments);\n}\nfunction _getMyId() {\n  _getMyId = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    var user;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return getCurrentUser();\n        case 2:\n          user = _context3.sent;\n          return _context3.abrupt(\"return\", user.ID);\n        case 4:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _getMyId.apply(this, arguments);\n}\nfunction isAdmin() {\n  return new Promise(function (resolve, reject) {\n    BX24.callMethod(\"user.admin\", {}, function (result) {\n      if (result.error()) reject(result.error());else resolve(result.data());\n    });\n  });\n}\nfunction setUserName() {\n  getCurrentUser().then(function (user) {\n    var teacherNameElement = document.querySelector('.teacher-name');\n    teacherNameElement.textContent = \"\".concat(user.NAME, \" \").concat(user.LAST_NAME);\n  });\n}\nfunction getCurrentUser() {\n  return new Promise(function (resolve, reject) {\n    BX24.callMethod(\"user.current\", {}, function (result) {\n      if (result.error()) {\n        reject(result.error());\n      } else {\n        resolve(result.data());\n      }\n    });\n  });\n}\nfunction getSchedule() {\n  var teacherId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return new Promise(function (resolve, reject) {\n    var params = teacherId ? {\n      ID: teacherId\n    } : {}; // Если передан ID, добавляем его в запрос\n\n    BX24.callMethod(\"user.get\", params, /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(result) {\n        var user, scheduleData;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!result.error()) {\n                _context2.next = 4;\n                break;\n              }\n              console.error(\"Ошибка получения данных:\", result.error());\n              reject(result.error());\n              return _context2.abrupt(\"return\");\n            case 4:\n              user = result.data()[0]; // Берем первого пользователя\n              console.log(user); // Выведем в консоль для отладки\n\n              // Проверяем, существует ли кастомное поле\n              if (!(!user || !user[USER_CUSTOM_FIELD_ID])) {\n                _context2.next = 13;\n                break;\n              }\n              console.warn(\"\\u041A\\u0430\\u0441\\u0442\\u043E\\u043C\\u043D\\u043E\\u0435 \\u043F\\u043E\\u043B\\u0435 \".concat(USER_CUSTOM_FIELD_ID, \" \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E \\u0438\\u043B\\u0438 \\u043E\\u043D\\u043E \\u043F\\u0443\\u0441\\u0442\\u043E\\u0435.\"));\n              console.info(\"\\u0418\\u043D\\u0438\\u0446\\u0438\\u0430\\u043B\\u0438\\u0437\\u0438\\u0440\\u0443\\u0435\\u043C \\u043F\\u0443\\u0441\\u0442\\u043E\\u0435 \\u0440\\u0430\\u0441\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u0434\\u043B\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \".concat((user === null || user === void 0 ? void 0 : user.ID) || \"неизвестного\"));\n              _context2.next = 11;\n              return initNewSchedule(user);\n            case 11:\n              resolve(DEFAULT_SCHEDULE_DATA);\n              return _context2.abrupt(\"return\");\n            case 13:\n              // Если данные уже существуют, просто возвращаем их\n              scheduleData = user[USER_CUSTOM_FIELD_ID]; // Проверяем, что данные имеют нужную структуру\n              if (typeof scheduleData === 'string') {\n                try {\n                  scheduleData = JSON.parse(scheduleData); // Пробуем парсить строку в объект\n                } catch (error) {\n                  console.error(\"Ошибка парсинга данных:\", error);\n                  scheduleData = {}; // Возвращаем пустой объект в случае ошибки\n                }\n              }\n              if (_typeof(scheduleData) !== 'object') {\n                console.error(\"Полученные данные не являются объектом:\", scheduleData);\n                scheduleData = {}; // Возвращаем пустой объект в случае ошибки\n              }\n              resolve(scheduleData); // Возвращаем обработанные данные\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  });\n}\nfunction updateSchedule(scheduleData) {\n  var teacherId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  return new Promise(function (resolve, reject) {\n    var userId = teacherId || currentUserId; // Используем переданный ID или текущего пользователя\n\n    if (!userId) {\n      console.error(\"ID пользователя не найден.\");\n      reject(\"ID пользователя не найден.\");\n      return;\n    }\n\n    // Обновляем расписание\n    BX24.callMethod(\"user.update\", _defineProperty({\n      ID: userId\n    }, USER_CUSTOM_FIELD_ID, JSON.stringify(scheduleData)), function (updateResult) {\n      if (updateResult.error()) {\n        console.error(\"Ошибка обновления данных:\", updateResult.error());\n        reject(updateResult.error());\n      } else {\n        console.log(\"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u043E\\u0431\\u043D\\u043E\\u0432\\u043B\\u0435\\u043D\\u044B \\u0434\\u043B\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \".concat(userId, \":\"), scheduleData);\n        resolve(updateResult);\n      }\n    });\n  });\n}\nfunction getClientByID(clientId) {\n  return new Promise(function (resolve, reject) {\n    BX24.callMethod(\"crm.contact.get\", {\n      id: clientId\n    }, function (result) {\n      if (result.error()) {\n        console.error(\"Ошибка получения данных:\", result.error());\n        reject(result.error());\n      } else {\n        var client = result.data();\n        console.log(client); // Выведем в консоль для отладки\n        resolve(client);\n      }\n    });\n  });\n}\nfunction getTeacherByID(teacherId) {\n  return new Promise(function (resolve, reject) {\n    BX24.callMethod(\"user.get\",\n    // Название метода\n    {\n      ID: teacherId\n    },\n    // ID сотрудника\n    function (result) {\n      if (result.error()) {\n        console.error(\"Ошибка:\", result.error());\n        reject(result.error());\n      } else {\n        console.log(\"Данные сотрудника:\", result.data());\n        resolve(result.data());\n      }\n    });\n  });\n}\nfunction initNewSchedule(user) {\n  BX24.callMethod(\"user.update\", _defineProperty({\n    ID: user.ID\n  }, USER_CUSTOM_FIELD_ID, JSON.stringify(DEFAULT_SCHEDULE_DATA)), function (updateResult) {\n    if (updateResult.error()) {\n      console.error(\"Ошибка обновления данных:\", updateResult.error());\n    } else {\n      console.log(\"Данные успешно инициализированы:\", DEFAULT_SCHEDULE_DATA); // Выводим инициализированные данные\n    }\n  });\n}\n\n//# sourceURL=webpack://schedule-bx24-app/./src/bx24api.js?");

/***/ }),

/***/ "./src/calendar.js":
/*!*************************!*\
  !*** ./src/calendar.js ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Calendar: () => (/* binding */ Calendar)\n/* harmony export */ });\n/* harmony import */ var _bx24api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bx24api.js */ \"./src/bx24api.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\n/* harmony import */ var _app_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.js */ \"./src/app.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\n\n\n\n\nvar Calendar = /*#__PURE__*/function () {\n  function Calendar() {\n    _classCallCheck(this, Calendar);\n    this.currentWeekOffset = 0;\n    this.scheduleData = null;\n    this.displayedLessons = new Set();\n    this.startHour = 6;\n    this.endHour = 18;\n  }\n  return _createClass(Calendar, [{\n    key: \"getWeekDates\",\n    value: function getWeekDates() {\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var today = new Date();\n      var currentDay = today.getDay();\n      var diff = currentDay === 0 ? 6 : currentDay - 1;\n      var monday = new Date(today);\n      monday.setDate(today.getDate() - diff + offset * 7);\n      var dates = [];\n      for (var i = 0; i < 7; i++) {\n        var date = new Date(monday);\n        date.setDate(monday.getDate() + i);\n        dates.push(date); // Возвращаем объект Date, а не число\n      }\n      return dates;\n    }\n  }, {\n    key: \"formatDate\",\n    value: function formatDate(date) {\n      var months = ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'];\n      return \"\".concat(date.getDate(), \" \").concat(months[date.getMonth()]);\n    }\n  }, {\n    key: \"updateHeaderDates\",\n    value: function updateHeaderDates() {\n      var _this = this;\n      var dates = this.getWeekDates(this.currentWeekOffset);\n      var dateElements = document.querySelectorAll('.date');\n      var dayHeaders = document.querySelectorAll('.day-header');\n      var today = new Date();\n      var currentDate = today.getDate();\n      var currentMonth = today.getMonth();\n      var currentYear = today.getFullYear();\n      dateElements.forEach(function (element, index) {\n        var displayedDate = new Date(today);\n        displayedDate.setDate(today.getDate() - (today.getDay() === 0 ? 6 : today.getDay() - 1) + index + _this.currentWeekOffset * 7);\n\n        // Используем formatDate для корректного отображения даты\n        element.textContent = _this.formatDate(displayedDate);\n        if (displayedDate.getDate() === currentDate && displayedDate.getMonth() === currentMonth && displayedDate.getFullYear() === currentYear) {\n          dayHeaders[index].classList.add('current-day');\n        } else {\n          dayHeaders[index].classList.remove('current-day');\n        }\n      });\n    }\n  }, {\n    key: \"updateWeekInfo\",\n    value: function updateWeekInfo() {\n      var today = new Date();\n      var currentDay = today.getDay();\n      var diff = currentDay === 0 ? 6 : currentDay - 1;\n      var monday = new Date(today);\n      monday.setDate(today.getDate() - diff + this.currentWeekOffset * 7);\n      var sunday = new Date(monday);\n      sunday.setDate(monday.getDate() + 6);\n      var weekRangeElement = document.getElementById('week-range');\n      weekRangeElement.textContent = \"\".concat(this.formatDate(monday), \" - \").concat(this.formatDate(sunday));\n    }\n  }, {\n    key: \"clearSchedule\",\n    value: function clearSchedule() {\n      document.querySelectorAll('.week-day .hour').forEach(function (hour) {\n        if (!hour.querySelector('.lesson')) {\n          hour.className = 'hour';\n          hour.innerHTML = '';\n        }\n      });\n    }\n  }, {\n    key: \"createLessonHTML\",\n    value: function createLessonHTML(lesson) {\n      var emoji = lesson.status === 'permanent' ? '🔄' : '1️⃣';\n      var statusText = lesson.status === 'permanent' ? 'Постоянный урок' : 'Разовый урок';\n\n      // Добавляем смайлики для ученика и предмета\n      var studentEmoji = '👩‍🎓'; // Смайлик студента\n      var subjectEmoji = '📚'; // Смайлик предмета\n\n      // Генерируем уникальный ID для урока\n      var lessonId = \"\".concat(lesson.student, \"-\").concat(lesson.time, \"-\").concat(lesson.date || lesson.day);\n      return \"\\n            <div class=\\\"lesson \".concat(lesson.status, \"\\\" \\n                 data-lesson-id=\\\"\").concat(lessonId, \"\\\" \\n                 onclick=\\\"window.openLessonModal(\").concat(JSON.stringify(lesson).replace(/\"/g, '&quot;'), \")\\\">\\n                <h4 data-emoji=\\\"\").concat(emoji, \"\\\">\").concat(statusText, \"</h4>\\n                <p>\").concat(studentEmoji, \" <span id=\\\"student-name\\\">\").concat(lesson.student, \"</span></p>\\n                <p>\").concat(subjectEmoji, \" <span id=\\\"subject-name\\\">\").concat(lesson.subject, \"</span></p>\\n            </div>\\n        \");\n    }\n  }, {\n    key: \"generateTimeSlots\",\n    value: function generateTimeSlots() {\n      var timeColumn = document.querySelector('.time-column');\n      var weekDays = document.querySelectorAll('.week-day');\n\n      // Очищаем существующие слоты\n      timeColumn.innerHTML = '';\n      weekDays.forEach(function (day) {\n        return day.innerHTML = '';\n      });\n\n      // Массив с названиями дней недели\n      var daysOfWeek = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n\n      // Создаем новые слоты времени\n      var _loop = function _loop() {\n        // Форматируем час в \"HH:00\"\n        var formattedHour = \"\".concat(String(hour).padStart(2, '0'), \":00\");\n\n        // Добавляем время в колонку времени\n        var timeSlot = document.createElement('div');\n        timeSlot.className = 'time';\n        timeSlot.innerHTML = \"<p>\".concat(formattedHour, \"</p>\");\n        timeColumn.appendChild(timeSlot);\n\n        // Добавляем пустые ячейки для каждого дня\n        weekDays.forEach(function (day, dayIndex) {\n          var hourSlot = document.createElement('div');\n          hourSlot.className = 'hour';\n\n          // Добавляем атрибуты data-day и data-hour\n          hourSlot.setAttribute('data-day', daysOfWeek[dayIndex]); // Используем название дня\n          hourSlot.setAttribute('data-hour', formattedHour); // Используем отформатированный час\n\n          day.appendChild(hourSlot);\n        });\n      };\n      for (var hour = this.startHour; hour <= this.endHour; hour++) {\n        _loop();\n      }\n    }\n  }, {\n    key: \"displayOpenSlots\",\n    value: function displayOpenSlots(days) {\n      var _this2 = this;\n      days.forEach(function (day, dayIndex) {\n        var dayElement = document.getElementById(day);\n        if (!dayElement) {\n          console.error(\"Элемент дня не найден:\", day);\n          return;\n        }\n        var slots = _this2.scheduleData.weeklyOpenSlots[day] || [];\n        slots.forEach(function (time) {\n          var hour = parseInt(time.split(':')[0]);\n          if (hour >= _this2.startHour && hour <= _this2.endHour) {\n            var hourIndex = hour - _this2.startHour;\n            var hourElement = dayElement.children[hourIndex];\n            if (hourElement) {\n              hourElement.classList.add('open-window');\n            }\n          }\n        });\n      });\n    }\n  }, {\n    key: \"displayRegularLessons\",\n    value: function displayRegularLessons(days, dates) {\n      var _this3 = this;\n      if (!this.scheduleData || !this.scheduleData.students) {\n        console.warn('Нет данных о студентах в scheduleData');\n        return;\n      }\n\n      // Перебираем студентов\n      this.scheduleData.students.forEach(function (student) {\n        var id = student.id,\n          name = student.name,\n          regularSchedule = student.regularSchedule;\n\n        // Проверяем, есть ли регулярное расписание\n        if (regularSchedule && Array.isArray(regularSchedule)) {\n          regularSchedule.forEach(function (lesson) {\n            var day = lesson.day,\n              time = lesson.time,\n              subject = lesson.subject;\n            var hour = parseInt(time.split(':')[0]);\n\n            // Проверяем, что час находится в рабочем диапазоне\n            if (hour >= _this3.startHour && hour <= _this3.endHour) {\n              var dayElement = document.getElementById(day);\n              if (dayElement) {\n                var hourIndex = hour - _this3.startHour;\n                var hourElement = dayElement.children[hourIndex];\n                if (hourElement) {\n                  // Проверяем, что day существует в days\n                  var dayIndex = days.indexOf(day);\n                  if (dayIndex === -1) {\n                    console.warn(\"\\u0414\\u0435\\u043D\\u044C \\\"\".concat(day, \"\\\" \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D \\u0432 \\u043C\\u0430\\u0441\\u0441\\u0438\\u0432\\u0435 days\"));\n                    return;\n                  }\n\n                  // Проверяем, что dates[dayIndex] является объектом Date\n                  var date = dates[dayIndex];\n                  if (!(date instanceof Date)) {\n                    console.warn(\"dates[\".concat(dayIndex, \"] \\u043D\\u0435 \\u044F\\u0432\\u043B\\u044F\\u0435\\u0442\\u0441\\u044F \\u043E\\u0431\\u044A\\u0435\\u043A\\u0442\\u043E\\u043C Date\"));\n                    return;\n                  }\n\n                  // Форматируем дату\n                  var formattedDate = date.toISOString().split('T')[0];\n\n                  // Убираем проверку на доступность слота\n                  // Обновляем содержимое элемента\n                  hourElement.innerHTML = _this3.createLessonHTML({\n                    id: name,\n                    date: formattedDate,\n                    time: time,\n                    student: name,\n                    subject: subject,\n                    status: 'permanent'\n                  });\n                }\n              }\n            }\n          });\n        } else {\n          console.warn(\"\\u041D\\u0435\\u0442 \\u0440\\u0435\\u0433\\u0443\\u043B\\u044F\\u0440\\u043D\\u043E\\u0433\\u043E \\u0440\\u0430\\u0441\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u044F \\u0434\\u043B\\u044F \\u0441\\u0442\\u0443\\u0434\\u0435\\u043D\\u0442\\u0430: \".concat(name));\n        }\n      });\n    }\n  }, {\n    key: \"displayOneTimeLessons\",\n    value: function displayOneTimeLessons() {\n      var _this4 = this;\n      if (!this.scheduleData || !this.scheduleData.students) {\n        console.warn('Нет данных о студентах в scheduleData');\n        return;\n      }\n\n      // Массив с английскими названиями дней недели\n      var daysOfWeek = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\n\n      // Получаем диапазон текущей недели\n      var _this$getWeekRange = this.getWeekRange(this.currentWeekOffset),\n        weekStart = _this$getWeekRange.start,\n        weekEnd = _this$getWeekRange.end;\n\n      // Перебираем студентов\n      this.scheduleData.students.forEach(function (student) {\n        var id = student.id,\n          name = student.name,\n          oneTimeLessons = student.oneTimeLessons;\n\n        // Проверяем, есть ли разовые уроки\n        if (oneTimeLessons && Array.isArray(oneTimeLessons)) {\n          oneTimeLessons.forEach(function (lesson) {\n            var date = lesson.date,\n              time = lesson.time,\n              subject = lesson.subject;\n\n            // Проверяем, что date существует и является строкой\n            if (!date || typeof date !== 'string') {\n              console.warn(\"\\u041D\\u0435\\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u043D\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430 \\u0434\\u043B\\u044F \\u0441\\u0442\\u0443\\u0434\\u0435\\u043D\\u0442\\u0430 \".concat(name, \": \").concat(date));\n              return;\n            }\n\n            // Преобразуем строку в объект Date\n            var lessonDate = new Date(date);\n\n            // Проверяем, что lessonDate является корректной датой\n            if (isNaN(lessonDate.getTime())) {\n              console.warn(\"\\u041D\\u0435\\u043A\\u043E\\u0440\\u0440\\u0435\\u043A\\u0442\\u043D\\u0430\\u044F \\u0434\\u0430\\u0442\\u0430 \\u0434\\u043B\\u044F \\u0441\\u0442\\u0443\\u0434\\u0435\\u043D\\u0442\\u0430 \".concat(name, \": \").concat(date));\n              return;\n            }\n\n            // Проверяем, что дата урока попадает в текущую неделю\n            if (lessonDate < weekStart || lessonDate > weekEnd) {\n              return;\n            }\n\n            // Проверяем, что время урока находится в рабочем диапазоне\n            var hour = parseInt(time.split(':')[0]);\n            if (hour >= _this4.startHour && hour <= _this4.endHour) {\n              // Находим элемент дня\n              var dayOfWeek = daysOfWeek[lessonDate.getDay()]; // Используем английские названия\n\n              var dayElement = document.getElementById(dayOfWeek);\n              if (dayElement) {\n                var hourIndex = hour - _this4.startHour;\n                var hourElement = dayElement.children[hourIndex];\n                if (hourElement) {\n                  // Обновляем содержимое элемента\n                  hourElement.innerHTML = _this4.createLessonHTML({\n                    id: name,\n                    date: date,\n                    // Используем исходную строку даты\n                    time: time,\n                    student: name,\n                    subject: subject,\n                    status: 'one-time'\n                  });\n                } else {\n                  console.warn(\"\\u042F\\u0447\\u0435\\u0439\\u043A\\u0430 \\u0434\\u043B\\u044F \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u0438 \".concat(time, \" \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u0430 \\u0432 \\u0434\\u043D\\u0435 \").concat(dayOfWeek));\n                }\n              } else {\n                console.warn(\"\\u042D\\u043B\\u0435\\u043C\\u0435\\u043D\\u0442 \\u0434\\u043D\\u044F \".concat(dayOfWeek, \" \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\"));\n              }\n            } else {\n              console.warn(\"\\u0412\\u0440\\u0435\\u043C\\u044F \\u0443\\u0440\\u043E\\u043A\\u0430 \".concat(time, \" \\u0432\\u043D\\u0435 \\u0440\\u0430\\u0431\\u043E\\u0447\\u0435\\u0433\\u043E \\u0434\\u0438\\u0430\\u043F\\u0430\\u0437\\u043E\\u043D\\u0430\"));\n            }\n          });\n        } else {\n          console.warn(\"\\u041D\\u0435\\u0442 \\u0440\\u0430\\u0437\\u043E\\u0432\\u044B\\u0445 \\u0443\\u0440\\u043E\\u043A\\u043E\\u0432 \\u0434\\u043B\\u044F \\u0441\\u0442\\u0443\\u0434\\u0435\\u043D\\u0442\\u0430: \".concat(name));\n        }\n      });\n    }\n  }, {\n    key: \"updateScheduleDisplay\",\n    value: function updateScheduleDisplay() {\n      if (!this.scheduleData || !this.scheduleData.weeklyOpenSlots) return;\n      this.clearSchedule();\n      this.displayedLessons.clear();\n      var dates = this.getWeekDates(this.currentWeekOffset); // Используем currentWeekOffset\n      var days = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'];\n\n      // Очищаем все ячейки перед отображением уроков\n      this.clearAllLessons(days);\n\n      // Отображаем открытые слоты\n      this.displayOpenSlots(days);\n\n      // Проверяем наличие данных о студентах перед отображением регулярных уроков\n      if (this.scheduleData.students && Array.isArray(this.scheduleData.students)) {\n        this.displayRegularLessons(days, dates);\n      } else {\n        console.warn(\"Нет данных о студентах для отображения регулярных уроков.\");\n      }\n\n      // Отображаем разовые уроки\n      this.displayOneTimeLessons();\n    }\n  }, {\n    key: \"clearAllLessons\",\n    value: function clearAllLessons(days) {\n      days.forEach(function (day) {\n        var dayElement = document.getElementById(day);\n        if (dayElement) {\n          var hourElements = dayElement.children;\n          var _iterator = _createForOfIteratorHelper(hourElements),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var hourElement = _step.value;\n              hourElement.innerHTML = ''; // Очищаем содержимое ячейки\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"getWeekRange\",\n    value: function getWeekRange() {\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var today = new Date();\n      var currentDay = today.getDay();\n      var diff = currentDay === 0 ? 6 : currentDay - 1;\n      var monday = new Date(today);\n      monday.setDate(today.getDate() - diff + offset * 7);\n      var sunday = new Date(monday);\n      sunday.setDate(monday.getDate() + 6);\n      return {\n        start: monday,\n        end: sunday\n      };\n    }\n  }, {\n    key: \"nextWeek\",\n    value: function nextWeek() {\n      this.currentWeekOffset++;\n      this.updateCalendar();\n      this.updateScheduleDisplay();\n    }\n  }, {\n    key: \"prevWeek\",\n    value: function prevWeek() {\n      this.currentWeekOffset--;\n      this.updateCalendar();\n      this.updateScheduleDisplay();\n    }\n  }, {\n    key: \"goToCurrentWeek\",\n    value: function goToCurrentWeek() {\n      this.currentWeekOffset = 0;\n      this.updateCalendar();\n      this.updateScheduleDisplay();\n    }\n  }, {\n    key: \"updateCalendar\",\n    value: function updateCalendar() {\n      this.updateHeaderDates();\n      this.updateWeekInfo();\n    }\n  }, {\n    key: \"loadScheduleData\",\n    value: function () {\n      var _loadScheduleData = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this$scheduleData$se;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _bx24api_js__WEBPACK_IMPORTED_MODULE_0__.getSchedule();\n            case 3:\n              this.scheduleData = _context.sent;\n              // Проверяем, что данные загружены и содержат информацию о студентах\n              if (!this.scheduleData || !this.scheduleData.students || this.scheduleData.students.length === 0) {\n                console.warn(\"Данные расписания не загружены или не содержат информации о студентах.\");\n              }\n\n              // Используем настройки из scheduleData\n              if ((_this$scheduleData$se = this.scheduleData.settings) !== null && _this$scheduleData$se !== void 0 && _this$scheduleData$se.workingHours) {\n                this.startHour = this.scheduleData.settings.workingHours.start;\n                this.endHour = this.scheduleData.settings.workingHours.end;\n              } else {\n                // Если нет настроек в scheduleData, используем значения по умолчанию\n                this.startHour = 11; // значение по умолчанию\n                this.endHour = 21; // значение по умолчанию\n              }\n\n              // Генерируем слоты времени с загруженными настройками\n              this.generateTimeSlots();\n\n              // Обновляем календарь и отображение расписания\n              this.updateCalendar();\n              this.updateScheduleDisplay();\n\n              // Обновляем заголовки и даты после загрузки данных\n              this.updateHeaderDates();\n              this.updateWeekInfo();\n              _context.next = 16;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              console.log('Ошибка загрузки данных:', _context.t0);\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 13]]);\n      }));\n      function loadScheduleData() {\n        return _loadScheduleData.apply(this, arguments);\n      }\n      return loadScheduleData;\n    }()\n  }, {\n    key: \"updateWorkingHours\",\n    value: function updateWorkingHours(start, end) {\n      this.startHour = start;\n      this.endHour = end;\n      this.generateTimeSlots();\n      this.updateScheduleDisplay();\n    }\n  }, {\n    key: \"updateCalendarUi\",\n    value: function updateCalendarUi() {\n      this.generateTimeSlots();\n      this.updateScheduleDisplay();\n    }\n  }, {\n    key: \"updateSchedule\",\n    value: function () {\n      var _updateSchedule = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _bx24api_js__WEBPACK_IMPORTED_MODULE_0__.updateSchedule(this.scheduleData);\n            case 3:\n              console.log(\"Расписание успешно обновлено в Битриксе.\");\n              _context2.next = 9;\n              break;\n            case 6:\n              _context2.prev = 6;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.error(\"Ошибка при обновлении расписания:\", _context2.t0);\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 6]]);\n      }));\n      function updateSchedule() {\n        return _updateSchedule.apply(this, arguments);\n      }\n      return updateSchedule;\n    }() //for admin only\n  }, {\n    key: \"addNewStudent\",\n    value: function addNewStudent(teacherId, studentData) {\n      var _this5 = this;\n      _bx24api_js__WEBPACK_IMPORTED_MODULE_0__.isAdmin().then(/*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(isAdmin) {\n          var teacherSchedule;\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!isAdmin) {\n                  _context4.next = 8;\n                  break;\n                }\n                _context4.next = 3;\n                return _bx24api_js__WEBPACK_IMPORTED_MODULE_0__.getSchedule(teacherId);\n              case 3:\n                teacherSchedule = _context4.sent;\n                console.log(teacherSchedule);\n                teacherSchedule.students.push(studentData);\n                console.log(teacherSchedule);\n                _bx24api_js__WEBPACK_IMPORTED_MODULE_0__.updateSchedule(teacherSchedule, teacherId).then(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n                  var myId;\n                  return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                    while (1) switch (_context3.prev = _context3.next) {\n                      case 0:\n                        console.log('Расписание успешно добавлено');\n                        _context3.next = 3;\n                        return (0,_bx24api_js__WEBPACK_IMPORTED_MODULE_0__.getMyId)();\n                      case 3:\n                        myId = _context3.sent;\n                        if (teacherId === myId) {\n                          console.log(\"обновили своё расписание\");\n                          _this5.scheduleData = teacherSchedule;\n                          _this5.updateCalendarUi();\n                        }\n                        (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.showNotification)(\"Расписание успешно добавлено\", \"success\");\n                      case 6:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }, _callee3);\n                })))[\"catch\"](function (error) {\n                  console.error('Ошибка при добавлении расписания:', error);\n                  (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.showNotification)(\"Ошибка при добавлении расписания\", \"error\");\n                });\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4);\n        }));\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }())[\"catch\"](function (error) {\n        console.error('Ошибка при проверке прав администратора:', error);\n      });\n    }\n  }]);\n}();\n\n//# sourceURL=webpack://schedule-bx24-app/./src/calendar.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _app_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app.js */ \"./src/app.js\");\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n  (0,_app_js__WEBPACK_IMPORTED_MODULE_0__.initApp)();\n});\n\n//# sourceURL=webpack://schedule-bx24-app/./src/index.js?");

/***/ }),

/***/ "./src/modal.js":
/*!**********************!*\
  !*** ./src/modal.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LessonModal: () => (/* binding */ LessonModal)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar LessonModal = /*#__PURE__*/function () {\n  function LessonModal() {\n    _classCallCheck(this, LessonModal);\n    this.modal = document.getElementById(\"lesson-modal\");\n    this.closeButton = document.getElementsByClassName(\"close\")[0];\n    this.form = document.getElementById(\"lesson-form\");\n    this.cancelButton = this.modal.querySelector(\".cancel-button\");\n    this.submitButton = this.modal.querySelector(\".submit-button\");\n    this.topicInput = document.getElementById(\"lesson-topic\");\n    this.setupEventListeners();\n  }\n  return _createClass(LessonModal, [{\n    key: \"open\",\n    value: function open(lessonData) {\n      this.modal.style.display = 'block';\n      this.modal.querySelector('.modal-content').scrollTop = 0;\n\n      // Добавляем класс типа урока к модальному окну\n      var modalContent = this.modal.querySelector('.modal-content');\n      modalContent.classList.remove('permanent', 'one-time');\n      modalContent.classList.add(lessonData.status);\n\n      // Форматируем сегодняшнюю дату\n      var today = new Date();\n      // Заполняем форму данными урока\n      document.getElementById(\"lesson-date\").value = today.toLocaleDateString('ru-RU', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n      document.getElementById(\"lesson-course\").value = lessonData.subject;\n\n      // Очищаем поля ввода\n      document.getElementById(\"lesson-topic\").value = \"\";\n      document.getElementById(\"lesson-homework\").value = \"\";\n      document.getElementById(\"lesson-comment\").value = \"\";\n\n      // Добавляем информацию об уроке\n      var emoji = lessonData.status === 'permanent' ? '🔄' : '1️⃣';\n      var statusText = lessonData.status === 'permanent' ? 'Постоянный урок' : 'Разовый урок';\n      this.modal.querySelector('.lesson-type').innerHTML = \"\".concat(emoji, \" \").concat(statusText);\n      this.modal.querySelector('.lesson-student').textContent = \"\\u0423\\u0447\\u0435\\u043D\\u0438\\u043A: \".concat(lessonData.student);\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.modal.style.display = \"none\";\n      this.form.reset();\n      // Убираем ошибки при закрытии\n      this.topicInput.closest('.form-group').classList.remove('error');\n    }\n  }, {\n    key: \"validateForm\",\n    value: function validateForm() {\n      var isValid = true;\n      var topicGroup = this.topicInput.closest('.form-group');\n      if (!this.topicInput.value.trim()) {\n        topicGroup.classList.add('error');\n        isValid = false;\n      } else {\n        topicGroup.classList.remove('error');\n      }\n      return isValid;\n    }\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this = this;\n      this.closeButton.onclick = function () {\n        return _this.close();\n      };\n      this.cancelButton.onclick = function () {\n        return _this.close();\n      };\n      document.addEventListener('click', function (e) {\n        if (e.target === _this.modal) {\n          _this.close();\n        }\n      });\n      this.submitButton.onclick = function (e) {\n        e.preventDefault();\n        if (_this.validateForm()) {\n          // Здесь будет логика сохранения данных\n          _this.close();\n        }\n      };\n      this.topicInput.addEventListener('input', function () {\n        var topicGroup = _this.topicInput.closest('.form-group');\n        if (_this.topicInput.value.trim()) {\n          topicGroup.classList.remove('error');\n        }\n      });\n    }\n  }]);\n}();\n\n//# sourceURL=webpack://schedule-bx24-app/./src/modal.js?");

/***/ }),

/***/ "./src/settings.js":
/*!*************************!*\
  !*** ./src/settings.js ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SettingsManager: () => (/* binding */ SettingsManager)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"./src/utils.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n\nvar SettingsManager = /*#__PURE__*/function () {\n  function SettingsManager(calendar) {\n    _classCallCheck(this, SettingsManager);\n    this.calendar = calendar;\n\n    // Инициализация элементов DOM\n    this.initializeDOMElements();\n\n    // Инициализация состояния\n    this.isSelectingOpenWindows = false; // Флаг для отслеживания состояния выбора открытых окон\n    this.openWindowStates = {}; // Объект для хранения состояния чекбоксов\n\n    // Загружаем сохраненные настройки\n    this.loadSavedSettings();\n\n    // Настройка событий и инициализация\n    this.setupEventListeners();\n    this.initializeTimeOptions();\n  }\n  return _createClass(SettingsManager, [{\n    key: \"initializeDOMElements\",\n    value: function initializeDOMElements() {\n      this.modal = document.getElementById('settings-modal');\n      if (!this.modal) throw new Error('Элемент settings-modal не найден');\n      this.startHourSelect = document.getElementById('start-hour');\n      if (!this.startHourSelect) throw new Error('Элемент start-hour не найден');\n      this.endHourSelect = document.getElementById('end-hour');\n      if (!this.endHourSelect) throw new Error('Элемент end-hour не найден');\n      this.closeButton = this.modal.querySelector('.close');\n      if (!this.closeButton) throw new Error('Элемент .close не найден');\n      this.cancelButton = this.modal.querySelector('.cancel-button');\n      if (!this.cancelButton) throw new Error('Элемент .cancel-button не найден');\n      this.submitButton = this.modal.querySelector('.submit-button');\n      if (!this.submitButton) throw new Error('Элемент .submit-button не найден');\n      this.themeSwitch = document.getElementById('theme-switch');\n      if (!this.themeSwitch) throw new Error('Элемент theme-switch не найден');\n      this.openWindowsButton = document.getElementById('set-open-windows');\n      if (!this.openWindowsButton) throw new Error('Элемент set-open-windows не найден');\n      this.openWindowsControls = document.getElementById('open-windows-controls');\n      if (!this.openWindowsControls) throw new Error('Элемент open-windows-controls не найден');\n    }\n  }, {\n    key: \"loadSavedSettings\",\n    value: function loadSavedSettings() {\n      // Загружаем тему\n      var savedTheme = localStorage.getItem('theme');\n      if (savedTheme) {\n        // Проверяем, что тема сохранена\n        document.body.classList.toggle('dark-theme', savedTheme === 'dark');\n        this.themeSwitch.checked = savedTheme === 'dark';\n      }\n\n      // Загружаем сохраненные часы\n      var savedStartHour = localStorage.getItem('startHour');\n      var savedEndHour = localStorage.getItem('endHour');\n      if (savedStartHour && savedEndHour) {\n        var startHour = parseInt(savedStartHour, 10); // Указываем систему счисления (10)\n        var endHour = parseInt(savedEndHour, 10);\n\n        // Проверяем валидность сохраненных значений\n        if (this.isValidWorkingHours(startHour, endHour)) {\n          this.calendar.updateWorkingHours(startHour, endHour);\n        }\n      }\n\n      // Загружаем сохраненные данные об открытых окнах из localStorage\n      var savedOpenWindowStates = localStorage.getItem('openWindowStates');\n      if (savedOpenWindowStates) {\n        this.openWindowStates = JSON.parse(savedOpenWindowStates);\n      } else {\n        this.openWindowStates = {}; // Если данных нет, инициализируем пустой объект\n      }\n    }\n  }, {\n    key: \"isValidWorkingHours\",\n    value: function isValidWorkingHours(startHour, endHour) {\n      return !isNaN(startHour) &&\n      // Проверяем, что startHour — число\n      !isNaN(endHour) &&\n      // Проверяем, что endHour — число\n      startHour >= 0 &&\n      // Начальный час не меньше 0\n      endHour <= 23 &&\n      // Конечный час не больше 23\n      startHour < endHour // Начальный час меньше конечного\n      ;\n    }\n  }, {\n    key: \"initializeTimeOptions\",\n    value: function initializeTimeOptions() {\n      var _this = this;\n      // Проверяем, что элементы select существуют\n      if (!this.startHourSelect || !this.endHourSelect) {\n        console.error('Элементы startHourSelect или endHourSelect не найдены');\n        return;\n      }\n\n      // Очищаем существующие опции\n      this.startHourSelect.innerHTML = '';\n      this.endHourSelect.innerHTML = '';\n\n      // Создаем опции для каждого часа\n      Array.from({\n        length: 24\n      }, function (_, i) {\n        var hour = String(i).padStart(2, '0');\n        var time = \"\".concat(hour, \":00\");\n\n        // Создаем опции для startHourSelect и endHourSelect\n        _this.startHourSelect.add(new Option(time, i));\n        _this.endHourSelect.add(new Option(time, i));\n      });\n    }\n  }, {\n    key: \"open\",\n    value: function open() {\n      // Проверяем, что элементы существуют\n      if (!this.startHourSelect || !this.endHourSelect || !this.modal) {\n        console.error('Не найдены необходимые элементы DOM');\n        return;\n      }\n\n      // Устанавливаем текущие значения\n      this.startHourSelect.value = this.calendar.startHour;\n      this.endHourSelect.value = this.calendar.endHour;\n\n      // Открываем модальное окно\n      this.modal.classList.add('visible'); // Добавляем класс для видимости\n      this.modal.style.display = 'block';\n\n      // Сбрасываем положение скролла\n      this.resetModalScroll();\n    }\n  }, {\n    key: \"resetModalScroll\",\n    value: function resetModalScroll() {\n      var modalContent = this.modal.querySelector('.modal-content');\n      if (modalContent) {\n        modalContent.scrollTop = 0;\n      } else {\n        console.warn('Элемент .modal-content не найден');\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (!this.modal) {\n        console.error('Модальное окно не найдено');\n        return;\n      }\n\n      // Закрываем модальное окно\n      this.modal.classList.remove('visible'); // Убираем класс для видимости\n      this.modal.style.display = 'none';\n    }\n  }, {\n    key: \"setupEventListeners\",\n    value: function setupEventListeners() {\n      var _this2 = this;\n      // Проверяем, что элементы существуют\n      if (!this.closeButton || !this.cancelButton || !this.submitButton || !this.themeSwitch || !this.openWindowsButton) {\n        console.error('Не найдены необходимые элементы DOM');\n        return;\n      }\n\n      // Обработчики для кнопок закрытия и отмены\n      this.closeButton.onclick = function () {\n        return _this2.close();\n      };\n      this.cancelButton.onclick = function () {\n        return _this2.close();\n      };\n\n      // Обработчик для закрытия модального окна при клике вне его\n      document.addEventListener('click', function (e) {\n        if (e.target === _this2.modal) {\n          _this2.close();\n        }\n      });\n\n      // Обработчик для кнопки \"Сохранить\"\n      this.submitButton.onclick = function (e) {\n        return _this2.handleSubmit(e);\n      };\n\n      // Обработчик для переключения темы\n      this.themeSwitch.addEventListener('change', function () {\n        return _this2.toggleTheme();\n      });\n\n      // Обработчик для кнопки \"Открытые окна\"\n      this.openWindowsButton.onclick = function (e) {\n        e.preventDefault();\n        _this2.toggleOpenWindows();\n        // Закрываем модальное окно\n        _utils_js__WEBPACK_IMPORTED_MODULE_0__.closeConfirmationModal();\n      };\n\n      // Обработчик для кнопки \"Сохранить открытые окна\"\n      var saveOpenWindowsButton = document.getElementById('save-open-windows');\n      if (saveOpenWindowsButton) {\n        saveOpenWindowsButton.onclick = function () {\n          return _utils_js__WEBPACK_IMPORTED_MODULE_0__.showConfirmationModal({\n            text: \"Вы уверены, что хотите изменить открытые окна?\",\n            onConfirm: function onConfirm() {\n              return _this2.applyOpenSlotsUpdate();\n            },\n            onCancel: function onCancel() {\n              return _this2.turnOffOpenWindowsMode();\n            }\n          });\n        };\n      }\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      var _this3 = this;\n      e.preventDefault();\n      var startHour = parseInt(this.startHourSelect.value);\n      var endHour = parseInt(this.endHourSelect.value);\n      if (startHour < endHour) {\n        if (startHour === this.calendar.startHour && endHour === this.calendar.endHour) {\n          console.log('Настройки не изменились');\n        } else {\n          // Обновляем настройки в scheduleData\n          this.calendar.scheduleData.settings.workingHours.start = startHour;\n          this.calendar.scheduleData.settings.workingHours.end = endHour;\n\n          // Обновляем данные в Битриксе\n          this.calendar.updateSchedule().then(function () {\n            _this3.calendar.updateWorkingHours(startHour, endHour);\n          })[\"catch\"](function (error) {\n            console.error('Ошибка при обновлении расписания:', error);\n          });\n        }\n        this.close();\n      } else {\n        alert('Время начала должно быть меньше времени окончания');\n      }\n    }\n  }, {\n    key: \"applyOpenSlotsUpdate\",\n    value: function applyOpenSlotsUpdate() {\n      var _this4 = this;\n      var newOpenSlots = this.openWindowStates;\n      var currentOpenSlots = this.calendar.scheduleData.weeklyOpenSlots;\n      var isChanged = JSON.stringify(newOpenSlots) !== JSON.stringify(currentOpenSlots);\n      if (!isChanged) {\n        console.log('Открытые окна не изменились');\n        _utils_js__WEBPACK_IMPORTED_MODULE_0__.showNotification(\"Открытые окна не изменились\", \"info\");\n        this.turnOffOpenWindowsMode();\n        return;\n      }\n\n      // Обновляем данные в scheduleData\n      this.calendar.scheduleData.weeklyOpenSlots = newOpenSlots;\n\n      // Отправляем обновленные данные на сервер\n      this.calendar.updateSchedule(this.calendar.scheduleData).then(function () {\n        console.log('Открытые слоты успешно обновлены');\n        // Перерисовываем календарь с новыми данными\n        _this4.calendar.updateCalendarUi();\n        _utils_js__WEBPACK_IMPORTED_MODULE_0__.showNotification(\"Открытые окна успешно сохранены\", \"success\");\n      })[\"catch\"](function (error) {\n        console.error('Ошибка при обновлении открытых окон:', error);\n        _utils_js__WEBPACK_IMPORTED_MODULE_0__.showNotification(\"Ошибка при обновлении открытых окон\", \"error\");\n      });\n\n      // Выключаем режим редактирования\n      this.turnOffOpenWindowsMode();\n    }\n  }, {\n    key: \"toggleTheme\",\n    value: function toggleTheme() {\n      if (this.themeSwitch.checked) {\n        document.body.classList.add('dark-theme');\n        localStorage.setItem('theme', 'dark');\n      } else {\n        document.body.classList.remove('dark-theme');\n        localStorage.setItem('theme', 'light');\n      }\n    }\n  }, {\n    key: \"turnOffOpenWindowsMode\",\n    value: function turnOffOpenWindowsMode() {\n      var _this5 = this;\n      var checkboxes = document.querySelectorAll('.open-window-checkbox');\n      checkboxes.forEach(function (checkbox) {\n        var day = checkbox.parentNode.getAttribute('data-day');\n        var hour = checkbox.parentNode.getAttribute('data-hour');\n        _this5.openWindowStates[day][hour] = false; // Обновляем состояние в объекте\n        checkbox.parentNode.removeChild(checkbox);\n      });\n\n      // Скрываем панель \"Открытых окон\"\n      var selectedCountPanel = document.getElementById('selected-count');\n      if (selectedCountPanel) {\n        selectedCountPanel.style.display = 'none';\n      }\n      this.isSelectingOpenWindows = false; // Сбрасываем состояние\n\n      // Скрываем контролы\n      if (this.openWindowsControls) {\n        this.openWindowsControls.style.display = 'none';\n      }\n    }\n  }, {\n    key: \"toggleOpenWindows\",\n    value: function toggleOpenWindows() {\n      var _this6 = this;\n      console.log(\"Режим настройки окон переключен\");\n      this.isSelectingOpenWindows = !this.isSelectingOpenWindows; // Переключаем состояние\n\n      // Переключаем видимость контролов\n      if (this.openWindowsControls) {\n        var isVisible = this.openWindowsControls.style.display === 'block';\n        this.openWindowsControls.style.display = isVisible ? 'none' : 'block';\n      }\n\n      // Добавляем чекбоксы\n      this.addCheckboxesToHours();\n\n      // Синхронизируем чекбоксы с состоянием из openWindowStates\n      var hourElements = document.querySelectorAll('.hour');\n      hourElements.forEach(function (hourElement) {\n        var day = hourElement.getAttribute('data-day');\n        var hour = hourElement.getAttribute('data-hour');\n        var checkbox = hourElement.querySelector('.open-window-checkbox');\n        if (checkbox) {\n          var _this6$openWindowStat;\n          checkbox.checked = ((_this6$openWindowStat = _this6.openWindowStates[day]) === null || _this6$openWindowStat === void 0 ? void 0 : _this6$openWindowStat.includes(hour)) || false;\n        }\n      });\n\n      // Обновляем количество выбранных ячеек\n      this.updateSelectedCount();\n\n      // Закрываем модальное окно настроек\n      this.close();\n\n      // Обработчик для кнопки \"Отмена\"\n      var cancelButton = document.getElementById('cancel-open-windows');\n      if (cancelButton) {\n        cancelButton.onclick = function () {\n          return _this6.turnOffOpenWindowsMode();\n        };\n      }\n    }\n  }, {\n    key: \"addCheckboxesToHours\",\n    value: function addCheckboxesToHours() {\n      var _this7 = this;\n      var hourElements = document.querySelectorAll('.hour');\n      hourElements.forEach(function (hourElement) {\n        var day = hourElement.getAttribute('data-day');\n        var hour = hourElement.getAttribute('data-hour');\n        if (!_this7.openWindowStates[day]) {\n          _this7.openWindowStates[day] = [];\n        }\n\n        // Создаем чекбокс\n        var checkbox = document.createElement('input');\n        checkbox.type = 'checkbox';\n        checkbox.className = 'open-window-checkbox';\n        checkbox.checked = _this7.openWindowStates[day].includes(hour);\n        hourElement.appendChild(checkbox);\n\n        // Обработчик изменения состояния чекбокса\n        checkbox.addEventListener('change', function () {\n          if (checkbox.checked) {\n            if (!_this7.openWindowStates[day].includes(hour)) {\n              _this7.openWindowStates[day].push(hour);\n            }\n          } else {\n            _this7.openWindowStates[day] = _this7.openWindowStates[day].filter(function (h) {\n              return h !== hour;\n            });\n          }\n\n          // Сохраняем обновленное состояние в localStorage\n          localStorage.setItem('openWindowStates', JSON.stringify(_this7.openWindowStates));\n\n          // Обновляем количество выбранных ячеек\n          _this7.updateSelectedCount();\n        });\n      });\n    }\n  }, {\n    key: \"updateSelectedCount\",\n    value: function updateSelectedCount() {\n      var countElement = document.getElementById('count');\n      var selectedCountPanel = document.getElementById('selected-count');\n      if (!countElement || !selectedCountPanel) {\n        console.error('Элементы count или selected-count не найдены');\n        return;\n      }\n      var selectedCount = 0;\n\n      // Считаем количество выбранных ячеек\n      for (var day in this.openWindowStates) {\n        for (var hour in this.openWindowStates[day]) {\n          if (this.openWindowStates[day][hour]) {\n            selectedCount++;\n          }\n        }\n      }\n      countElement.textContent = selectedCount; // Обновляем текст\n      selectedCountPanel.style.display = selectedCount > 0 ? 'block' : 'none'; // Показываем или скрываем панель\n    }\n  }]);\n}();\n\n//# sourceURL=webpack://schedule-bx24-app/./src/settings.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closeConfirmationModal: () => (/* binding */ closeConfirmationModal),\n/* harmony export */   showConfirmationModal: () => (/* binding */ showConfirmationModal),\n/* harmony export */   showNotification: () => (/* binding */ showNotification)\n/* harmony export */ });\nfunction showNotification(message) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'info';\n  var notification = document.getElementById('notification');\n\n  // Устанавливаем соответствующий стиль в зависимости от типа\n  switch (type) {\n    case 'success':\n      notification.style.backgroundColor = '#4CAF50'; // Зеленый цвет для успеха\n      notification.style.color = '#fff'; // Белый текст\n      break;\n    case 'error':\n      notification.style.backgroundColor = '#f44336'; // Красный цвет для ошибки\n      notification.style.color = '#fff'; // Белый текст\n      break;\n    case 'info':\n    default:\n      notification.style.backgroundColor = '#2196F3'; // Синий цвет для нейтрального\n      notification.style.color = '#fff'; // Белый текст\n      break;\n  }\n\n  // Показать уведомление\n  notification.textContent = message;\n  notification.style.display = 'block';\n  notification.style.opacity = '1';\n  notification.style.zIndex = '1001';\n  notification.style.transform = 'translateX(-50%) translateY(0)';\n\n  // Скрыть уведомление через 3 секунды\n  setTimeout(function () {\n    notification.style.opacity = '0'; // Скрыть уведомление\n    notification.style.transform = 'translateX(-50%) translateY(20px)'; // Убрать уведомление вниз\n    setTimeout(function () {\n      notification.style.display = 'none'; // Убрать из потока\n    }, 500); // Время, чтобы дождаться завершения анимации\n  }, 3000);\n}\nfunction showConfirmationModal(_ref) {\n  var _this = this;\n  var text = _ref.text,\n    onConfirm = _ref.onConfirm,\n    onCancel = _ref.onCancel;\n  var confirmationModal = document.getElementById('confirmation-modal');\n  if (confirmationModal) {\n    var confirmationText = document.getElementById('confirmation-text');\n    confirmationText.innerHTML = text;\n    confirmationModal.style.display = 'block';\n    confirmationModal.style.zIndex = '10001';\n    var confirmButton = document.getElementById('confirm-change');\n    if (confirmButton) {\n      confirmButton.onclick = function () {\n        onConfirm();\n        _this.closeConfirmationModal();\n      };\n    }\n    var cancelButton = document.getElementById('cancel-change');\n    if (cancelButton) {\n      cancelButton.onclick = function () {\n        onCancel();\n        _this.closeConfirmationModal();\n      };\n    }\n  }\n}\nfunction closeConfirmationModal() {\n  var confirmationModal = document.getElementById('confirmation-modal');\n  if (confirmationModal) {\n    confirmationModal.style.display = 'none';\n  }\n}\n\n//# sourceURL=webpack://schedule-bx24-app/./src/utils.js?");

/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		// no module.id needed
/******/ 		// no module.loaded needed
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/compat get default export */
/******/ (() => {
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = (module) => {
/******/ 		var getter = module && module.__esModule ?
/******/ 			() => (module['default']) :
/******/ 			() => (module);
/******/ 		__webpack_require__.d(getter, { a: getter });
/******/ 		return getter;
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__webpack_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/************************************************************************/
/******/ 
/******/ // startup
/******/ // Load entry module and return exports
/******/ // This entry module can't be inlined because the eval devtool is used.
/******/ var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 
