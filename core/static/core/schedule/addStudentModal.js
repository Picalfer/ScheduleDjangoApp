import * as BX24API from './bx24api.js';
import * as utils from './utils.js';
/*import {Russian} from "flatpickr/dist/l10n/ru.js";
import flatpickr from "flatpickr";*/
import {calendar} from './app.js'

export class AddStudentModal {
    constructor() {
        this.initializeDOMElements()
        this.setupEventListeners();
    }

    initializeDOMElements() {
        this.modal = document.getElementById('add-student-modal');
        this.modalContent = document.getElementById('add-student-modal-content');
        this.closeButton = document.querySelector('#add-student-modal .close');
        this.form = document.getElementById("add-student-form");
        this.cancelButton = this.modal.querySelector(".cancel-button");
        this.submitButton = this.modal.querySelector("#submit-student");

        // –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        this.findClientButton = document.getElementById('find-client-button');
        this.findTeacherButton = document.getElementById('find-teacher-button');
        this.clientIDInput = document.getElementById('client-id');
        this.clientInfo = document.getElementById('client-info');
        this.teacherIDInput = document.getElementById('teacher-id')
        this.teacherInfo = document.getElementById('teacher-info');
        this.addOneTimeLessonButton = document.getElementById('add-one-time-lesson-button');
        this.addRegularLessonButton = document.getElementById('add-regular-lesson-button');
        this.oneTimeLessonsContainer = document.getElementById('one-time-lessons-container');
        this.regularLessonsContainer = document.getElementById('regular-lessons-container');
    }

    setupEventListeners() {
        this.closeButton.onclick = () => this.close();
        this.cancelButton.onclick = () => this.close();

        document.addEventListener('click', (e) => {
            if (e.target === this.modal) {
                this.close();
            }
        });

        this.findClientButton.onclick = (e) => this.findClient(e)
        this.findTeacherButton.onclick = (e) => this.findTeacher(e)
        this.addOneTimeLessonButton.onclick = (e) => this.addOneTimeLesson(e);
        this.addRegularLessonButton.onclick = (e) => this.addRegularLesson(e);

        this.submitButton.onclick = (e) => this.onSubmit(e);
    }

    close() {
        this.modal.style.display = "none";
        this.form.reset();

        this.clientIDInput.value = ''
        this.clientInfo.style.display = 'none';
        this.clientInfo.textContent = '';

        this.teacherIDInput.value = ''
        this.teacherInfo.style.display = 'none';
        this.teacherInfo.textContent = '';

        this.oneTimeLessonsContainer.innerHTML = '';
        this.regularLessonsContainer.innerHTML = '';
    }

    open() {
        BX24API.isAdmin()
            .then((isAdmin) => {
                if (isAdmin) {
                    this.modal.style.display = 'block';
                    this.resetModalScroll();
                }
            })
            .catch((error) => {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error);
            });
    }

    resetModalScroll() {
        if (this.modalContent) {
            this.modalContent.scrollTop = 0; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –≤ 0
        } else {
            console.warn('–≠–ª–µ–º–µ–Ω—Ç –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω');
        }
    }

    findClient(event) {
        event.stopPropagation();

        const clientId = document.getElementById('client-id').value.trim(); // –ü–æ–ª—É—á–∞–µ–º ID –∫–ª–∏–µ–Ω—Ç–∞ –∏ —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª–µ –Ω–µ –ø—É—Å—Ç–æ–µ
        if (!clientId) {
            utils.showNotification("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ ID –∫–ª–∏–µ–Ω—Ç–∞.", 'error');
            return;
        }

        BX24API.getClientByID(clientId).then(client => {
            if (client) {
                this.clientInfo.style.display = 'block'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
                this.clientInfo.innerHTML = `
                <div>–ò–º—è: <span id="client-name">${client.NAME}</span></div>
                <div>–§–∞–º–∏–ª–∏—è: <span  id="client-second-name">${client.SECOND_NAME}</span></div>
                <div>–ü—Ä–µ–¥–º–µ—Ç: <span id="client-subject">${client.UF_CRM_1739691796545}</span></div>
            `;
            } else {
                this.clientInfo.style.display = 'none';
            }
        }).catch(error => {
            console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –∫–ª–∏–µ–Ω—Ç–µ:", error);
            utils.showNotification(`–ö–ª–∏–µ–Ω—Ç —Å ID ${clientId} –Ω–µ –Ω–∞–π–¥–µ–Ω.`, 'error');
        });
    }

    findTeacher(event) {
        event.stopPropagation();

        const teacherId = document.getElementById('teacher-id').value.trim(); // –ü–æ–ª—É—á–∞–µ–º ID –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –∏ —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª–µ –Ω–µ –ø—É—Å—Ç–æ–µ
        if (!teacherId) {
            utils.showNotification("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ ID –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è.", 'error');
            return;
        }

        BX24API.getTeacherByID(teacherId).then(teachers => {
            if (teachers) {
                const teacher = teachers[0];
                this.teacherInfo.style.display = 'block';
                this.teacherInfo.textContent = `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ —Å ID ${teacherId}: ${teacher.NAME} ${teacher.LAST_NAME}`;
            } else {
                this.teacherInfo.style.display = 'none';
            }
        }).catch(error => {
            console.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ:", error);
            utils.showNotification(`–ö–ª–∏–µ–Ω—Ç —Å ID ${teacherId} –Ω–µ –Ω–∞–π–¥–µ–Ω.`, 'error');
        });
    }

    createLessonRow(type) {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è —É—Ä–æ–∫–∞
        const lessonRow = document.createElement('div');
        lessonRow.className = type === 'one-time' ? 'one-time-lesson-row' : 'regular-lesson-row';

        // –°–æ–∑–¥–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫—É—Ä—Å–∞
        const courseSelect = document.createElement('select');
        courseSelect.className = 'course-select';
        courseSelect.innerHTML = `
        <option value="" selected disabled hidden>–ö—É—Ä—Å</option>
        <option value="figma">Figma</option>
        <option value="computer-literacy">–ö–æ–º–ø—å—é—Ç–µ—Ä —Å –Ω—É–ª—è</option>
        <option value="scratch">Scratch</option>
        <option value="roblox">Roblox Studio</option>
        <option value="blender">–ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ Blender</option>
        <option value="web-development">–°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–π—Ç–æ–≤</option>
        <option value="python">–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ Python</option>
        <option value="unity">–°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä –Ω–∞ Unity</option>
        <option value="olympic-programming">–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ–ª–∏–º–ø–∏–∞–¥–∞–º –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é</option>
        <option value="cpp">–ò–∑—É—á–µ–Ω–∏–µ —è–∑—ã–∫–∞ C++</option>
    `;
        courseSelect.style.marginRight = "5px"
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä –∫—É—Ä—Å–∞ –∏ –∫–Ω–æ–ø–∫—É –≤ —Å—Ç—Ä–æ–∫—É
        lessonRow.appendChild(courseSelect);

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
        return lessonRow;
    }

    createTimeSelect() {
        // –°–æ–∑–¥–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏
        const timeSelect = document.createElement('select');
        timeSelect.className = 'time-select';
        timeSelect.innerHTML = `
        <option value="" selected disabled hidden>–í—Ä–µ–º—è</option>
    `;

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–ø—Ü–∏–∏ –¥–ª—è –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç 00:00 –¥–æ 23:00
        for (let hour = 0; hour < 24; hour++) {
            const formattedHour = hour.toString().padStart(2, '0') + ':00'; // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–∞—Å—ã
            const option = document.createElement('option');
            option.value = formattedHour;
            option.textContent = formattedHour;
            timeSelect.appendChild(option);
        }

        return timeSelect;
    }

    createDeleteButton(lessonRow) {
        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è
        const deleteButton = document.createElement('button');
        deleteButton.className = 'delete-lesson-button';
        deleteButton.type = 'button'; // –£–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ —ç—Ç–æ –∫–Ω–æ–ø–∫–∞ —Ç–∏–ø–∞ button
        deleteButton.innerHTML = 'üóëÔ∏è'; // –≠–º–æ–¥–∑–∏ –º—É—Å–æ—Ä–Ω–æ–≥–æ –±–∞–∫–∞
        deleteButton.title = '–£–¥–∞–ª–∏—Ç—å —É—Ä–æ–∫';

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
        deleteButton.addEventListener('click', () => {
            lessonRow.classList.add('fade-out'); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
            setTimeout(() => {
                if (type === 'one-time') {
                    this.oneTimeLessonsContainer.removeChild(lessonRow);
                } else {
                    this.regularLessonsContainer.removeChild(lessonRow);
                }
            }, 300); // –í—Ä–µ–º—è, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∞–Ω–∏–º–∞—Ü–∏–∏
        });

        return deleteButton;
    }

    addOneTimeLesson(event) {
        event.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã

        const lessonRow = this.createLessonRow('one-time');

        // –°–æ–∑–¥–∞–µ–º –ø–æ–ª–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã —á–µ—Ä–µ–∑ flatpickr
        const dateInput = document.createElement('input');
        dateInput.type = 'text'; // –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è flatpickr
        dateInput.className = 'lesson-date-input';
        dateInput.placeholder = '–î–∞—Ç–∞';

        dateInput.style.cursor = 'default';
        dateInput.style.padding = '10px';
        dateInput.style.marginRight = '5px';

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º flatpickr –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã
        flatpickr(dateInput, {
            locale: Russian,
            dateFormat: 'Y-m-d',
        });

        // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å—Ç—Ä–æ–∫—É
        lessonRow.appendChild(dateInput);
        lessonRow.appendChild(this.createTimeSelect());
        lessonRow.appendChild(this.createDeleteButton(lessonRow));

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        this.oneTimeLessonsContainer.appendChild(lessonRow);
    }

    addRegularLesson(event) {
        event.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã

        const lessonRow = this.createLessonRow('regular');

        // –°–æ–∑–¥–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–Ω—è
        const daySelect = document.createElement('select');
        daySelect.className = 'day-select';
        daySelect.innerHTML = `
        <option value="" selected disabled hidden>–î–µ–Ω—å –Ω–µ–¥–µ–ª–∏</option>
        <option value="monday">–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫</option>
        <option value="tuesday">–í—Ç–æ—Ä–Ω–∏–∫</option>
        <option value="wednesday">–°—Ä–µ–¥–∞
         <option value="thursday">–ß–µ—Ç–≤–µ—Ä–≥</option>
        <option value="friday">–ü—è—Ç–Ω–∏—Ü–∞</option>
        <option value="saturday">–°—É–±–±–æ—Ç–∞</option>
        <option value="sunday">–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ</option>
    `;
        daySelect.style.marginRight = '5px';

        // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å—Ç—Ä–æ–∫—É
        lessonRow.appendChild(daySelect);
        lessonRow.appendChild(lessonRow.appendChild(this.createTimeSelect()));
        lessonRow.appendChild(this.createDeleteButton(lessonRow));

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        this.regularLessonsContainer.appendChild(lessonRow);
    }

    onSubmit(event) {
        event.preventDefault(); // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ñ–æ—Ä–º—ã

        // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
        const clientId = document.getElementById('client-id').value.trim();
        const clientNameElement = document.getElementById('client-name');
        if (!clientNameElement) {
            utils.showNotification('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞.', 'error');
            return;
        }
        const clientName = clientNameElement.textContent;
        const teacherId = document.getElementById('teacher-id').value.trim();

        if (!clientId || !clientName || !teacherId) {
            utils.showNotification('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª—è "Client ID", "Client Name", "Teacher ID.', 'error');
            return; // –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏, –µ—Å–ª–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –ø—É—Å—Ç—ã–µ
        }

        const oneTimeLessonRows = document.querySelectorAll('.one-time-lesson-row');
        const regularLessonRows = document.querySelectorAll('.regular-lesson-row');

        const oneTimeLessonsFilled = Array.from(oneTimeLessonRows).some(row => {
            const dateSelect = row.querySelector('.lesson-date-input').value;
            const timeSelect = row.querySelector('.time-select').value;
            const courseSelect = row.querySelector('.course-select').value;
            return dateSelect && timeSelect && courseSelect;
        });

        const regularScheduleFilled = Array.from(regularLessonRows).some(row => {
            const daySelect = row.querySelector('.day-select').value;
            const timeSelect = row.querySelector('.time-select').value;
            const courseSelect = row.querySelector('.course-select').value;
            return daySelect && timeSelect && courseSelect;
        });

        if (!oneTimeLessonsFilled && !regularScheduleFilled) {
            utils.showNotification('–î–ª—è —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω —Ö–æ—Ç—è –±—ã —É—Ä–æ–∫ –æ–¥–Ω–æ–≥–æ –≤–∏–¥–∞ (–æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π –∏–ª–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π).');
            return;
        }

        const oneTimeLessons = [];
        const regularSchedule = [];

        oneTimeLessonRows.forEach(row => {
            const dateSelect = row.querySelector('.lesson-date-input');
            const timeSelect = row.querySelector('.time-select');
            const courseSelect = row.querySelector('.course-select').value;

            if (dateSelect && timeSelect && courseSelect) {
                oneTimeLessons.push({
                    date: dateSelect.value,
                    time: timeSelect.value,
                    subject: courseSelect
                });
            }
        });

        regularLessonRows.forEach(row => {
            const daySelect = row.querySelector('.day-select');
            const timeSelect = row.querySelector('.time-select');
            const courseSelect = row.querySelector('.course-select').value;

            if (daySelect.value && timeSelect.value && courseSelect) {
                regularSchedule.push({
                    day: daySelect.value,
                    time: timeSelect.value,
                    subject: courseSelect
                });
            }
        });

        // –§–æ—Ä–º–∏—Ä—É–µ–º –æ–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏
        const studentData = {
            id: clientId,
            name: clientName,
            oneTimeLessons: oneTimeLessons,
            regularSchedule: regularSchedule
        };

        // –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        console.log("–î–∞–Ω–Ω—ã–µ —É—á–µ–Ω–∏–∫–∞:", studentData);

        utils.showConfirmationModal({
            text: "–í—ã —É–≤–µ—Ä–µ–Ω—ã –≤ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è?",
            onConfirm: () => {
                calendar.addNewStudent(teacherId, studentData);
                this.close();
            },
            onCancel: () => {
            }
        });
    }
}


