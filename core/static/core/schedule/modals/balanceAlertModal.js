import {Modal} from './modal.js';
import {repository} from "../app.js";

export class BalanceAlertModal extends Modal {
    constructor(options = {}) {
        super({
            title: '–ö–ª–∏–µ–Ω—Ç—ã —Å –Ω–∏–∑–∫–∏–º –±–∞–ª–∞–Ω—Å–æ–º',
            modalClass: 'balance-alert-modal',
            modalContentClass: 'balance-alert-modal-content',
            ...options
        });

        this.loadClientsData();
        this.setupEvents();
    }

    setupEvents() {
        this.modalElement.addEventListener('click', (e) => {
            if (e.target.classList.contains('contact-btn')) {
                this.handleContactClient(e.target.dataset.clientId);
            }
        });
    }

    async loadClientsData() {
        try {
            const data = await repository.loadLowBalanceClients();

            if (data && data.clients) {
                this.displayClients(data.clients);
            } else {
                console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–æ–≤');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–ª–∏–µ–Ω—Ç–æ–≤:', error);
        }
    }

    displayClients(clients) {
        // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ –±–∞–ª–∞–Ω—Å—É
        const negativeBalance = clients.filter(c => c.balance < 0);
        const zeroBalance = clients.filter(c => c.balance === 0);
        const lowBalance = clients.filter(c => c.balance === 1);
        const warningBalance = clients.filter(c => c.balance === 2);


        const sections = [
            {
                title: 'üü£ –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å',
                className: 'negative-balance',
                clients: negativeBalance,
                show: negativeBalance.length > 0
            },
            {
                title: 'üî¥ –ù—É–ª–µ–≤–æ–π –±–∞–ª–∞–Ω—Å',
                clients: zeroBalance,
                className: 'zero-balance',
                show: zeroBalance.length > 0
            },
            {
                title: 'üü† –û—Å—Ç–∞–ª—Å—è 1 —É—Ä–æ–∫',
                clients: lowBalance,
                className: 'low-balance',
                show: lowBalance.length > 0
            },
            {
                title: 'üü° –û—Å—Ç–∞–ª–æ—Å—å 2 —É—Ä–æ–∫–∞',
                clients: warningBalance,
                className: 'warning-balance',
                show: warningBalance.length > 0
            }
        ];

        const visibleSections = sections.filter(section => section.show);

        const sectionsHTML = visibleSections.map(section => `
            <div class="balance-section ${section.className}">
                <h3>${section.title} (${section.clients.length})</h3>
                ${section.clients.length > 0
            ? this.renderClientsList(section.clients)
            : '<p class="no-clients">–ù–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</p>'
        }
            </div>
        `).join('');

        this.updateContent(`
            <div class="balance-alert-container horizontal-layout">
                ${sectionsHTML}
            </div>
        `);
    }

    renderClientsList(clients) {
        return clients.map(client => `
            <div class="client-card" data-client-id="${client.id}">
                <div class="client-info">
                    <h4>${client.name}</h4>
                    <div class="client-details">
                        ${client.balance < 0 ? `<p>–ë–∞–ª–∞–Ω—Å: ${client.balance}</p>` : ''}
                    </div>
                </div>
                <div class="client-actions">
                    <button class="contact-btn" data-client-id="${client.id}">
                        –°–≤—è–∑–∞—Ç—å—Å—è
                    </button>
                </div>
            </div>
        `).join('');

        /*<div className="client-details">
            <p>–¢–µ–ª–µ—Ñ–æ–Ω: ${client.parent_phone}</p>
            ${client.balance < 0 ? `<p>–ë–∞–ª–∞–Ω—Å: ${client.balance}</p>` : ''}
            <p>–ü–æ—Å–ª–µ–¥–Ω—è—è –æ–ø–ª–∞—Ç–∞:
                ${client.last_payment_date ? formatDate(new Date(client.last_payment_date)) : '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}</p>
            <p>–°–ª–µ–¥—É—é—â–∏–π —É—Ä–æ–∫:
                ${client.next_lesson_date ? formatDate(new Date(client.next_lesson_date)) : '–Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω'}</p>
        </div>*/
    }

    handleContactClient(clientId) {
        // –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å –∫–ª–∏–µ–Ω—Ç–æ–º
        console.log(`–ö–æ–Ω—Ç–∞–∫—Ç–∏—Ä—É–µ–º —Å –∫–ª–∏–µ–Ω—Ç–æ–º ID: ${clientId}`);
        showNotification(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—é –∫–ª–∏–µ–Ω—Ç–∞ ${clientId}`, 'success');

        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–≤—è–∑–∏:
        // 1. –ú–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É email/sms
        // 2. –ò–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
    }
}