# Generated by Django 5.1.7 on 2025-04-03 20:02

from django.db import migrations


def populate_balance_values(apps, schema_editor):
    """Заполняет balance_before и balance_after на основе истории операций"""
    BalanceOperation = apps.get_model('core', 'BalanceOperation')
    Client = apps.get_model('core', 'Client')

    # Для каждой операции вычисляем балансы
    for operation in BalanceOperation.objects.all().select_related('client'):
        if operation.operation_type == 'add':
            operation.balance_before = operation.client.balance - operation.amount
            operation.balance_after = operation.client.balance
        elif operation.operation_type == 'spend':
            operation.balance_before = operation.client.balance + operation.amount
            operation.balance_after = operation.client.balance
        elif operation.operation_type == 'correction':
            operation.balance_before = 0  # Или другая логика для корректировок
            operation.balance_after = operation.amount

        operation.save()


class Migration(migrations.Migration):
    dependencies = [
        ('core', '0006_balanceoperation_balance_after_and_more'),
    ]

    operations = [
        migrations.RunPython(
            populate_balance_values,
            reverse_code=migrations.RunPython.noop  # Откат не требуется
        ),
    ]